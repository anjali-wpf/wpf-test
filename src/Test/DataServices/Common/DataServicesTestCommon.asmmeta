#include "versions.h"
#include "ndp20.versions.h"

.assembly extern PresentationCore
{
	.publickeytoken = PRESENTATIONCORE_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver PRESENTATIONCORE_ASSEMBLY_VERSION_IL
}
.assembly extern PresentationFramework
{
	.publickeytoken = PRESENTATIONFRAMEWORK_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver PRESENTATIONFRAMEWORK_ASSEMBLY_VERSION_IL
}
.assembly extern System
{
	.publickeytoken = SYSTEM_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver SYSTEM_ASSEMBLY_VERSION_IL
}
.assembly extern System.Data
{
	.publickeytoken = SYSTEM_DATA_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver SYSTEM_DATA_ASSEMBLY_VERSION_IL
}
.assembly extern System.Drawing
{
	.publickeytoken = SYSTEM_DRAWING_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver SYSTEM_DRAWING_ASSEMBLY_VERSION_IL
}
.assembly extern System.Web.Services
{
	.publickeytoken = SYSTEM_WEB_SERVICES_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver SYSTEM_WEB_SERVICES_ASSEMBLY_VERSION_IL
}
.assembly extern System.Xml
{
	.publickeytoken = SYSTEM_XML_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver SYSTEM_XML_ASSEMBLY_VERSION_IL
}
.assembly extern System.Xml.Linq
{
	.publickeytoken = SYSTEM_XML_LINQ_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver SYSTEM_XML_LINQ_ASSEMBLY_VERSION_IL
}
.assembly extern TestRuntime
{
	.publickeytoken = TESTRUNTIME_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver TESTRUNTIME_ASSEMBLY_VERSION_IL
}
.assembly extern WindowsBase
{
	.publickeytoken = WINDOWSBASE_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver WINDOWSBASE_ASSEMBLY_VERSION_IL
}
.assembly extern mscorlib
{
	.publickeytoken = MSCORLIB_20_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver MSCORLIB_20_ASSEMBLY_VERSION_IL
}
.assembly DataServicesTestCommon
{
	.custom instance void [mscorlib]System.CLSCompliantAttribute::.ctor(bool) = { bool(true) }
	.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = { bool(false) }
	.custom instance void [mscorlib]System.Security.AllowPartiallyTrustedCallersAttribute::.ctor() = { }
	.permissionset reqmin = (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69 6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 32 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 15 01 54 02 10 53 6B 69 70 56 65 72 69 66 69 63 61 74 69 6F 6E 01)
	.publickey = DATASERVICESTESTCOMMON_ASSEMBLY_PUBLIC_KEY_IL
	.hash algorithm 0x00008004
	.ver DATASERVICESTESTCOMMON_ASSEMBLY_VERSION_IL
}
.namespace Codeplex
{
	.class public abstract sealed CriticalExceptions
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			bool IsCriticalException(class [mscorlib]System.Exception ex)
		{
			ret
		}
	}
	.class public XLinqDataProvider
		extends [WindowsBase]System.Windows.Data.DataSourceProvider
		implements [PresentationCore]System.Windows.Markup.IUriContext
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System]System.Uri get_Source()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Source(class [System]System.Uri 'value')
		{
			ret
		}
		.method public hidebysig 
			instance bool ShouldSerializeSource()
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Xml.Linq]System.Xml.Linq.XDocument get_Document()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Document(class [System.Xml.Linq]System.Xml.Linq.XDocument 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_XPath()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_XPath(string 'value')
		{
			ret
		}
		.method public hidebysig 
			instance bool ShouldSerializeXPath()
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsAsynchronous()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsAsynchronous(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Xml]System.Xml.Serialization.IXmlSerializable get_XmlSerializer()
		{
			ret
		}
		.method public hidebysig 
			instance bool ShouldSerializeXmlSerializer()
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance class [System]System.Uri System.Windows.Markup.IUriContext.get_BaseUri()
		{
			.override [PresentationCore]System.Windows.Markup.IUriContext::get_BaseUri
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance void System.Windows.Markup.IUriContext.set_BaseUri(class [System]System.Uri 'value')
		{
			.override [PresentationCore]System.Windows.Markup.IUriContext::set_BaseUri
			ret
		}
		.method family virtual hidebysig newslot specialname 
			instance class [System]System.Uri get_BaseUri()
		{
			ret
		}
		.method family virtual hidebysig newslot specialname 
			instance void set_BaseUri(class [System]System.Uri 'value')
		{
			ret
		}
		.method family virtual hidebysig 
			instance void BeginQuery()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void EndInit()
		{
			ret
		}
		.property instance class [System]System.Uri BaseUri()
		{
			.get instance class [System]System.Uri Codeplex.XLinqDataProvider::get_BaseUri()
			.set instance void Codeplex.XLinqDataProvider::set_BaseUri(class [System]System.Uri)
		}
		.property instance class [System.Xml.Linq]System.Xml.Linq.XDocument Document()
		{
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.get instance class [System.Xml.Linq]System.Xml.Linq.XDocument Codeplex.XLinqDataProvider::get_Document()
			.set instance void Codeplex.XLinqDataProvider::set_Document(class [System.Xml.Linq]System.Xml.Linq.XDocument)
		}
		.property instance bool IsAsynchronous()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(true) }
			.get instance bool Codeplex.XLinqDataProvider::get_IsAsynchronous()
			.set instance void Codeplex.XLinqDataProvider::set_IsAsynchronous(bool)
		}
		.property instance class [System]System.Uri Source()
		{
			.get instance class [System]System.Uri Codeplex.XLinqDataProvider::get_Source()
			.set instance void Codeplex.XLinqDataProvider::set_Source(class [System]System.Uri)
		}
		.property instance class [System]System.Uri System.Windows.Markup.IUriContext.BaseUri()
		{
			.get instance class [System]System.Uri Codeplex.XLinqDataProvider::System.Windows.Markup.IUriContext.get_BaseUri()
			.set instance void Codeplex.XLinqDataProvider::System.Windows.Markup.IUriContext.set_BaseUri(class [System]System.Uri)
		}
		.property instance string XPath()
		{
			.get instance string Codeplex.XLinqDataProvider::get_XPath()
			.set instance void Codeplex.XLinqDataProvider::set_XPath(string)
		}
		.property instance class [System.Xml]System.Xml.Serialization.IXmlSerializable XmlSerializer()
		{
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(2) }
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			.get instance class [System.Xml]System.Xml.Serialization.IXmlSerializable Codeplex.XLinqDataProvider::get_XmlSerializer()
		}
	}
}
.namespace Microsoft.Test.DataServices
{
	.class public AudioCD
		extends Microsoft.Test.DataServices.MediaItem
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string index)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(float64 index)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string title, string isbn, string artist, string publisher, float64 price)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string title, string isbn, string artist, string publisher, float64 price, bool isSpecialEdition, valuetype [mscorlib]System.DateTime releaseDate)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Artist()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Artist(string 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System.Xml]System.Xml.XmlNode ToXml(class [System.Xml]System.Xml.XmlDocument document)
		{
			ret
		}
		.property instance string Artist()
		{
			.get instance string Microsoft.Test.DataServices.AudioCD::get_Artist()
			.set instance void Microsoft.Test.DataServices.AudioCD::set_Artist(string)
		}
	}
	.class public sealed BeenThere
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.Test.DataServices.BeenThere BeenThereIn1980s = int32(0x00000002)
		.field static public literal valuetype Microsoft.Test.DataServices.BeenThere BeenThereIn1990s = int32(0x00000001)
		.field static public literal valuetype Microsoft.Test.DataServices.BeenThere BeenThereIn2000s = int32(0x00000000)
		.field static public literal valuetype Microsoft.Test.DataServices.BeenThere NeverBeenThere = int32(0x00000003)
	}
	.class public BeenThereConverterClr
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public BeenThereConverterXml
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public abstract sealed BeenThereGroups
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			object GetGroups(string countryName, object country)
		{
			ret
		}
	}
	.class public Book
		extends Microsoft.Test.DataServices.MediaItem
	{
		.class nested public sealed BookGenre
			extends [mscorlib]System.Enum
		{
			.field public rtspecialname specialname int32 value__
			.field static public literal valuetype Microsoft.Test.DataServices.Book/BookGenre Comic = int32(0x00000004)
			.field static public literal valuetype Microsoft.Test.DataServices.Book/BookGenre Mystery = int32(0x00000000)
			.field static public literal valuetype Microsoft.Test.DataServices.Book/BookGenre Reference = int32(0x00000001)
			.field static public literal valuetype Microsoft.Test.DataServices.Book/BookGenre Romance = int32(0x00000003)
			.field static public literal valuetype Microsoft.Test.DataServices.Book/BookGenre SciFi = int32(0x00000002)
			.field static public literal valuetype Microsoft.Test.DataServices.Book/BookGenre SelfHelp = int32(0x00000005)
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string index)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(float64 index)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string title, string isbn, string author, string publisher, float64 price, valuetype Microsoft.Test.DataServices.Book/BookGenre genre)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string title, string isbn, string author, string publisher, float64 price, valuetype Microsoft.Test.DataServices.Book/BookGenre genre, bool isSpecialEdition, valuetype [mscorlib]System.DateTime releaseDate)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Author()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Author(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.Test.DataServices.Book/BookGenre get_Genre()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Genre(valuetype Microsoft.Test.DataServices.Book/BookGenre 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System.Xml]System.Xml.XmlNode ToXml(class [System.Xml]System.Xml.XmlDocument document)
		{
			ret
		}
		.property instance string Author()
		{
			.get instance string Microsoft.Test.DataServices.Book::get_Author()
			.set instance void Microsoft.Test.DataServices.Book::set_Author(string)
		}
		.property instance valuetype Microsoft.Test.DataServices.Book/BookGenre Genre()
		{
			.get instance valuetype Microsoft.Test.DataServices.Book/BookGenre Microsoft.Test.DataServices.Book::get_Genre()
			.set instance void Microsoft.Test.DataServices.Book::set_Genre(valuetype Microsoft.Test.DataServices.Book/BookGenre)
		}
	}
	.class public BookDataSource
		extends [WindowsBase]System.Windows.Data.DataSourceProvider
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void BeginQuery()
		{
			ret
		}
	}
	.class public BookSource
		extends [mscorlib]System.Object
		implements [System]System.ComponentModel.INotifyPropertyChanged
	{
		.method public hidebysig specialname 
			instance void .ctor(string isbn, string title)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ISBN()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ISBN(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Title()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Title(string 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.event [System]System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			.addon instance void Microsoft.Test.DataServices.BookSource::add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void Microsoft.Test.DataServices.BookSource::remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
		}
		.property instance string 'ISBN'()
		{
			.get instance string Microsoft.Test.DataServices.BookSource::get_ISBN()
			.set instance void Microsoft.Test.DataServices.BookSource::set_ISBN(string)
		}
		.property instance string Title()
		{
			.get instance string Microsoft.Test.DataServices.BookSource::get_Title()
			.set instance void Microsoft.Test.DataServices.BookSource::set_Title(string)
		}
	}
	.class public sealed BookType
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.Test.DataServices.BookType Fiction = int32(0x00000002)
		.field static public literal valuetype Microsoft.Test.DataServices.BookType Lyrics = int32(0x00000001)
		.field static public literal valuetype Microsoft.Test.DataServices.BookType Novel = int32(0x00000000)
		.field static public literal valuetype Microsoft.Test.DataServices.BookType Reference = int32(0x00000003)
	}
	.class public BooleanToVisibleConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object Convert(object o, class [mscorlib]System.Type 'type', object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object o, class [mscorlib]System.Type 'type', object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
	}
	.class public CLRBook
		extends [mscorlib]System.Object
		implements [System]System.ComponentModel.INotifyPropertyChanged
	{
		.method public hidebysig specialname 
			instance void .ctor(string title, string author, int32 year, float64 price, valuetype Microsoft.Test.DataServices.BookType 'type')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Title()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Title(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Author()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Author(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Year()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Year(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_Price()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Price(float64 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.Test.DataServices.BookType get_BookType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BookType(valuetype Microsoft.Test.DataServices.BookType 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method family hidebysig 
			instance void RaisePropertyChangedEvent(string propertyname)
		{
			ret
		}
		.event [System]System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			.addon instance void Microsoft.Test.DataServices.CLRBook::add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void Microsoft.Test.DataServices.CLRBook::remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
		}
		.property instance string Author()
		{
			.get instance string Microsoft.Test.DataServices.CLRBook::get_Author()
			.set instance void Microsoft.Test.DataServices.CLRBook::set_Author(string)
		}
		.property instance valuetype Microsoft.Test.DataServices.BookType BookType()
		{
			.get instance valuetype Microsoft.Test.DataServices.BookType Microsoft.Test.DataServices.CLRBook::get_BookType()
			.set instance void Microsoft.Test.DataServices.CLRBook::set_BookType(valuetype Microsoft.Test.DataServices.BookType)
		}
		.property instance float64 Price()
		{
			.get instance float64 Microsoft.Test.DataServices.CLRBook::get_Price()
			.set instance void Microsoft.Test.DataServices.CLRBook::set_Price(float64)
		}
		.property instance string Title()
		{
			.get instance string Microsoft.Test.DataServices.CLRBook::get_Title()
			.set instance void Microsoft.Test.DataServices.CLRBook::set_Title(string)
		}
		.property instance int32 Year()
		{
			.get instance int32 Microsoft.Test.DataServices.CLRBook::get_Year()
			.set instance void Microsoft.Test.DataServices.CLRBook::set_Year(int32)
		}
	}
	.class public ClrBookAProxy
		extends Microsoft.Test.DataServices.ClrBookProxy
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ClrBookBProxy
		extends Microsoft.Test.DataServices.ClrBookProxy
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ClrBookListAProxy
		extends Microsoft.Test.DataServices.ClrBookListProxy
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ClrBookListBProxy
		extends Microsoft.Test.DataServices.ClrBookListProxy
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ClrBookListProxy
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig 
			instance class Microsoft.Test.DataServices.Library GetBooksA()
		{
			ret
		}
		.method public hidebysig 
			instance class Microsoft.Test.DataServices.Library GetBooksA(int32 startAt)
		{
			ret
		}
		.method public hidebysig 
			instance class Microsoft.Test.DataServices.Library GetBooksA(int32 startAt, int32 endBefore)
		{
			ret
		}
		.method public hidebysig 
			instance class Microsoft.Test.DataServices.Library GetBooksB()
		{
			ret
		}
		.method public hidebysig 
			instance class Microsoft.Test.DataServices.Library GetBooksB(int32 startAt)
		{
			ret
		}
		.method public hidebysig 
			instance class Microsoft.Test.DataServices.Library GetBooksB(int32 startAt, int32 endBefore)
		{
			ret
		}
		.field family class Microsoft.Test.DataServices.Library 'library'
	}
	.class public ClrBookProxy
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig 
			instance class Microsoft.Test.DataServices.Book GetBookA()
		{
			ret
		}
		.method public hidebysig 
			instance class Microsoft.Test.DataServices.Book GetBookA(int32 a)
		{
			ret
		}
		.method public hidebysig 
			instance class Microsoft.Test.DataServices.Book GetBookA(int32 a, int32 b)
		{
			ret
		}
		.method public hidebysig 
			instance class Microsoft.Test.DataServices.Book GetBookB()
		{
			ret
		}
		.method public hidebysig 
			instance class Microsoft.Test.DataServices.Book GetBookB(int32 a)
		{
			ret
		}
		.method public hidebysig 
			instance class Microsoft.Test.DataServices.Book GetBookB(int32 a, int32 b)
		{
			ret
		}
		.field family float64 revision
	}
	.class public CollectionChangedVerifier
		extends [mscorlib]System.Object
		implements [TestRuntime]Microsoft.Test.Verification.IVerifier
	{
		.method public hidebysig specialname 
			instance void .ctor(class [WindowsBase]System.Collections.Specialized.INotifyCollectionChanged collection)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [WindowsBase]System.ComponentModel.ICollectionView collection)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [TestRuntime]Microsoft.Test.Verification.IVerifyResult Verify(object[] expectedState)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
	}
	.class public CollectionViewOrderVerifier
		extends [mscorlib]System.Object
		implements [TestRuntime]Microsoft.Test.Verification.IVerifier
	{
		.method public hidebysig specialname 
			instance void .ctor(class [WindowsBase]System.ComponentModel.ICollectionView cv)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [TestRuntime]Microsoft.Test.Verification.IVerifyResult Verify(object[] expectedState)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
	}
	.class public sealed ComparableByValueAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = { int32(128) }
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ConcatStringValueConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IMultiValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object[] values, class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object[] ConvertBack(object 'value', class [mscorlib]System.Type[] targetTypes, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ConvertTemperatureCompletedEventArgs
		extends [System]System.ComponentModel.AsyncCompletedEventArgs
	{
		.custom instance void [System]System.ComponentModel.DesignerCategoryAttribute::.ctor(string) = { string('code') }
		.method public hidebysig specialname 
			instance float64 get_Result()
		{
			ret
		}
		.property instance float64 Result()
		{
			.get instance float64 Microsoft.Test.DataServices.ConvertTemperatureCompletedEventArgs::get_Result()
		}
	}
	.class public sealed ConvertTemperatureCompletedEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class Microsoft.Test.DataServices.ConvertTemperatureCompletedEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class Microsoft.Test.DataServices.ConvertTemperatureCompletedEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public CountriesDataSource
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Microsoft.Test.DataServices.CountryWithExtraInfo> get_Countries()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Countries(class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Microsoft.Test.DataServices.CountryWithExtraInfo> 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Microsoft.Test.DataServices.CountryWithExtraInfo> Countries()
		{
			.get instance class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Microsoft.Test.DataServices.CountryWithExtraInfo> Microsoft.Test.DataServices.CountriesDataSource::get_Countries()
			.set instance void Microsoft.Test.DataServices.CountriesDataSource::set_Countries(class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Microsoft.Test.DataServices.CountryWithExtraInfo>)
		}
	}
	.class public CountriesDataTable
		extends [System.Data]System.Data.DataTable
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public Country
		extends [mscorlib]System.Object
		implements [System]System.ComponentModel.INotifyPropertyChanged
	{
		.method public hidebysig specialname 
			instance string get_CountryName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_CountryName(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Capital()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Capital(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [mscorlib]System.DateTime get_IndependenceDay()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IndependenceDay(valuetype [mscorlib]System.DateTime 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Population()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Population(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.Test.DataServices.GovernmentType get_Government()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Government(valuetype Microsoft.Test.DataServices.GovernmentType 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method family hidebysig 
			instance void OnPropertyChanged(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string countryName, string capital, valuetype [mscorlib]System.DateTime independenceDay, int32 population, valuetype Microsoft.Test.DataServices.GovernmentType government)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.event [System]System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			.addon instance void Microsoft.Test.DataServices.Country::add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void Microsoft.Test.DataServices.Country::remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
		}
		.property instance string Capital()
		{
			.get instance string Microsoft.Test.DataServices.Country::get_Capital()
			.set instance void Microsoft.Test.DataServices.Country::set_Capital(string)
		}
		.property instance string CountryName()
		{
			.get instance string Microsoft.Test.DataServices.Country::get_CountryName()
			.set instance void Microsoft.Test.DataServices.Country::set_CountryName(string)
		}
		.property instance valuetype Microsoft.Test.DataServices.GovernmentType Government()
		{
			.get instance valuetype Microsoft.Test.DataServices.GovernmentType Microsoft.Test.DataServices.Country::get_Government()
			.set instance void Microsoft.Test.DataServices.Country::set_Government(valuetype Microsoft.Test.DataServices.GovernmentType)
		}
		.property instance valuetype [mscorlib]System.DateTime IndependenceDay()
		{
			.get instance valuetype [mscorlib]System.DateTime Microsoft.Test.DataServices.Country::get_IndependenceDay()
			.set instance void Microsoft.Test.DataServices.Country::set_IndependenceDay(valuetype [mscorlib]System.DateTime)
		}
		.property instance int32 Population()
		{
			.get instance int32 Microsoft.Test.DataServices.Country::get_Population()
			.set instance void Microsoft.Test.DataServices.Country::set_Population(int32)
		}
	}
	.class public CountryWithExtraInfo
		extends Microsoft.Test.DataServices.Country
	{
		.method public hidebysig specialname 
			instance string get_Region()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Region(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Hemisphere()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Hemisphere(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string countryName, string capital, valuetype [mscorlib]System.DateTime independenceDay, int32 population, valuetype Microsoft.Test.DataServices.GovernmentType government, string region, string hemisphere)
		{
			ret
		}
		.property instance string Hemisphere()
		{
			.get instance string Microsoft.Test.DataServices.CountryWithExtraInfo::get_Hemisphere()
			.set instance void Microsoft.Test.DataServices.CountryWithExtraInfo::set_Hemisphere(string)
		}
		.property instance string Region()
		{
			.get instance string Microsoft.Test.DataServices.CountryWithExtraInfo::get_Region()
			.set instance void Microsoft.Test.DataServices.CountryWithExtraInfo::set_Region(string)
		}
	}
	.class public CultureConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public CurrentChangedVerifier
		extends [mscorlib]System.Object
		implements [TestRuntime]Microsoft.Test.Verification.IVerifier
	{
		.method public hidebysig specialname 
			instance void .ctor(class [WindowsBase]System.ComponentModel.ICollectionView currentitem)
		{
			ret
		}
		.method public hidebysig 
			instance void onCurrentChanged(object sender, class [mscorlib]System.EventArgs args)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [TestRuntime]Microsoft.Test.Verification.IVerifyResult Verify(object[] expectedState)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void RemoveEventHandler(class [WindowsBase]System.ComponentModel.ICollectionView currentitem)
		{
			ret
		}
	}
	.class public CurrentChangingVerifier
		extends [mscorlib]System.Object
		implements [TestRuntime]Microsoft.Test.Verification.IVerifier
	{
		.method public hidebysig specialname 
			instance bool get_CancelEvent()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_CancelEvent(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [WindowsBase]System.ComponentModel.ICollectionView currentitem)
		{
			ret
		}
		.method public hidebysig 
			instance void onCurrentChanging(object sender, class [WindowsBase]System.ComponentModel.CurrentChangingEventArgs args)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [TestRuntime]Microsoft.Test.Verification.IVerifyResult Verify(object[] expectedState)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void RemoveEventHandler(class [WindowsBase]System.ComponentModel.ICollectionView currentitem)
		{
			ret
		}
		.property instance bool CancelEvent()
		{
			.get instance bool Microsoft.Test.DataServices.CurrentChangingVerifier::get_CancelEvent()
			.set instance void Microsoft.Test.DataServices.CurrentChangingVerifier::set_CancelEvent(bool)
		}
	}
	.class public CurrentItemVerifier
		extends [mscorlib]System.Object
		implements [TestRuntime]Microsoft.Test.Verification.IVerifier
	{
		.method public hidebysig specialname 
			instance void .ctor(class [WindowsBase]System.ComponentModel.ICollectionView coll)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [TestRuntime]Microsoft.Test.Verification.IVerifyResult Verify(object[] ExpectedState)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
	}
	.class public CustomIList
		extends [mscorlib]System.Object
		implements [mscorlib]System.Collections.IList, [mscorlib]System.Collections.ICollection, [mscorlib]System.Collections.IEnumerable
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = { string('Item') }
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_NumCount()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_NumCount(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_NumContains()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_NumContains(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_NumIndexOf()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_NumIndexOf(int32 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance int32 Add(object 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Clear()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool Contains(object 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance int32 IndexOf(object 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Insert(int32 index, object 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsFixedSize()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsReadOnly()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Remove(object 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void RemoveAt(int32 index)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance object get_Item(int32 index)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_Item(int32 index, object 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void CopyTo(class [mscorlib]System.Array 'array', int32 index)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsSynchronized()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance object get_SyncRoot()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator GetEnumerator()
		{
			ret
		}
		.property instance int32 Count()
		{
			.get instance int32 Microsoft.Test.DataServices.CustomIList::get_Count()
		}
		.property instance bool IsFixedSize()
		{
			.get instance bool Microsoft.Test.DataServices.CustomIList::get_IsFixedSize()
		}
		.property instance bool IsReadOnly()
		{
			.get instance bool Microsoft.Test.DataServices.CustomIList::get_IsReadOnly()
		}
		.property instance bool IsSynchronized()
		{
			.get instance bool Microsoft.Test.DataServices.CustomIList::get_IsSynchronized()
		}
		.property instance object Item(int32)
		{
			.get instance object Microsoft.Test.DataServices.CustomIList::get_Item(int32)
			.set instance void Microsoft.Test.DataServices.CustomIList::set_Item(int32, object)
		}
		.property instance int32 NumContains()
		{
			.get instance int32 Microsoft.Test.DataServices.CustomIList::get_NumContains()
			.set instance void Microsoft.Test.DataServices.CustomIList::set_NumContains(int32)
		}
		.property instance int32 NumCount()
		{
			.get instance int32 Microsoft.Test.DataServices.CustomIList::get_NumCount()
			.set instance void Microsoft.Test.DataServices.CustomIList::set_NumCount(int32)
		}
		.property instance int32 NumIndexOf()
		{
			.get instance int32 Microsoft.Test.DataServices.CustomIList::get_NumIndexOf()
			.set instance void Microsoft.Test.DataServices.CustomIList::set_NumIndexOf(int32)
		}
		.property instance object SyncRoot()
		{
			.get instance object Microsoft.Test.DataServices.CustomIList::get_SyncRoot()
		}
	}
	.class public CustomObject
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance class Microsoft.Test.DataServices.CustomIList get_CustomList()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_CustomList(class Microsoft.Test.DataServices.CustomIList 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Name(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class Microsoft.Test.DataServices.CustomIList CustomList()
		{
			.get instance class Microsoft.Test.DataServices.CustomIList Microsoft.Test.DataServices.CustomObject::get_CustomList()
			.set instance void Microsoft.Test.DataServices.CustomObject::set_CustomList(class Microsoft.Test.DataServices.CustomIList)
		}
		.property instance string Name()
		{
			.get instance string Microsoft.Test.DataServices.CustomObject::get_Name()
			.set instance void Microsoft.Test.DataServices.CustomObject::set_Name(string)
		}
	}
	.class public abstract sealed DataSourceHelper
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			object WaitForData(class [WindowsBase]System.Windows.Data.DataSourceProvider dataSource)
		{
			ret
		}
		.method public static hidebysig 
			object WaitForData(class [WindowsBase]System.Windows.Data.DataSourceProvider dataSource, valuetype [mscorlib]System.TimeSpan timeout)
		{
			ret
		}
	}
	.class public abstract DataSourceViewProvider
		extends [mscorlib]System.Object
	{
		.method family hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Collections.IEnumerable data, bool canAddRemove, bool canFilter)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Collections.IEnumerable get_Source()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class [WindowsBase]System.ComponentModel.ICollectionView get_View()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_CanAddRemove()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_CanSort()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_CanFilter()
		{
			ret
		}
		.method public hidebysig 
			instance void Add(object item)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void AddCore(object item)
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(object item)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void RemoveCore(object item)
		{
			ret
		}
		.method public hidebysig 
			instance void Sort(valuetype [WindowsBase]System.ComponentModel.SortDescription sortDescription)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void SortCore(valuetype [WindowsBase]System.ComponentModel.SortDescription sortDescription)
		{
			ret
		}
		.method public hidebysig 
			instance void ClearSort()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void ClearSortCore()
		{
			ret
		}
		.method public hidebysig 
			instance void Filter(string propertyName, valuetype Microsoft.Test.DataServices.FilterOperator filterOperator, object valueToFilterBy)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void FilterCore(string propertyName, valuetype Microsoft.Test.DataServices.FilterOperator filterOperator, object valueToFilterBy)
		{
			ret
		}
		.method public hidebysig 
			instance void ClearFilter()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void ClearFilterCore()
		{
			ret
		}
		.method public hidebysig 
			instance bool CompareByValue(object primaryForm, object dataSourceForm)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance class [System]System.ComponentModel.PropertyDescriptorCollection ConvertToCanonical(object item)
		{
			ret
		}
		.method family virtual hidebysig newslot abstract 
			instance class [mscorlib]System.Collections.IEnumerable CreateDataSource(class [mscorlib]System.Collections.IEnumerable data)
		{
		}
		.method public static hidebysig 
			class Microsoft.Test.DataServices.DataSourceViewProvider CreateDataSourceViewProvider(class [mscorlib]System.Type dataSourceViewProviderType, class [mscorlib]System.Collections.IEnumerable data)
		{
			ret
		}
		.method family static hidebysig 
			bool DoesValuePassFilter(object valueToEvaluate, object valueToFilterBy, valuetype Microsoft.Test.DataServices.FilterOperator filterOperator)
		{
			ret
		}
		.method family static hidebysig 
			class [System]System.ComponentModel.PropertyDescriptor[] GetByValueComparableProperties(object item)
		{
			ret
		}
		.property instance bool CanAddRemove()
		{
			.get instance bool Microsoft.Test.DataServices.DataSourceViewProvider::get_CanAddRemove()
		}
		.property instance bool CanFilter()
		{
			.get instance bool Microsoft.Test.DataServices.DataSourceViewProvider::get_CanFilter()
		}
		.property instance bool CanSort()
		{
			.get instance bool Microsoft.Test.DataServices.DataSourceViewProvider::get_CanSort()
		}
		.property instance class [mscorlib]System.Collections.IEnumerable Source()
		{
			.get instance class [mscorlib]System.Collections.IEnumerable Microsoft.Test.DataServices.DataSourceViewProvider::get_Source()
		}
		.property instance class [WindowsBase]System.ComponentModel.ICollectionView View()
		{
			.get instance class [WindowsBase]System.ComponentModel.ICollectionView Microsoft.Test.DataServices.DataSourceViewProvider::get_View()
		}
	}
	.class public DataTableSource
		extends [System.Data]System.Data.DataTable
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string maxrows)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 maxrows)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Collections.ArrayList list)
		{
			ret
		}
	}
	.class public DataViewViewProvider
		extends Microsoft.Test.DataServices.DataSourceViewProvider
	{
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Collections.IEnumerable data)
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [mscorlib]System.Collections.IEnumerable CreateDataSource(class [mscorlib]System.Collections.IEnumerable data)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void AddCore(object item)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void RemoveCore(object item)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void SortCore(valuetype [WindowsBase]System.ComponentModel.SortDescription sortDescription)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void ClearSortCore()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void FilterCore(string propertyName, valuetype Microsoft.Test.DataServices.FilterOperator filterOperator, object valueToFilterBy)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void ClearFilterCore()
		{
			ret
		}
	}
	.class public DateTimeToStringConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public Dev
		extends Microsoft.Test.DataServices.Employee
	{
		.method public hidebysig specialname 
			instance void .ctor(string name, string phone, string team, int32 bugsFixed)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_BugsFixed()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BugsFixed(int32 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Title()
		{
			ret
		}
		.property instance int32 BugsFixed()
		{
			.get instance int32 Microsoft.Test.DataServices.Dev::get_BugsFixed()
			.set instance void Microsoft.Test.DataServices.Dev::set_BugsFixed(int32)
		}
		.property instance string Title()
		{
			.get instance string Microsoft.Test.DataServices.Dev::get_Title()
		}
	}
	.class public Division
		extends [mscorlib]System.Object
		implements [System]System.ComponentModel.INotifyPropertyChanged
	{
		.method public hidebysig specialname 
			instance void .ctor(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Name(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.List`1'<class Microsoft.Test.DataServices.Team> get_Teams()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.event [System]System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			.addon instance void Microsoft.Test.DataServices.Division::add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void Microsoft.Test.DataServices.Division::remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
		}
		.property instance string Name()
		{
			.get instance string Microsoft.Test.DataServices.Division::get_Name()
			.set instance void Microsoft.Test.DataServices.Division::set_Name(string)
		}
		.property instance class [mscorlib]'System.Collections.Generic.List`1'<class Microsoft.Test.DataServices.Team> Teams()
		{
			.get instance class [mscorlib]'System.Collections.Generic.List`1'<class Microsoft.Test.DataServices.Team> Microsoft.Test.DataServices.Division::get_Teams()
		}
	}
	.class public serializable DotNetBook
		extends [mscorlib]System.Object
	{
		.custom instance void [System]System.ComponentModel.DesignerCategoryAttribute::.ctor(string) = { string('code') }
		.method public hidebysig specialname 
			instance string get_Title()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Title(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Author()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Author(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_Price()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Price(float64 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance string Author()
		{
			.get instance string Microsoft.Test.DataServices.DotNetBook::get_Author()
			.set instance void Microsoft.Test.DataServices.DotNetBook::set_Author(string)
		}
		.property instance float64 Price()
		{
			.get instance float64 Microsoft.Test.DataServices.DotNetBook::get_Price()
			.set instance void Microsoft.Test.DataServices.DotNetBook::set_Price(float64)
		}
		.property instance string Title()
		{
			.get instance string Microsoft.Test.DataServices.DotNetBook::get_Title()
			.set instance void Microsoft.Test.DataServices.DotNetBook::set_Title(string)
		}
	}
	.class public DotNetWebService
		extends [System.Web.Services]System.Web.Services.Protocols.SoapHttpClientProtocol
	{
		.custom instance void [System]System.ComponentModel.DesignerCategoryAttribute::.ctor(string) = { string('code') }
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_GetStoreNameCompleted(class Microsoft.Test.DataServices.GetStoreNameCompletedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_GetStoreNameCompleted(class Microsoft.Test.DataServices.GetStoreNameCompletedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_MirrorStringCompleted(class Microsoft.Test.DataServices.MirrorStringCompletedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_MirrorStringCompleted(class Microsoft.Test.DataServices.MirrorStringCompletedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_GetTopAuthorsCompleted(class Microsoft.Test.DataServices.GetTopAuthorsCompletedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_GetTopAuthorsCompleted(class Microsoft.Test.DataServices.GetTopAuthorsCompletedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_GetTopAuthors1Completed(class Microsoft.Test.DataServices.GetTopAuthors1CompletedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_GetTopAuthors1Completed(class Microsoft.Test.DataServices.GetTopAuthors1CompletedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_GetAuthorsCompleted(class Microsoft.Test.DataServices.GetAuthorsCompletedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_GetAuthorsCompleted(class Microsoft.Test.DataServices.GetAuthorsCompletedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_GetTopAuthors2Completed(class Microsoft.Test.DataServices.GetTopAuthors2CompletedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_GetTopAuthors2Completed(class Microsoft.Test.DataServices.GetTopAuthors2CompletedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_ConvertTemperatureCompleted(class Microsoft.Test.DataServices.ConvertTemperatureCompletedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_ConvertTemperatureCompleted(class Microsoft.Test.DataServices.ConvertTemperatureCompletedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_GetBookCompleted(class Microsoft.Test.DataServices.GetBookCompletedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_GetBookCompleted(class Microsoft.Test.DataServices.GetBookCompletedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_GetBook1Completed(class Microsoft.Test.DataServices.GetBook1CompletedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_GetBook1Completed(class Microsoft.Test.DataServices.GetBook1CompletedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_GetBooksByAuthorCompleted(class Microsoft.Test.DataServices.GetBooksByAuthorCompletedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_GetBooksByAuthorCompleted(class Microsoft.Test.DataServices.GetBooksByAuthorCompletedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_GetTotalCompleted(class Microsoft.Test.DataServices.GetTotalCompletedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_GetTotalCompleted(class Microsoft.Test.DataServices.GetTotalCompletedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_GetInventoryCountCompleted(class Microsoft.Test.DataServices.GetInventoryCountCompletedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_GetInventoryCountCompleted(class Microsoft.Test.DataServices.GetInventoryCountCompletedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig 
			instance string GetStoreName()
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginGetStoreName(class [mscorlib]System.AsyncCallback callback, object asyncState)
		{
			ret
		}
		.method public hidebysig 
			instance string EndGetStoreName(class [mscorlib]System.IAsyncResult asyncResult)
		{
			ret
		}
		.method public hidebysig 
			instance void GetStoreNameAsync()
		{
			ret
		}
		.method public hidebysig 
			instance void GetStoreNameAsync(object userState)
		{
			ret
		}
		.method public hidebysig 
			instance string MirrorString(string strIn)
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginMirrorString(string strIn, class [mscorlib]System.AsyncCallback callback, object asyncState)
		{
			ret
		}
		.method public hidebysig 
			instance string EndMirrorString(class [mscorlib]System.IAsyncResult asyncResult)
		{
			ret
		}
		.method public hidebysig 
			instance void MirrorStringAsync(string strIn)
		{
			ret
		}
		.method public hidebysig 
			instance void MirrorStringAsync(string strIn, object userState)
		{
			ret
		}
		.method public hidebysig 
			instance string[] GetTopAuthors()
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginGetTopAuthors(class [mscorlib]System.AsyncCallback callback, object asyncState)
		{
			ret
		}
		.method public hidebysig 
			instance string[] EndGetTopAuthors(class [mscorlib]System.IAsyncResult asyncResult)
		{
			ret
		}
		.method public hidebysig 
			instance void GetTopAuthorsAsync()
		{
			ret
		}
		.method public hidebysig 
			instance void GetTopAuthorsAsync(object userState)
		{
			ret
		}
		.method public hidebysig 
			instance string[] GetTopAuthors(int32 'to')
		{
			.custom instance void [System.Web.Services]System.Web.Services.WebMethodAttribute::.ctor() = { property string MessageName = string('GetTopAuthors1') }
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginGetTopAuthors1(int32 'to', class [mscorlib]System.AsyncCallback callback, object asyncState)
		{
			ret
		}
		.method public hidebysig 
			instance string[] EndGetTopAuthors1(class [mscorlib]System.IAsyncResult asyncResult)
		{
			ret
		}
		.method public hidebysig 
			instance void GetTopAuthors1Async(int32 'to')
		{
			ret
		}
		.method public hidebysig 
			instance void GetTopAuthors1Async(int32 'to', object userState)
		{
			ret
		}
		.method public hidebysig 
			instance string[] GetAuthors(int32 from, int32 'to')
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginGetAuthors(int32 from, int32 'to', class [mscorlib]System.AsyncCallback callback, object asyncState)
		{
			ret
		}
		.method public hidebysig 
			instance string[] EndGetAuthors(class [mscorlib]System.IAsyncResult asyncResult)
		{
			ret
		}
		.method public hidebysig 
			instance void GetAuthorsAsync(int32 from, int32 'to')
		{
			ret
		}
		.method public hidebysig 
			instance void GetAuthorsAsync(int32 from, int32 'to', object userState)
		{
			ret
		}
		.method public hidebysig 
			instance int32 GetTopAuthors(string[] list)
		{
			.custom instance void [System.Web.Services]System.Web.Services.WebMethodAttribute::.ctor() = { property string MessageName = string('GetTopAuthors2') }
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginGetTopAuthors2(string[] list, class [mscorlib]System.AsyncCallback callback, object asyncState)
		{
			ret
		}
		.method public hidebysig 
			instance int32 EndGetTopAuthors2(class [mscorlib]System.IAsyncResult asyncResult)
		{
			ret
		}
		.method public hidebysig 
			instance void GetTopAuthors2Async(string[] list)
		{
			ret
		}
		.method public hidebysig 
			instance void GetTopAuthors2Async(string[] list, object userState)
		{
			ret
		}
		.method public hidebysig 
			instance float64 ConvertTemperature(float64 dFahrenheit)
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginConvertTemperature(float64 dFahrenheit, class [mscorlib]System.AsyncCallback callback, object asyncState)
		{
			ret
		}
		.method public hidebysig 
			instance float64 EndConvertTemperature(class [mscorlib]System.IAsyncResult asyncResult)
		{
			ret
		}
		.method public hidebysig 
			instance void ConvertTemperatureAsync(float64 dFahrenheit)
		{
			ret
		}
		.method public hidebysig 
			instance void ConvertTemperatureAsync(float64 dFahrenheit, object userState)
		{
			ret
		}
		.method public hidebysig 
			instance class Microsoft.Test.DataServices.DotNetBook GetBook()
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginGetBook(class [mscorlib]System.AsyncCallback callback, object asyncState)
		{
			ret
		}
		.method public hidebysig 
			instance class Microsoft.Test.DataServices.DotNetBook EndGetBook(class [mscorlib]System.IAsyncResult asyncResult)
		{
			ret
		}
		.method public hidebysig 
			instance void GetBookAsync()
		{
			ret
		}
		.method public hidebysig 
			instance void GetBookAsync(object userState)
		{
			ret
		}
		.method public hidebysig 
			instance class Microsoft.Test.DataServices.DotNetBook GetBook(string title)
		{
			.custom instance void [System.Web.Services]System.Web.Services.WebMethodAttribute::.ctor() = { property string MessageName = string('GetBook1') }
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginGetBook1(string title, class [mscorlib]System.AsyncCallback callback, object asyncState)
		{
			ret
		}
		.method public hidebysig 
			instance class Microsoft.Test.DataServices.DotNetBook EndGetBook1(class [mscorlib]System.IAsyncResult asyncResult)
		{
			ret
		}
		.method public hidebysig 
			instance void GetBook1Async(string title)
		{
			ret
		}
		.method public hidebysig 
			instance void GetBook1Async(string title, object userState)
		{
			ret
		}
		.method public hidebysig 
			instance class Microsoft.Test.DataServices.DotNetBook[] GetBooksByAuthor(string author)
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginGetBooksByAuthor(string author, class [mscorlib]System.AsyncCallback callback, object asyncState)
		{
			ret
		}
		.method public hidebysig 
			instance class Microsoft.Test.DataServices.DotNetBook[] EndGetBooksByAuthor(class [mscorlib]System.IAsyncResult asyncResult)
		{
			ret
		}
		.method public hidebysig 
			instance void GetBooksByAuthorAsync(string author)
		{
			ret
		}
		.method public hidebysig 
			instance void GetBooksByAuthorAsync(string author, object userState)
		{
			ret
		}
		.method public hidebysig 
			instance float64 GetTotal(class Microsoft.Test.DataServices.DotNetBook[] books)
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginGetTotal(class Microsoft.Test.DataServices.DotNetBook[] books, class [mscorlib]System.AsyncCallback callback, object asyncState)
		{
			ret
		}
		.method public hidebysig 
			instance float64 EndGetTotal(class [mscorlib]System.IAsyncResult asyncResult)
		{
			ret
		}
		.method public hidebysig 
			instance void GetTotalAsync(class Microsoft.Test.DataServices.DotNetBook[] books)
		{
			ret
		}
		.method public hidebysig 
			instance void GetTotalAsync(class Microsoft.Test.DataServices.DotNetBook[] books, object userState)
		{
			ret
		}
		.method public hidebysig 
			instance int32 GetInventoryCount(class Microsoft.Test.DataServices.DotNetBook book)
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.IAsyncResult BeginGetInventoryCount(class Microsoft.Test.DataServices.DotNetBook book, class [mscorlib]System.AsyncCallback callback, object asyncState)
		{
			ret
		}
		.method public hidebysig 
			instance int32 EndGetInventoryCount(class [mscorlib]System.IAsyncResult asyncResult)
		{
			ret
		}
		.method public hidebysig 
			instance void GetInventoryCountAsync(class Microsoft.Test.DataServices.DotNetBook book)
		{
			ret
		}
		.method public hidebysig 
			instance void GetInventoryCountAsync(class Microsoft.Test.DataServices.DotNetBook book, object userState)
		{
			ret
		}
		.method public hidebysig 
			instance void CancelAsync(object userState)
		{
			ret
		}
		.event Microsoft.Test.DataServices.ConvertTemperatureCompletedEventHandler ConvertTemperatureCompleted
		{
			.addon instance void Microsoft.Test.DataServices.DotNetWebService::add_ConvertTemperatureCompleted(class Microsoft.Test.DataServices.ConvertTemperatureCompletedEventHandler)
			.removeon instance void Microsoft.Test.DataServices.DotNetWebService::remove_ConvertTemperatureCompleted(class Microsoft.Test.DataServices.ConvertTemperatureCompletedEventHandler)
		}
		.event Microsoft.Test.DataServices.GetAuthorsCompletedEventHandler GetAuthorsCompleted
		{
			.addon instance void Microsoft.Test.DataServices.DotNetWebService::add_GetAuthorsCompleted(class Microsoft.Test.DataServices.GetAuthorsCompletedEventHandler)
			.removeon instance void Microsoft.Test.DataServices.DotNetWebService::remove_GetAuthorsCompleted(class Microsoft.Test.DataServices.GetAuthorsCompletedEventHandler)
		}
		.event Microsoft.Test.DataServices.GetBook1CompletedEventHandler GetBook1Completed
		{
			.addon instance void Microsoft.Test.DataServices.DotNetWebService::add_GetBook1Completed(class Microsoft.Test.DataServices.GetBook1CompletedEventHandler)
			.removeon instance void Microsoft.Test.DataServices.DotNetWebService::remove_GetBook1Completed(class Microsoft.Test.DataServices.GetBook1CompletedEventHandler)
		}
		.event Microsoft.Test.DataServices.GetBookCompletedEventHandler GetBookCompleted
		{
			.addon instance void Microsoft.Test.DataServices.DotNetWebService::add_GetBookCompleted(class Microsoft.Test.DataServices.GetBookCompletedEventHandler)
			.removeon instance void Microsoft.Test.DataServices.DotNetWebService::remove_GetBookCompleted(class Microsoft.Test.DataServices.GetBookCompletedEventHandler)
		}
		.event Microsoft.Test.DataServices.GetBooksByAuthorCompletedEventHandler GetBooksByAuthorCompleted
		{
			.addon instance void Microsoft.Test.DataServices.DotNetWebService::add_GetBooksByAuthorCompleted(class Microsoft.Test.DataServices.GetBooksByAuthorCompletedEventHandler)
			.removeon instance void Microsoft.Test.DataServices.DotNetWebService::remove_GetBooksByAuthorCompleted(class Microsoft.Test.DataServices.GetBooksByAuthorCompletedEventHandler)
		}
		.event Microsoft.Test.DataServices.GetInventoryCountCompletedEventHandler GetInventoryCountCompleted
		{
			.addon instance void Microsoft.Test.DataServices.DotNetWebService::add_GetInventoryCountCompleted(class Microsoft.Test.DataServices.GetInventoryCountCompletedEventHandler)
			.removeon instance void Microsoft.Test.DataServices.DotNetWebService::remove_GetInventoryCountCompleted(class Microsoft.Test.DataServices.GetInventoryCountCompletedEventHandler)
		}
		.event Microsoft.Test.DataServices.GetStoreNameCompletedEventHandler GetStoreNameCompleted
		{
			.addon instance void Microsoft.Test.DataServices.DotNetWebService::add_GetStoreNameCompleted(class Microsoft.Test.DataServices.GetStoreNameCompletedEventHandler)
			.removeon instance void Microsoft.Test.DataServices.DotNetWebService::remove_GetStoreNameCompleted(class Microsoft.Test.DataServices.GetStoreNameCompletedEventHandler)
		}
		.event Microsoft.Test.DataServices.GetTopAuthors1CompletedEventHandler GetTopAuthors1Completed
		{
			.addon instance void Microsoft.Test.DataServices.DotNetWebService::add_GetTopAuthors1Completed(class Microsoft.Test.DataServices.GetTopAuthors1CompletedEventHandler)
			.removeon instance void Microsoft.Test.DataServices.DotNetWebService::remove_GetTopAuthors1Completed(class Microsoft.Test.DataServices.GetTopAuthors1CompletedEventHandler)
		}
		.event Microsoft.Test.DataServices.GetTopAuthors2CompletedEventHandler GetTopAuthors2Completed
		{
			.addon instance void Microsoft.Test.DataServices.DotNetWebService::add_GetTopAuthors2Completed(class Microsoft.Test.DataServices.GetTopAuthors2CompletedEventHandler)
			.removeon instance void Microsoft.Test.DataServices.DotNetWebService::remove_GetTopAuthors2Completed(class Microsoft.Test.DataServices.GetTopAuthors2CompletedEventHandler)
		}
		.event Microsoft.Test.DataServices.GetTopAuthorsCompletedEventHandler GetTopAuthorsCompleted
		{
			.addon instance void Microsoft.Test.DataServices.DotNetWebService::add_GetTopAuthorsCompleted(class Microsoft.Test.DataServices.GetTopAuthorsCompletedEventHandler)
			.removeon instance void Microsoft.Test.DataServices.DotNetWebService::remove_GetTopAuthorsCompleted(class Microsoft.Test.DataServices.GetTopAuthorsCompletedEventHandler)
		}
		.event Microsoft.Test.DataServices.GetTotalCompletedEventHandler GetTotalCompleted
		{
			.addon instance void Microsoft.Test.DataServices.DotNetWebService::add_GetTotalCompleted(class Microsoft.Test.DataServices.GetTotalCompletedEventHandler)
			.removeon instance void Microsoft.Test.DataServices.DotNetWebService::remove_GetTotalCompleted(class Microsoft.Test.DataServices.GetTotalCompletedEventHandler)
		}
		.event Microsoft.Test.DataServices.MirrorStringCompletedEventHandler MirrorStringCompleted
		{
			.addon instance void Microsoft.Test.DataServices.DotNetWebService::add_MirrorStringCompleted(class Microsoft.Test.DataServices.MirrorStringCompletedEventHandler)
			.removeon instance void Microsoft.Test.DataServices.DotNetWebService::remove_MirrorStringCompleted(class Microsoft.Test.DataServices.MirrorStringCompletedEventHandler)
		}
	}
	.class public DoubleToPointConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public Dwarf
		extends [mscorlib]System.Object
		implements [System]System.ComponentModel.INotifyPropertyChanged
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string Name, string EyeColor, int32 Height, int32 Width, valuetype [PresentationCore]System.Windows.Media.Color SkinColor, valuetype [WindowsBase]System.Windows.Point Position, bool Angry)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Name(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_EyeColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_EyeColor(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Height()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Height(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Width()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Width(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [PresentationCore]System.Windows.Media.Color get_SkinColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_SkinColor(valuetype [PresentationCore]System.Windows.Media.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [WindowsBase]System.Windows.Point get_Position()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Position(valuetype [WindowsBase]System.Windows.Point 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Angry()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Angry(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.Test.DataServices.Dwarf get_Friend()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Friend(class Microsoft.Test.DataServices.Dwarf 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.Test.DataServices.DwarfCollection get_Buddies()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.event [System]System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			.addon instance void Microsoft.Test.DataServices.Dwarf::add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void Microsoft.Test.DataServices.Dwarf::remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
		}
		.property instance bool Angry()
		{
			.get instance bool Microsoft.Test.DataServices.Dwarf::get_Angry()
			.set instance void Microsoft.Test.DataServices.Dwarf::set_Angry(bool)
		}
		.property instance class Microsoft.Test.DataServices.DwarfCollection Buddies()
		{
			.get instance class Microsoft.Test.DataServices.DwarfCollection Microsoft.Test.DataServices.Dwarf::get_Buddies()
		}
		.property instance string EyeColor()
		{
			.get instance string Microsoft.Test.DataServices.Dwarf::get_EyeColor()
			.set instance void Microsoft.Test.DataServices.Dwarf::set_EyeColor(string)
		}
		.property instance class Microsoft.Test.DataServices.Dwarf Friend()
		{
			.get instance class Microsoft.Test.DataServices.Dwarf Microsoft.Test.DataServices.Dwarf::get_Friend()
			.set instance void Microsoft.Test.DataServices.Dwarf::set_Friend(class Microsoft.Test.DataServices.Dwarf)
		}
		.property instance int32 Height()
		{
			.get instance int32 Microsoft.Test.DataServices.Dwarf::get_Height()
			.set instance void Microsoft.Test.DataServices.Dwarf::set_Height(int32)
		}
		.property instance string Name()
		{
			.get instance string Microsoft.Test.DataServices.Dwarf::get_Name()
			.set instance void Microsoft.Test.DataServices.Dwarf::set_Name(string)
		}
		.property instance valuetype [WindowsBase]System.Windows.Point Position()
		{
			.get instance valuetype [WindowsBase]System.Windows.Point Microsoft.Test.DataServices.Dwarf::get_Position()
			.set instance void Microsoft.Test.DataServices.Dwarf::set_Position(valuetype [WindowsBase]System.Windows.Point)
		}
		.property instance valuetype [PresentationCore]System.Windows.Media.Color SkinColor()
		{
			.get instance valuetype [PresentationCore]System.Windows.Media.Color Microsoft.Test.DataServices.Dwarf::get_SkinColor()
			.set instance void Microsoft.Test.DataServices.Dwarf::set_SkinColor(valuetype [PresentationCore]System.Windows.Media.Color)
		}
		.property instance int32 Width()
		{
			.get instance int32 Microsoft.Test.DataServices.Dwarf::get_Width()
			.set instance void Microsoft.Test.DataServices.Dwarf::set_Width(int32)
		}
	}
	.class public DwarfBuddies
		extends class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Microsoft.Test.DataServices.Dwarf>
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public DwarfCollection
		extends class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Microsoft.Test.DataServices.Dwarf>
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = { string('Item') }
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.Test.DataServices.Dwarf get_Item(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.Test.DataServices.Dwarf get_Item(string name, valuetype [PresentationCore]System.Windows.Media.Color skinColor)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.Test.DataServices.Dwarf get_Item(string name, string eyeColor)
		{
			ret
		}
		.property instance class Microsoft.Test.DataServices.Dwarf Item(string)
		{
			.get instance class Microsoft.Test.DataServices.Dwarf Microsoft.Test.DataServices.DwarfCollection::get_Item(string)
		}
		.property instance class Microsoft.Test.DataServices.Dwarf Item(string, valuetype [PresentationCore]System.Windows.Media.Color)
		{
			.get instance class Microsoft.Test.DataServices.Dwarf Microsoft.Test.DataServices.DwarfCollection::get_Item(string, valuetype [PresentationCore]System.Windows.Media.Color)
		}
		.property instance class Microsoft.Test.DataServices.Dwarf Item(string, string)
		{
			.get instance class Microsoft.Test.DataServices.Dwarf Microsoft.Test.DataServices.DwarfCollection::get_Item(string, string)
		}
	}
	.class public Dwarves
		extends class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Microsoft.Test.DataServices.Dwarf>
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public EarthDataSet
		extends [System.Data]System.Data.DataSet
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public EarthDataSource
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Microsoft.Test.DataServices.Hemisphere> get_Hemispheres()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Hemispheres(class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Microsoft.Test.DataServices.Hemisphere> 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Microsoft.Test.DataServices.Hemisphere> Hemispheres()
		{
			.get instance class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Microsoft.Test.DataServices.Hemisphere> Microsoft.Test.DataServices.EarthDataSource::get_Hemispheres()
			.set instance void Microsoft.Test.DataServices.EarthDataSource::set_Hemispheres(class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Microsoft.Test.DataServices.Hemisphere>)
		}
	}
	.class public Employee
		extends [mscorlib]System.Object
		implements [System]System.ComponentModel.INotifyPropertyChanged
	{
		.method public final virtual hidebysig newslot specialname 
			instance void add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method family hidebysig 
			instance void RaisePropertyChanged(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string name, string phone, string team)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Name(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Team()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Team(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Phone()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Phone(string 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance string get_Title()
		{
			ret
		}
		.event [System]System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			.addon instance void Microsoft.Test.DataServices.Employee::add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void Microsoft.Test.DataServices.Employee::remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
		}
		.property instance string Name()
		{
			.get instance string Microsoft.Test.DataServices.Employee::get_Name()
			.set instance void Microsoft.Test.DataServices.Employee::set_Name(string)
		}
		.property instance string Phone()
		{
			.get instance string Microsoft.Test.DataServices.Employee::get_Phone()
			.set instance void Microsoft.Test.DataServices.Employee::set_Phone(string)
		}
		.property instance string Team()
		{
			.get instance string Microsoft.Test.DataServices.Employee::get_Team()
			.set instance void Microsoft.Test.DataServices.Employee::set_Team(string)
		}
		.property instance string Title()
		{
			.get instance string Microsoft.Test.DataServices.Employee::get_Title()
		}
	}
	.class public EmployeeCollection
		extends class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Microsoft.Test.DataServices.Employee>
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public EvenRule
		extends [PresentationFramework]System.Windows.Controls.ValidationRule
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ErrorContent()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ErrorContent(string 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [PresentationFramework]System.Windows.Controls.ValidationResult Validate(object 'value', class [mscorlib]System.Globalization.CultureInfo cultureInfo)
		{
			ret
		}
		.property instance string ErrorContent()
		{
			.get instance string Microsoft.Test.DataServices.EvenRule::get_ErrorContent()
			.set instance void Microsoft.Test.DataServices.EvenRule::set_ErrorContent(string)
		}
	}
	.class public ExpectedGroup
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance object get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Name(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance object[] get_Items()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Items(object[] 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(object name, object[] items)
		{
			ret
		}
		.property instance object[] Items()
		{
			.get instance object[] Microsoft.Test.DataServices.ExpectedGroup::get_Items()
			.set instance void Microsoft.Test.DataServices.ExpectedGroup::set_Items(object[])
		}
		.property instance object Name()
		{
			.get instance object Microsoft.Test.DataServices.ExpectedGroup::get_Name()
			.set instance void Microsoft.Test.DataServices.ExpectedGroup::set_Name(object)
		}
	}
	.class public FastDataItem
		extends [mscorlib]System.Object
		implements [System]System.ComponentModel.INotifyPropertyChanged
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string fv)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_FastValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_FastValue(string 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.event [System]System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			.addon instance void Microsoft.Test.DataServices.FastDataItem::add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void Microsoft.Test.DataServices.FastDataItem::remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
		}
		.property instance string FastValue()
		{
			.get instance string Microsoft.Test.DataServices.FastDataItem::get_FastValue()
			.set instance void Microsoft.Test.DataServices.FastDataItem::set_FastValue(string)
		}
	}
	.class public FileItem
		extends [mscorlib]System.Object
		implements [System]System.ComponentModel.INotifyPropertyChanged
	{
		.method public final virtual hidebysig newslot specialname 
			instance void add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method family hidebysig 
			instance void RaisePropertyChanged(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string name, int32 size, string modTime)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Name(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Extension()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Extension(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Size()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Size(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [mscorlib]System.DateTime get_DateModified()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_DateModified(valuetype [mscorlib]System.DateTime 'value')
		{
			ret
		}
		.event [System]System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			.addon instance void Microsoft.Test.DataServices.FileItem::add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void Microsoft.Test.DataServices.FileItem::remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
		}
		.property instance valuetype [mscorlib]System.DateTime DateModified()
		{
			.get instance valuetype [mscorlib]System.DateTime Microsoft.Test.DataServices.FileItem::get_DateModified()
			.set instance void Microsoft.Test.DataServices.FileItem::set_DateModified(valuetype [mscorlib]System.DateTime)
		}
		.property instance string Extension()
		{
			.get instance string Microsoft.Test.DataServices.FileItem::get_Extension()
			.set instance void Microsoft.Test.DataServices.FileItem::set_Extension(string)
		}
		.property instance string Name()
		{
			.get instance string Microsoft.Test.DataServices.FileItem::get_Name()
			.set instance void Microsoft.Test.DataServices.FileItem::set_Name(string)
		}
		.property instance int32 Size()
		{
			.get instance int32 Microsoft.Test.DataServices.FileItem::get_Size()
			.set instance void Microsoft.Test.DataServices.FileItem::set_Size(int32)
		}
	}
	.class public FileList
		extends class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Microsoft.Test.DataServices.FileItem>
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed FilterOperator
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.Test.DataServices.FilterOperator Equal = int32(0x00000001)
		.field static public literal valuetype Microsoft.Test.DataServices.FilterOperator GreaterThan = int32(0x00000003)
		.field static public literal valuetype Microsoft.Test.DataServices.FilterOperator LessThan = int32(0x00000002)
		.field static public literal valuetype Microsoft.Test.DataServices.FilterOperator NotEqual = int32(0x00000000)
	}
	.class public FirstLetterConverterClr
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public FirstLetterConverterXml
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public FirstValueConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IMultiValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object[] values, class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object[] ConvertBack(object 'value', class [mscorlib]System.Type[] targetTypes, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public 'FullBindingList`1'<T>
		extends class [System]'System.ComponentModel.BindingList`1'<!0>
		implements [System]System.ComponentModel.IBindingListView, [System]System.ComponentModel.IBindingList, [mscorlib]System.Collections.IList, [mscorlib]System.Collections.ICollection, [mscorlib]System.Collections.IEnumerable, [System]System.ComponentModel.ITypedList
	{
		.method public hidebysig specialname 
			instance int32 get_OriginalCount()
		{
			ret
		}
		.method public hidebysig 
			instance !0 GetOriginalItem(int32 index)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void ClearItems()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void RemoveItem(int32 index)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void InsertItem(int32 index, !0 item)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void SetItem(int32 index, !0 item)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void ApplySortCore(class [System]System.ComponentModel.PropertyDescriptor prop, valuetype [System]System.ComponentModel.ListSortDirection direction)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void RemoveSortCore()
		{
			ret
		}
		.method family virtual hidebysig specialname 
			instance bool get_SupportsSortingCore()
		{
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance string System.ComponentModel.IBindingListView.get_Filter()
		{
			.override [System]System.ComponentModel.IBindingListView::get_Filter
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance void System.ComponentModel.IBindingListView.set_Filter(string 'value')
		{
			.override [System]System.ComponentModel.IBindingListView::set_Filter
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance class [System]System.ComponentModel.ListSortDescriptionCollection System.ComponentModel.IBindingListView.get_SortDescriptions()
		{
			.override [System]System.ComponentModel.IBindingListView::get_SortDescriptions
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.ComponentModel.IBindingListView.get_SupportsAdvancedSorting()
		{
			.override [System]System.ComponentModel.IBindingListView::get_SupportsAdvancedSorting
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance bool System.ComponentModel.IBindingListView.get_SupportsFiltering()
		{
			.override [System]System.ComponentModel.IBindingListView::get_SupportsFiltering
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.ComponentModel.IBindingListView.ApplySort(class [System]System.ComponentModel.ListSortDescriptionCollection sorts)
		{
			.override [System]System.ComponentModel.IBindingListView::ApplySort
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.ComponentModel.IBindingListView.RemoveFilter()
		{
			.override [System]System.ComponentModel.IBindingListView::RemoveFilter
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [System]System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.ITypedList.GetItemProperties(class [System]System.ComponentModel.PropertyDescriptor[] listAccessors)
		{
			.override [System]System.ComponentModel.ITypedList::GetItemProperties
			ret
		}
		.method private final virtual hidebysig newslot 
			instance string System.ComponentModel.ITypedList.GetListName(class [System]System.ComponentModel.PropertyDescriptor[] listAccessors)
		{
			.override [System]System.ComponentModel.ITypedList::GetListName
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance int32 OriginalCount()
		{
			.get instance int32 'Microsoft.Test.DataServices.FullBindingList`1'::get_OriginalCount()
		}
		.property instance bool SupportsSortingCore()
		{
			.get instance bool 'Microsoft.Test.DataServices.FullBindingList`1'::get_SupportsSortingCore()
		}
		.property instance string System.ComponentModel.IBindingListView.Filter()
		{
			.get instance string 'Microsoft.Test.DataServices.FullBindingList`1'::System.ComponentModel.IBindingListView.get_Filter()
			.set instance void 'Microsoft.Test.DataServices.FullBindingList`1'::System.ComponentModel.IBindingListView.set_Filter(string)
		}
		.property instance class [System]System.ComponentModel.ListSortDescriptionCollection System.ComponentModel.IBindingListView.SortDescriptions()
		{
			.get instance class [System]System.ComponentModel.ListSortDescriptionCollection 'Microsoft.Test.DataServices.FullBindingList`1'::System.ComponentModel.IBindingListView.get_SortDescriptions()
		}
		.property instance bool System.ComponentModel.IBindingListView.SupportsAdvancedSorting()
		{
			.get instance bool 'Microsoft.Test.DataServices.FullBindingList`1'::System.ComponentModel.IBindingListView.get_SupportsAdvancedSorting()
		}
		.property instance bool System.ComponentModel.IBindingListView.SupportsFiltering()
		{
			.get instance bool 'Microsoft.Test.DataServices.FullBindingList`1'::System.ComponentModel.IBindingListView.get_SupportsFiltering()
		}
	}
	.class public GetAuthorsCompletedEventArgs
		extends [System]System.ComponentModel.AsyncCompletedEventArgs
	{
		.custom instance void [System]System.ComponentModel.DesignerCategoryAttribute::.ctor(string) = { string('code') }
		.method public hidebysig specialname 
			instance string[] get_Result()
		{
			ret
		}
		.property instance string[] Result()
		{
			.get instance string[] Microsoft.Test.DataServices.GetAuthorsCompletedEventArgs::get_Result()
		}
	}
	.class public sealed GetAuthorsCompletedEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class Microsoft.Test.DataServices.GetAuthorsCompletedEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class Microsoft.Test.DataServices.GetAuthorsCompletedEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public GetBook1CompletedEventArgs
		extends [System]System.ComponentModel.AsyncCompletedEventArgs
	{
		.custom instance void [System]System.ComponentModel.DesignerCategoryAttribute::.ctor(string) = { string('code') }
		.method public hidebysig specialname 
			instance class Microsoft.Test.DataServices.DotNetBook get_Result()
		{
			ret
		}
		.property instance class Microsoft.Test.DataServices.DotNetBook Result()
		{
			.get instance class Microsoft.Test.DataServices.DotNetBook Microsoft.Test.DataServices.GetBook1CompletedEventArgs::get_Result()
		}
	}
	.class public sealed GetBook1CompletedEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class Microsoft.Test.DataServices.GetBook1CompletedEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class Microsoft.Test.DataServices.GetBook1CompletedEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public GetBookCompletedEventArgs
		extends [System]System.ComponentModel.AsyncCompletedEventArgs
	{
		.custom instance void [System]System.ComponentModel.DesignerCategoryAttribute::.ctor(string) = { string('code') }
		.method public hidebysig specialname 
			instance class Microsoft.Test.DataServices.DotNetBook get_Result()
		{
			ret
		}
		.property instance class Microsoft.Test.DataServices.DotNetBook Result()
		{
			.get instance class Microsoft.Test.DataServices.DotNetBook Microsoft.Test.DataServices.GetBookCompletedEventArgs::get_Result()
		}
	}
	.class public sealed GetBookCompletedEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class Microsoft.Test.DataServices.GetBookCompletedEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class Microsoft.Test.DataServices.GetBookCompletedEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public GetBooksByAuthorCompletedEventArgs
		extends [System]System.ComponentModel.AsyncCompletedEventArgs
	{
		.custom instance void [System]System.ComponentModel.DesignerCategoryAttribute::.ctor(string) = { string('code') }
		.method public hidebysig specialname 
			instance class Microsoft.Test.DataServices.DotNetBook[] get_Result()
		{
			ret
		}
		.property instance class Microsoft.Test.DataServices.DotNetBook[] Result()
		{
			.get instance class Microsoft.Test.DataServices.DotNetBook[] Microsoft.Test.DataServices.GetBooksByAuthorCompletedEventArgs::get_Result()
		}
	}
	.class public sealed GetBooksByAuthorCompletedEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class Microsoft.Test.DataServices.GetBooksByAuthorCompletedEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class Microsoft.Test.DataServices.GetBooksByAuthorCompletedEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public GetInventoryCountCompletedEventArgs
		extends [System]System.ComponentModel.AsyncCompletedEventArgs
	{
		.custom instance void [System]System.ComponentModel.DesignerCategoryAttribute::.ctor(string) = { string('code') }
		.method public hidebysig specialname 
			instance int32 get_Result()
		{
			ret
		}
		.property instance int32 Result()
		{
			.get instance int32 Microsoft.Test.DataServices.GetInventoryCountCompletedEventArgs::get_Result()
		}
	}
	.class public sealed GetInventoryCountCompletedEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class Microsoft.Test.DataServices.GetInventoryCountCompletedEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class Microsoft.Test.DataServices.GetInventoryCountCompletedEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public GetStoreNameCompletedEventArgs
		extends [System]System.ComponentModel.AsyncCompletedEventArgs
	{
		.custom instance void [System]System.ComponentModel.DesignerCategoryAttribute::.ctor(string) = { string('code') }
		.method public hidebysig specialname 
			instance string get_Result()
		{
			ret
		}
		.property instance string Result()
		{
			.get instance string Microsoft.Test.DataServices.GetStoreNameCompletedEventArgs::get_Result()
		}
	}
	.class public sealed GetStoreNameCompletedEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class Microsoft.Test.DataServices.GetStoreNameCompletedEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class Microsoft.Test.DataServices.GetStoreNameCompletedEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public GetTopAuthors1CompletedEventArgs
		extends [System]System.ComponentModel.AsyncCompletedEventArgs
	{
		.custom instance void [System]System.ComponentModel.DesignerCategoryAttribute::.ctor(string) = { string('code') }
		.method public hidebysig specialname 
			instance string[] get_Result()
		{
			ret
		}
		.property instance string[] Result()
		{
			.get instance string[] Microsoft.Test.DataServices.GetTopAuthors1CompletedEventArgs::get_Result()
		}
	}
	.class public sealed GetTopAuthors1CompletedEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class Microsoft.Test.DataServices.GetTopAuthors1CompletedEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class Microsoft.Test.DataServices.GetTopAuthors1CompletedEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public GetTopAuthors2CompletedEventArgs
		extends [System]System.ComponentModel.AsyncCompletedEventArgs
	{
		.custom instance void [System]System.ComponentModel.DesignerCategoryAttribute::.ctor(string) = { string('code') }
		.method public hidebysig specialname 
			instance int32 get_Result()
		{
			ret
		}
		.property instance int32 Result()
		{
			.get instance int32 Microsoft.Test.DataServices.GetTopAuthors2CompletedEventArgs::get_Result()
		}
	}
	.class public sealed GetTopAuthors2CompletedEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class Microsoft.Test.DataServices.GetTopAuthors2CompletedEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class Microsoft.Test.DataServices.GetTopAuthors2CompletedEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public GetTopAuthorsCompletedEventArgs
		extends [System]System.ComponentModel.AsyncCompletedEventArgs
	{
		.custom instance void [System]System.ComponentModel.DesignerCategoryAttribute::.ctor(string) = { string('code') }
		.method public hidebysig specialname 
			instance string[] get_Result()
		{
			ret
		}
		.property instance string[] Result()
		{
			.get instance string[] Microsoft.Test.DataServices.GetTopAuthorsCompletedEventArgs::get_Result()
		}
	}
	.class public sealed GetTopAuthorsCompletedEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class Microsoft.Test.DataServices.GetTopAuthorsCompletedEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class Microsoft.Test.DataServices.GetTopAuthorsCompletedEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public GetTotalCompletedEventArgs
		extends [System]System.ComponentModel.AsyncCompletedEventArgs
	{
		.custom instance void [System]System.ComponentModel.DesignerCategoryAttribute::.ctor(string) = { string('code') }
		.method public hidebysig specialname 
			instance float64 get_Result()
		{
			ret
		}
		.property instance float64 Result()
		{
			.get instance float64 Microsoft.Test.DataServices.GetTotalCompletedEventArgs::get_Result()
		}
	}
	.class public sealed GetTotalCompletedEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class Microsoft.Test.DataServices.GetTotalCompletedEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class Microsoft.Test.DataServices.GetTotalCompletedEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public sealed GovernmentType
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.Test.DataServices.GovernmentType Democracy = int32(0x00000002)
		.field static public literal valuetype Microsoft.Test.DataServices.GovernmentType Monarchy = int32(0x00000001)
		.field static public literal valuetype Microsoft.Test.DataServices.GovernmentType Republic = int32(0x00000000)
	}
	.class public GreekGods
		extends class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<string>
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public GreekKing
		extends Microsoft.Test.DataServices.Dwarf
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public GroupingVerifier
		extends [mscorlib]System.Object
		implements [TestRuntime]Microsoft.Test.Verification.IVerifier
	{
		.method public final virtual hidebysig newslot 
			instance class [TestRuntime]Microsoft.Test.Verification.IVerifyResult Verify(object[] expectedState)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public HappyMan
		extends [PresentationFramework]System.Windows.FrameworkElement
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_HappyName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_HappyName(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [WindowsBase]System.Windows.Point get_LookAt()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LookAt(valuetype [WindowsBase]System.Windows.Point 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [WindowsBase]System.Windows.Point get_Position()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Position(valuetype [WindowsBase]System.Windows.Point 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [PresentationCore]System.Windows.Media.Color get_EyeColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_EyeColor(valuetype [PresentationCore]System.Windows.Media.Color 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [PresentationCore]System.Windows.Media.Color get_SkinColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_SkinColor(valuetype [PresentationCore]System.Windows.Media.Color 'value')
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnRender(class [PresentationCore]System.Windows.Media.DrawingContext ctx)
		{
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty EyeColorProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty HappyNameProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty LookAtProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty PositionProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty SkinColorProperty
		.property instance valuetype [PresentationCore]System.Windows.Media.Color EyeColor()
		{
			.get instance valuetype [PresentationCore]System.Windows.Media.Color Microsoft.Test.DataServices.HappyMan::get_EyeColor()
			.set instance void Microsoft.Test.DataServices.HappyMan::set_EyeColor(valuetype [PresentationCore]System.Windows.Media.Color)
		}
		.property instance string HappyName()
		{
			.get instance string Microsoft.Test.DataServices.HappyMan::get_HappyName()
			.set instance void Microsoft.Test.DataServices.HappyMan::set_HappyName(string)
		}
		.property instance valuetype [WindowsBase]System.Windows.Point LookAt()
		{
			.get instance valuetype [WindowsBase]System.Windows.Point Microsoft.Test.DataServices.HappyMan::get_LookAt()
			.set instance void Microsoft.Test.DataServices.HappyMan::set_LookAt(valuetype [WindowsBase]System.Windows.Point)
		}
		.property instance valuetype [WindowsBase]System.Windows.Point Position()
		{
			.get instance valuetype [WindowsBase]System.Windows.Point Microsoft.Test.DataServices.HappyMan::get_Position()
			.set instance void Microsoft.Test.DataServices.HappyMan::set_Position(valuetype [WindowsBase]System.Windows.Point)
		}
		.property instance valuetype [PresentationCore]System.Windows.Media.Color SkinColor()
		{
			.get instance valuetype [PresentationCore]System.Windows.Media.Color Microsoft.Test.DataServices.HappyMan::get_SkinColor()
			.set instance void Microsoft.Test.DataServices.HappyMan::set_SkinColor(valuetype [PresentationCore]System.Windows.Media.Color)
		}
	}
	.class public Hemisphere
		extends [mscorlib]System.Object
		implements [System]System.ComponentModel.INotifyPropertyChanged
	{
		.method public hidebysig specialname 
			instance string get_HemisphereName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_HemisphereName(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Microsoft.Test.DataServices.Region> get_Regions()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Regions(class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Microsoft.Test.DataServices.Region> 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string hemisphereName, class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Microsoft.Test.DataServices.Region> regions)
		{
			ret
		}
		.event [System]System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			.addon instance void Microsoft.Test.DataServices.Hemisphere::add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void Microsoft.Test.DataServices.Hemisphere::remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
		}
		.property instance string HemisphereName()
		{
			.get instance string Microsoft.Test.DataServices.Hemisphere::get_HemisphereName()
			.set instance void Microsoft.Test.DataServices.Hemisphere::set_HemisphereName(string)
		}
		.property instance class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Microsoft.Test.DataServices.Region> Regions()
		{
			.get instance class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Microsoft.Test.DataServices.Region> Microsoft.Test.DataServices.Hemisphere::get_Regions()
			.set instance void Microsoft.Test.DataServices.Hemisphere::set_Regions(class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Microsoft.Test.DataServices.Region>)
		}
	}
	.class public HemispheresDataTable
		extends [System.Data]System.Data.DataTable
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public HierarchicalCustomIList
		extends Microsoft.Test.DataServices.CustomIList
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public Human
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string Name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Name(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_NameChanged(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_NameChanged(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
			ret
		}
		.event [mscorlib]System.EventHandler NameChanged
		{
			.addon instance void Microsoft.Test.DataServices.Human::add_NameChanged(class [mscorlib]System.EventHandler)
			.removeon instance void Microsoft.Test.DataServices.Human::remove_NameChanged(class [mscorlib]System.EventHandler)
		}
		.property instance string Name()
		{
			.get instance string Microsoft.Test.DataServices.Human::get_Name()
			.set instance void Microsoft.Test.DataServices.Human::set_Name(string)
		}
	}
	.class public IEnumerableINotifyCollectionChangedViewProvider
		extends Microsoft.Test.DataServices.DataSourceViewProvider
	{
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Collections.IEnumerable data)
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [mscorlib]System.Collections.IEnumerable CreateDataSource(class [mscorlib]System.Collections.IEnumerable data)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void AddCore(object item)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void RemoveCore(object item)
		{
			ret
		}
	}
	.class public IEnumerableViewProvider
		extends Microsoft.Test.DataServices.DataSourceViewProvider
	{
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Collections.IEnumerable data)
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [mscorlib]System.Collections.IEnumerable CreateDataSource(class [mscorlib]System.Collections.IEnumerable data)
		{
			ret
		}
	}
	.class public IntToBrush
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object o, class [mscorlib]System.Type 'type', object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object o, class [mscorlib]System.Type 'type', object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public League
		extends [mscorlib]System.Object
		implements [System]System.ComponentModel.INotifyPropertyChanged
	{
		.method public hidebysig specialname 
			instance void .ctor(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Name(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.List`1'<class Microsoft.Test.DataServices.Division> get_Divisions()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.event [System]System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			.addon instance void Microsoft.Test.DataServices.League::add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void Microsoft.Test.DataServices.League::remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
		}
		.property instance class [mscorlib]'System.Collections.Generic.List`1'<class Microsoft.Test.DataServices.Division> Divisions()
		{
			.get instance class [mscorlib]'System.Collections.Generic.List`1'<class Microsoft.Test.DataServices.Division> Microsoft.Test.DataServices.League::get_Divisions()
		}
		.property instance string Name()
		{
			.get instance string Microsoft.Test.DataServices.League::get_Name()
			.set instance void Microsoft.Test.DataServices.League::set_Name(string)
		}
	}
	.class public LeagueList2
		extends class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Microsoft.Test.DataServices.League>
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = { string('Item') }
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.Test.DataServices.League get_Item(int32 index)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(int32 index, class Microsoft.Test.DataServices.League 'value')
		{
			ret
		}
		.property instance class Microsoft.Test.DataServices.League Item(int32)
		{
			.get instance class Microsoft.Test.DataServices.League Microsoft.Test.DataServices.LeagueList2::get_Item(int32)
			.set instance void Microsoft.Test.DataServices.LeagueList2::set_Item(int32, class Microsoft.Test.DataServices.League)
		}
	}
	.class public LengthRangeRule
		extends [PresentationFramework]System.Windows.Controls.ValidationRule
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Min()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Min(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Max()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Max(int32 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [PresentationFramework]System.Windows.Controls.ValidationResult Validate(object 'value', class [mscorlib]System.Globalization.CultureInfo cultureInfo)
		{
			ret
		}
		.property instance int32 Max()
		{
			.get instance int32 Microsoft.Test.DataServices.LengthRangeRule::get_Max()
			.set instance void Microsoft.Test.DataServices.LengthRangeRule::set_Max(int32)
		}
		.property instance int32 Min()
		{
			.get instance int32 Microsoft.Test.DataServices.LengthRangeRule::get_Min()
			.set instance void Microsoft.Test.DataServices.LengthRangeRule::set_Min(int32)
		}
	}
	.class public Library
		extends class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Microsoft.Test.DataServices.Book>
	{
		.method public hidebysig specialname 
			instance void .ctor(int32 books, float64 revision)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string books)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string books, string revision)
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_SyncRoot()
		{
			ret
		}
		.method public hidebysig 
			instance class [System.Xml]System.Xml.XmlDocument ToXmlDocument(int32 startAt, int32 endBefore)
		{
			ret
		}
		.method public hidebysig 
			instance class [System.Xml]System.Xml.XmlDocument ToXmlDocument(int32 startAt)
		{
			ret
		}
		.method public hidebysig 
			instance class [System.Xml]System.Xml.XmlDocument ToXmlDocument()
		{
			ret
		}
		.method public hidebysig 
			instance class Microsoft.Test.DataServices.Library Subset(int32 startAt, int32 endBefore)
		{
			ret
		}
		.method public hidebysig 
			instance class Microsoft.Test.DataServices.Library Subset(int32 startAt)
		{
			ret
		}
		.method public hidebysig 
			instance class Microsoft.Test.DataServices.Library Subset()
		{
			ret
		}
		.method public hidebysig 
			instance void Sort()
		{
			ret
		}
		.method public hidebysig 
			instance void Sort(class [mscorlib]'System.Comparison`1'<class Microsoft.Test.DataServices.Book> comparison)
		{
			ret
		}
		.method public hidebysig 
			instance void Sort(class [mscorlib]'System.Collections.Generic.IComparer`1'<class Microsoft.Test.DataServices.Book> comparer)
		{
			ret
		}
		.method public hidebysig 
			instance void Sort(int32 index, int32 count, class [mscorlib]'System.Collections.Generic.IComparer`1'<class Microsoft.Test.DataServices.Book> comparer)
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void SortItems(int32 index, int32 count, class [mscorlib]'System.Collections.Generic.IComparer`1'<class Microsoft.Test.DataServices.Book> comparer)
		{
			ret
		}
		.method public hidebysig 
			instance void TrimExcess()
		{
			ret
		}
		.property instance object SyncRoot()
		{
			.get instance object Microsoft.Test.DataServices.Library::get_SyncRoot()
		}
	}
	.class public LibraryEnumerable
		extends [mscorlib]System.Object
		implements [mscorlib]System.Collections.IEnumerable
	{
		.method public hidebysig specialname 
			instance void .ctor(int32 books, float64 revision)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string books)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string books, string revision)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator GetEnumerator()
		{
			ret
		}
		.method public hidebysig 
			instance void Add(class Microsoft.Test.DataServices.Book newItem)
		{
			ret
		}
		.method public hidebysig 
			instance void RemoveAt(class Microsoft.Test.DataServices.Book item)
		{
			ret
		}
		.method public hidebysig 
			instance void RemoveAt(int32 index)
		{
			ret
		}
	}
	.class public LibraryEnumerableNotify
		extends [mscorlib]System.Object
		implements [mscorlib]System.Collections.IEnumerable, [WindowsBase]System.Collections.Specialized.INotifyCollectionChanged
	{
		.method public hidebysig specialname 
			instance void .ctor(int32 books, float64 revision)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string books)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string books, string revision)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator GetEnumerator()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_CollectionChanged(class [WindowsBase]System.Collections.Specialized.NotifyCollectionChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_CollectionChanged(class [WindowsBase]System.Collections.Specialized.NotifyCollectionChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig 
			instance void Add(class Microsoft.Test.DataServices.Book newItem)
		{
			ret
		}
		.method public hidebysig 
			instance void RemoveAt(class Microsoft.Test.DataServices.Book item)
		{
			ret
		}
		.method public hidebysig 
			instance void RemoveAt(int32 index)
		{
			ret
		}
		.event [WindowsBase]System.Collections.Specialized.NotifyCollectionChangedEventHandler CollectionChanged
		{
			.addon instance void Microsoft.Test.DataServices.LibraryEnumerableNotify::add_CollectionChanged(class [WindowsBase]System.Collections.Specialized.NotifyCollectionChangedEventHandler)
			.removeon instance void Microsoft.Test.DataServices.LibraryEnumerableNotify::remove_CollectionChanged(class [WindowsBase]System.Collections.Specialized.NotifyCollectionChangedEventHandler)
		}
	}
	.class public LibraryGenericList
		extends class [mscorlib]'System.Collections.Generic.List`1'<class Microsoft.Test.DataServices.Book>
		implements [WindowsBase]System.Collections.Specialized.INotifyCollectionChanged
	{
		.method public hidebysig specialname 
			instance void .ctor(int32 books, float64 revision)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string books)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string books, string revision)
		{
			ret
		}
		.method public hidebysig 
			instance void Add(class Microsoft.Test.DataServices.Book newItem)
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(class Microsoft.Test.DataServices.Book item)
		{
			ret
		}
		.method public hidebysig 
			instance void RemoveAt(int32 index)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_CollectionChanged(class [WindowsBase]System.Collections.Specialized.NotifyCollectionChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_CollectionChanged(class [WindowsBase]System.Collections.Specialized.NotifyCollectionChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.event [WindowsBase]System.Collections.Specialized.NotifyCollectionChangedEventHandler CollectionChanged
		{
			.addon instance void Microsoft.Test.DataServices.LibraryGenericList::add_CollectionChanged(class [WindowsBase]System.Collections.Specialized.NotifyCollectionChangedEventHandler)
			.removeon instance void Microsoft.Test.DataServices.LibraryGenericList::remove_CollectionChanged(class [WindowsBase]System.Collections.Specialized.NotifyCollectionChangedEventHandler)
		}
	}
	.class public LibraryGenericListMR
		extends class [mscorlib]'System.Collections.Generic.List`1'<class Microsoft.Test.DataServices.Book>
		implements [WindowsBase]System.Collections.Specialized.INotifyCollectionChanged
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = { string('Item') }
		.method public hidebysig specialname 
			instance void .ctor(int32 books, float64 revision)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string books)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string books, string revision)
		{
			ret
		}
		.method public hidebysig 
			instance void Add(class Microsoft.Test.DataServices.Book newItem)
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(class Microsoft.Test.DataServices.Book item)
		{
			ret
		}
		.method public hidebysig 
			instance void RemoveAt(int32 index)
		{
			ret
		}
		.method public hidebysig 
			instance void Move(int32 indexFrom, int32 indexTo)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.Test.DataServices.Book get_Item(int32 index)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(int32 index, class Microsoft.Test.DataServices.Book 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_CollectionChanged(class [WindowsBase]System.Collections.Specialized.NotifyCollectionChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_CollectionChanged(class [WindowsBase]System.Collections.Specialized.NotifyCollectionChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.event [WindowsBase]System.Collections.Specialized.NotifyCollectionChangedEventHandler CollectionChanged
		{
			.addon instance void Microsoft.Test.DataServices.LibraryGenericListMR::add_CollectionChanged(class [WindowsBase]System.Collections.Specialized.NotifyCollectionChangedEventHandler)
			.removeon instance void Microsoft.Test.DataServices.LibraryGenericListMR::remove_CollectionChanged(class [WindowsBase]System.Collections.Specialized.NotifyCollectionChangedEventHandler)
		}
		.property instance class Microsoft.Test.DataServices.Book Item(int32)
		{
			.get instance class Microsoft.Test.DataServices.Book Microsoft.Test.DataServices.LibraryGenericListMR::get_Item(int32)
			.set instance void Microsoft.Test.DataServices.LibraryGenericListMR::set_Item(int32, class Microsoft.Test.DataServices.Book)
		}
	}
	.class public LibraryQueue
		extends [mscorlib]System.Collections.Queue
		implements [WindowsBase]System.Collections.Specialized.INotifyCollectionChanged
	{
		.method public hidebysig specialname 
			instance void .ctor(int32 books, float64 revision)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string books)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string books, string revision)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Enqueue(object newItem)
		{
			ret
		}
		.method public hidebysig 
			instance void Dequeue()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_CollectionChanged(class [WindowsBase]System.Collections.Specialized.NotifyCollectionChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_CollectionChanged(class [WindowsBase]System.Collections.Specialized.NotifyCollectionChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.event [WindowsBase]System.Collections.Specialized.NotifyCollectionChangedEventHandler CollectionChanged
		{
			.addon instance void Microsoft.Test.DataServices.LibraryQueue::add_CollectionChanged(class [WindowsBase]System.Collections.Specialized.NotifyCollectionChangedEventHandler)
			.removeon instance void Microsoft.Test.DataServices.LibraryQueue::remove_CollectionChanged(class [WindowsBase]System.Collections.Specialized.NotifyCollectionChangedEventHandler)
		}
	}
	.class public LibraryStack
		extends [mscorlib]System.Collections.Stack
		implements [WindowsBase]System.Collections.Specialized.INotifyCollectionChanged
	{
		.method public hidebysig specialname 
			instance void .ctor(int32 books, float64 revision)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string books)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string books, string revision)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Push(object newItem)
		{
			ret
		}
		.method public hidebysig 
			instance void Pop()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_CollectionChanged(class [WindowsBase]System.Collections.Specialized.NotifyCollectionChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_CollectionChanged(class [WindowsBase]System.Collections.Specialized.NotifyCollectionChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.event [WindowsBase]System.Collections.Specialized.NotifyCollectionChangedEventHandler CollectionChanged
		{
			.addon instance void Microsoft.Test.DataServices.LibraryStack::add_CollectionChanged(class [WindowsBase]System.Collections.Specialized.NotifyCollectionChangedEventHandler)
			.removeon instance void Microsoft.Test.DataServices.LibraryStack::remove_CollectionChanged(class [WindowsBase]System.Collections.Specialized.NotifyCollectionChangedEventHandler)
		}
	}
	.class public Lift
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<string> get_Runs()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Runs(class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<string> 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Name(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string name)
		{
			ret
		}
		.property instance string Name()
		{
			.get instance string Microsoft.Test.DataServices.Lift::get_Name()
			.set instance void Microsoft.Test.DataServices.Lift::set_Name(string)
		}
		.property instance class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<string> Runs()
		{
			.get instance class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<string> Microsoft.Test.DataServices.Lift::get_Runs()
			.set instance void Microsoft.Test.DataServices.Lift::set_Runs(class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<string>)
		}
	}
	.class public LinqDataViewViewProvider
		extends Microsoft.Test.DataServices.DataViewViewProvider
	{
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Collections.IEnumerable data)
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [mscorlib]System.Collections.IEnumerable CreateDataSource(class [mscorlib]System.Collections.IEnumerable data)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void SortCore(valuetype [WindowsBase]System.ComponentModel.SortDescription sortDescription)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void FilterCore(string propertyName, valuetype Microsoft.Test.DataServices.FilterOperator filterOperator, object valueToFilterBy)
		{
			ret
		}
	}
	.class public ListBoxItemList
		extends class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class [PresentationFramework]System.Windows.Controls.ListBoxItem>
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ListLeagueList
		extends class [mscorlib]'System.Collections.Generic.List`1'<class Microsoft.Test.DataServices.League>
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = { string('Item') }
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.Test.DataServices.League get_Item(string name)
		{
			ret
		}
		.property instance class Microsoft.Test.DataServices.League Item(string)
		{
			.get instance class Microsoft.Test.DataServices.League Microsoft.Test.DataServices.ListLeagueList::get_Item(string)
		}
	}
	.class public MediaCollection
		extends class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Microsoft.Test.DataServices.MediaItem>
	{
		.method public hidebysig specialname 
			instance void .ctor(int32 totalItems, float64 revision)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string totalItems)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string totalItems, string revision)
		{
			ret
		}
		.method public hidebysig 
			instance class [System.Xml]System.Xml.XmlDocument ToXmlDocument(int32 startAt, int32 endBefore)
		{
			ret
		}
		.method public hidebysig 
			instance class [System.Xml]System.Xml.XmlDocument ToXmlDocument(int32 startAt)
		{
			ret
		}
		.method public hidebysig 
			instance class [System.Xml]System.Xml.XmlDocument ToXmlDocument()
		{
			ret
		}
		.method public hidebysig 
			instance class Microsoft.Test.DataServices.MediaCollection Subset(int32 startAt, int32 endBefore)
		{
			ret
		}
		.method public hidebysig 
			instance class Microsoft.Test.DataServices.MediaCollection Subset(int32 startAt)
		{
			ret
		}
		.method public hidebysig 
			instance class Microsoft.Test.DataServices.MediaCollection Subset()
		{
			ret
		}
	}
	.class public MediaItem
		extends [mscorlib]System.Object
		implements [System]System.ComponentModel.INotifyPropertyChanged, [mscorlib]System.IComparable
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string title, string publisher, string isbn, float64 price, bool isSpecialEdition, valuetype [mscorlib]System.DateTime releaseDate)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(float64 index)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance int32 CompareTo(object obj)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method family hidebysig 
			instance void RaisePropertyChangedEvent(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Title()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Title(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ISBN()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ISBN(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Publisher()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Publisher(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_Price()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Price(float64 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [mscorlib]System.DateTime get_ReleaseDate()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ReleaseDate(valuetype [mscorlib]System.DateTime 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsSpecialEdition()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IsSpecialEdition(bool 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class [System.Xml]System.Xml.XmlNode ToXml(class [System.Xml]System.Xml.XmlDocument document)
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.event [System]System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			.addon instance void Microsoft.Test.DataServices.MediaItem::add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void Microsoft.Test.DataServices.MediaItem::remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
		}
		.property instance string 'ISBN'()
		{
			.get instance string Microsoft.Test.DataServices.MediaItem::get_ISBN()
			.set instance void Microsoft.Test.DataServices.MediaItem::set_ISBN(string)
		}
		.property instance bool IsSpecialEdition()
		{
			.get instance bool Microsoft.Test.DataServices.MediaItem::get_IsSpecialEdition()
			.set instance void Microsoft.Test.DataServices.MediaItem::set_IsSpecialEdition(bool)
		}
		.property instance float64 Price()
		{
			.get instance float64 Microsoft.Test.DataServices.MediaItem::get_Price()
			.set instance void Microsoft.Test.DataServices.MediaItem::set_Price(float64)
		}
		.property instance string Publisher()
		{
			.get instance string Microsoft.Test.DataServices.MediaItem::get_Publisher()
			.set instance void Microsoft.Test.DataServices.MediaItem::set_Publisher(string)
		}
		.property instance valuetype [mscorlib]System.DateTime ReleaseDate()
		{
			.get instance valuetype [mscorlib]System.DateTime Microsoft.Test.DataServices.MediaItem::get_ReleaseDate()
			.set instance void Microsoft.Test.DataServices.MediaItem::set_ReleaseDate(valuetype [mscorlib]System.DateTime)
		}
		.property instance string Title()
		{
			.get instance string Microsoft.Test.DataServices.MediaItem::get_Title()
			.set instance void Microsoft.Test.DataServices.MediaItem::set_Title(string)
		}
	}
	.class public MinCharsRule
		extends [PresentationFramework]System.Windows.Controls.ValidationRule
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Min()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Min(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ErrorContent()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ErrorContent(string 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [PresentationFramework]System.Windows.Controls.ValidationResult Validate(object 'value', class [mscorlib]System.Globalization.CultureInfo cultureInfo)
		{
			ret
		}
		.property instance string ErrorContent()
		{
			.get instance string Microsoft.Test.DataServices.MinCharsRule::get_ErrorContent()
			.set instance void Microsoft.Test.DataServices.MinCharsRule::set_ErrorContent(string)
		}
		.property instance int32 Min()
		{
			.get instance int32 Microsoft.Test.DataServices.MinCharsRule::get_Min()
			.set instance void Microsoft.Test.DataServices.MinCharsRule::set_Min(int32)
		}
	}
	.class public MirrorStringCompletedEventArgs
		extends [System]System.ComponentModel.AsyncCompletedEventArgs
	{
		.custom instance void [System]System.ComponentModel.DesignerCategoryAttribute::.ctor(string) = { string('code') }
		.method public hidebysig specialname 
			instance string get_Result()
		{
			ret
		}
		.property instance string Result()
		{
			.get instance string Microsoft.Test.DataServices.MirrorStringCompletedEventArgs::get_Result()
		}
	}
	.class public sealed MirrorStringCompletedEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class Microsoft.Test.DataServices.MirrorStringCompletedEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class Microsoft.Test.DataServices.MirrorStringCompletedEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public Mountain
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Microsoft.Test.DataServices.Lift> get_Lifts()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Lifts(class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Microsoft.Test.DataServices.Lift> 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Name(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string name)
		{
			ret
		}
		.property instance class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Microsoft.Test.DataServices.Lift> Lifts()
		{
			.get instance class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Microsoft.Test.DataServices.Lift> Microsoft.Test.DataServices.Mountain::get_Lifts()
			.set instance void Microsoft.Test.DataServices.Mountain::set_Lifts(class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Microsoft.Test.DataServices.Lift>)
		}
		.property instance string Name()
		{
			.get instance string Microsoft.Test.DataServices.Mountain::get_Name()
			.set instance void Microsoft.Test.DataServices.Mountain::set_Name(string)
		}
	}
	.class public Mountains
		extends class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Microsoft.Test.DataServices.Mountain>
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public MyCollView
		extends [mscorlib]System.Object
		implements [WindowsBase]System.ComponentModel.ICollectionView, [mscorlib]System.Collections.IEnumerable, [WindowsBase]System.Collections.Specialized.INotifyCollectionChanged
	{
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Collections.IEnumerable ds)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_CanFilter()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_CanSort()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool Contains(object item)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsEmpty()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class [mscorlib]System.Globalization.CultureInfo get_Culture()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_Culture(class [mscorlib]System.Globalization.CultureInfo 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance object get_CurrentItem()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance int32 get_CurrentPosition()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.IDisposable DeferRefresh()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class [mscorlib]'System.Predicate`1'<object> get_Filter()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_Filter(class [mscorlib]'System.Predicate`1'<object> 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance bool get_CanGroup()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class [WindowsBase]System.ComponentModel.GroupDescription> get_GroupDescriptions()
		{
			ret
		}
		.method public virtual hidebysig newslot specialname 
			instance class [WindowsBase]'System.Collections.ObjectModel.ReadOnlyObservableCollection`1'<object> get_Groups()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsCurrentAfterLast()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsCurrentBeforeFirst()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool MoveCurrentTo(object item)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool MoveCurrentToFirst()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool MoveCurrentToLast()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool MoveCurrentToNext()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool MoveCurrentToPosition(int32 position)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool MoveCurrentToPrevious()
		{
			ret
		}
		.method public hidebysig 
			instance int32 IndexOf(object item)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Refresh()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_DataSetSort()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_DataSetSort(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_DataSetFilter()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_DataSetFilter(string 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class [WindowsBase]System.ComponentModel.SortDescriptionCollection get_SortDescriptions()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class [mscorlib]System.Collections.IEnumerable get_SourceCollection()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator GetEnumerator()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_CollectionChanged(class [WindowsBase]System.Collections.Specialized.NotifyCollectionChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_CollectionChanged(class [WindowsBase]System.Collections.Specialized.NotifyCollectionChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_CurrentChanged(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_CurrentChanged(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_CurrentChanging(class [WindowsBase]System.ComponentModel.CurrentChangingEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_CurrentChanging(class [WindowsBase]System.ComponentModel.CurrentChangingEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method family hidebysig 
			instance void OnCollectionChanged(object sender, class [WindowsBase]System.Collections.Specialized.NotifyCollectionChangedEventArgs args)
		{
			ret
		}
		.method family hidebysig 
			instance void OnCurrentChanging(object sender, class [WindowsBase]System.ComponentModel.CurrentChangingEventArgs args)
		{
			ret
		}
		.method family hidebysig 
			instance void OnCurrentChanged(object sender, class [mscorlib]System.EventArgs args)
		{
			ret
		}
		.event [WindowsBase]System.Collections.Specialized.NotifyCollectionChangedEventHandler CollectionChanged
		{
			.addon instance void Microsoft.Test.DataServices.MyCollView::add_CollectionChanged(class [WindowsBase]System.Collections.Specialized.NotifyCollectionChangedEventHandler)
			.removeon instance void Microsoft.Test.DataServices.MyCollView::remove_CollectionChanged(class [WindowsBase]System.Collections.Specialized.NotifyCollectionChangedEventHandler)
		}
		.event [mscorlib]System.EventHandler CurrentChanged
		{
			.addon instance void Microsoft.Test.DataServices.MyCollView::add_CurrentChanged(class [mscorlib]System.EventHandler)
			.removeon instance void Microsoft.Test.DataServices.MyCollView::remove_CurrentChanged(class [mscorlib]System.EventHandler)
		}
		.event [WindowsBase]System.ComponentModel.CurrentChangingEventHandler CurrentChanging
		{
			.addon instance void Microsoft.Test.DataServices.MyCollView::add_CurrentChanging(class [WindowsBase]System.ComponentModel.CurrentChangingEventHandler)
			.removeon instance void Microsoft.Test.DataServices.MyCollView::remove_CurrentChanging(class [WindowsBase]System.ComponentModel.CurrentChangingEventHandler)
		}
		.property instance bool CanFilter()
		{
			.get instance bool Microsoft.Test.DataServices.MyCollView::get_CanFilter()
		}
		.property instance bool CanGroup()
		{
			.get instance bool Microsoft.Test.DataServices.MyCollView::get_CanGroup()
		}
		.property instance bool CanSort()
		{
			.get instance bool Microsoft.Test.DataServices.MyCollView::get_CanSort()
		}
		.property instance int32 Count()
		{
			.get instance int32 Microsoft.Test.DataServices.MyCollView::get_Count()
		}
		.property instance class [mscorlib]System.Globalization.CultureInfo Culture()
		{
			.get instance class [mscorlib]System.Globalization.CultureInfo Microsoft.Test.DataServices.MyCollView::get_Culture()
			.set instance void Microsoft.Test.DataServices.MyCollView::set_Culture(class [mscorlib]System.Globalization.CultureInfo)
		}
		.property instance object CurrentItem()
		{
			.get instance object Microsoft.Test.DataServices.MyCollView::get_CurrentItem()
		}
		.property instance int32 CurrentPosition()
		{
			.get instance int32 Microsoft.Test.DataServices.MyCollView::get_CurrentPosition()
		}
		.property instance string DataSetFilter()
		{
			.get instance string Microsoft.Test.DataServices.MyCollView::get_DataSetFilter()
			.set instance void Microsoft.Test.DataServices.MyCollView::set_DataSetFilter(string)
		}
		.property instance string DataSetSort()
		{
			.get instance string Microsoft.Test.DataServices.MyCollView::get_DataSetSort()
			.set instance void Microsoft.Test.DataServices.MyCollView::set_DataSetSort(string)
		}
		.property instance class [mscorlib]'System.Predicate`1'<object> Filter()
		{
			.get instance class [mscorlib]'System.Predicate`1'<object> Microsoft.Test.DataServices.MyCollView::get_Filter()
			.set instance void Microsoft.Test.DataServices.MyCollView::set_Filter(class [mscorlib]'System.Predicate`1'<object>)
		}
		.property instance class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class [WindowsBase]System.ComponentModel.GroupDescription> GroupDescriptions()
		{
			.get instance class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class [WindowsBase]System.ComponentModel.GroupDescription> Microsoft.Test.DataServices.MyCollView::get_GroupDescriptions()
		}
		.property instance class [WindowsBase]'System.Collections.ObjectModel.ReadOnlyObservableCollection`1'<object> Groups()
		{
			.get instance class [WindowsBase]'System.Collections.ObjectModel.ReadOnlyObservableCollection`1'<object> Microsoft.Test.DataServices.MyCollView::get_Groups()
		}
		.property instance bool IsCurrentAfterLast()
		{
			.get instance bool Microsoft.Test.DataServices.MyCollView::get_IsCurrentAfterLast()
		}
		.property instance bool IsCurrentBeforeFirst()
		{
			.get instance bool Microsoft.Test.DataServices.MyCollView::get_IsCurrentBeforeFirst()
		}
		.property instance bool IsEmpty()
		{
			.get instance bool Microsoft.Test.DataServices.MyCollView::get_IsEmpty()
		}
		.property instance class [WindowsBase]System.ComponentModel.SortDescriptionCollection SortDescriptions()
		{
			.get instance class [WindowsBase]System.ComponentModel.SortDescriptionCollection Microsoft.Test.DataServices.MyCollView::get_SortDescriptions()
		}
		.property instance class [mscorlib]System.Collections.IEnumerable SourceCollection()
		{
			.get instance class [mscorlib]System.Collections.IEnumerable Microsoft.Test.DataServices.MyCollView::get_SourceCollection()
		}
	}
	.class public MyCompositeCollection
		extends [PresentationFramework]System.Windows.Data.CompositeCollection
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public MyDataClass
		extends [mscorlib]System.Object
		implements [System]System.ComponentModel.INotifyPropertyChanged
	{
		.method public hidebysig specialname 
			instance string get_MyData1()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MyData1(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_MyData2()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MyData2(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string myDataStr1, string myDataStr2)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.event [System]System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			.addon instance void Microsoft.Test.DataServices.MyDataClass::add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void Microsoft.Test.DataServices.MyDataClass::remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
		}
		.property instance string MyData1()
		{
			.get instance string Microsoft.Test.DataServices.MyDataClass::get_MyData1()
			.set instance void Microsoft.Test.DataServices.MyDataClass::set_MyData1(string)
		}
		.property instance string MyData2()
		{
			.get instance string Microsoft.Test.DataServices.MyDataClass::get_MyData2()
			.set instance void Microsoft.Test.DataServices.MyDataClass::set_MyData2(string)
		}
	}
	.class public MyDataSource
		extends [WindowsBase]System.Windows.Data.DataSourceProvider
	{
		.method family virtual hidebysig 
			instance void BeginQuery()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public MyFancyIEnumerable
		extends [mscorlib]System.Object
		implements [mscorlib]System.Collections.IEnumerable
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = { string('Item') }
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator GetEnumerator()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method public hidebysig 
			instance int32 IndexOf(object item)
		{
			ret
		}
		.method public hidebysig 
			instance int32 IndexOf(object item, int32 startIndex)
		{
			ret
		}
		.method public hidebysig 
			instance int32 IndexOf(object item, int32 startIndex, int32 count)
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Item(int32 index)
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Item(float64 index)
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Item(int32 index1, int32 index2)
		{
			ret
		}
		.property instance int32 Count()
		{
			.get instance int32 Microsoft.Test.DataServices.MyFancyIEnumerable::get_Count()
		}
		.property instance object Item(int32)
		{
			.get instance object Microsoft.Test.DataServices.MyFancyIEnumerable::get_Item(int32)
		}
		.property instance object Item(float64)
		{
			.get instance object Microsoft.Test.DataServices.MyFancyIEnumerable::get_Item(float64)
		}
		.property instance object Item(int32, int32)
		{
			.get instance object Microsoft.Test.DataServices.MyFancyIEnumerable::get_Item(int32, int32)
		}
	}
	.class public MyFilter
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor(valuetype Microsoft.Test.DataServices.BookType typeToFilter)
		{
			ret
		}
		.method public hidebysig 
			instance bool Contains(object item)
		{
			ret
		}
	}
	.class public MyIEnumerable
		extends [mscorlib]System.Object
		implements [mscorlib]System.Collections.IEnumerable
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator GetEnumerator()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_NumGetEnumeratorCalls()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_NumGetEnumeratorCalls(int32 'value')
		{
			ret
		}
		.property instance int32 NumGetEnumeratorCalls()
		{
			.get instance int32 Microsoft.Test.DataServices.MyIEnumerable::get_NumGetEnumeratorCalls()
			.set instance void Microsoft.Test.DataServices.MyIEnumerable::set_NumGetEnumeratorCalls(int32)
		}
	}
	.class public MyLibraryEnumerable
		extends [mscorlib]System.Object
		implements [mscorlib]System.Collections.IEnumerable, [WindowsBase]System.Collections.Specialized.INotifyCollectionChanged
	{
		.method public hidebysig specialname 
			instance void .ctor(int32 books)
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [WindowsBase]System.Collections.Specialized.NotifyCollectionChangedAction get_ActionToBePassed()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ActionToBePassed(valuetype [WindowsBase]System.Collections.Specialized.NotifyCollectionChangedAction 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_ChangedItemToBePassed()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ChangedItemToBePassed(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_IndexToBePassed()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IndexToBePassed(int32 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator GetEnumerator()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_NumGetEnumeratorCalls()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_NumGetEnumeratorCalls(int32 'value')
		{
			ret
		}
		.method public hidebysig 
			instance int32 IndexOf(class Microsoft.Test.DataServices.Book b)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method public hidebysig 
			instance void Add(class Microsoft.Test.DataServices.Book b)
		{
			ret
		}
		.method public hidebysig 
			instance void Remove(class Microsoft.Test.DataServices.Book b)
		{
			ret
		}
		.method public hidebysig 
			instance void Clear()
		{
			ret
		}
		.method public hidebysig 
			instance void ChooseOverloadRaiseEvent()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_CollectionChanged(class [WindowsBase]System.Collections.Specialized.NotifyCollectionChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_CollectionChanged(class [WindowsBase]System.Collections.Specialized.NotifyCollectionChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.event [WindowsBase]System.Collections.Specialized.NotifyCollectionChangedEventHandler CollectionChanged
		{
			.addon instance void Microsoft.Test.DataServices.MyLibraryEnumerable::add_CollectionChanged(class [WindowsBase]System.Collections.Specialized.NotifyCollectionChangedEventHandler)
			.removeon instance void Microsoft.Test.DataServices.MyLibraryEnumerable::remove_CollectionChanged(class [WindowsBase]System.Collections.Specialized.NotifyCollectionChangedEventHandler)
		}
		.property instance valuetype [WindowsBase]System.Collections.Specialized.NotifyCollectionChangedAction ActionToBePassed()
		{
			.get instance valuetype [WindowsBase]System.Collections.Specialized.NotifyCollectionChangedAction Microsoft.Test.DataServices.MyLibraryEnumerable::get_ActionToBePassed()
			.set instance void Microsoft.Test.DataServices.MyLibraryEnumerable::set_ActionToBePassed(valuetype [WindowsBase]System.Collections.Specialized.NotifyCollectionChangedAction)
		}
		.property instance object ChangedItemToBePassed()
		{
			.get instance object Microsoft.Test.DataServices.MyLibraryEnumerable::get_ChangedItemToBePassed()
			.set instance void Microsoft.Test.DataServices.MyLibraryEnumerable::set_ChangedItemToBePassed(object)
		}
		.property instance int32 Count()
		{
			.get instance int32 Microsoft.Test.DataServices.MyLibraryEnumerable::get_Count()
		}
		.property instance int32 IndexToBePassed()
		{
			.get instance int32 Microsoft.Test.DataServices.MyLibraryEnumerable::get_IndexToBePassed()
			.set instance void Microsoft.Test.DataServices.MyLibraryEnumerable::set_IndexToBePassed(int32)
		}
		.property instance int32 NumGetEnumeratorCalls()
		{
			.get instance int32 Microsoft.Test.DataServices.MyLibraryEnumerable::get_NumGetEnumeratorCalls()
			.set instance void Microsoft.Test.DataServices.MyLibraryEnumerable::set_NumGetEnumeratorCalls(int32)
		}
	}
	.class public MyListSource
		extends [mscorlib]System.Object
		implements [System]System.ComponentModel.IListSource
	{
		.method public hidebysig specialname 
			instance class [mscorlib]System.Collections.ArrayList get_MyList()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MyList(class [mscorlib]System.Collections.ArrayList 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_ContainsListCollection()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ContainsListCollection(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IList GetList()
		{
			ret
		}
		.property instance bool ContainsListCollection()
		{
			.get instance bool Microsoft.Test.DataServices.MyListSource::get_ContainsListCollection()
			.set instance void Microsoft.Test.DataServices.MyListSource::set_ContainsListCollection(bool)
		}
		.property instance class [mscorlib]System.Collections.ArrayList MyList()
		{
			.get instance class [mscorlib]System.Collections.ArrayList Microsoft.Test.DataServices.MyListSource::get_MyList()
			.set instance void Microsoft.Test.DataServices.MyListSource::set_MyList(class [mscorlib]System.Collections.ArrayList)
		}
	}
	.class public MyPropeties
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor(object str, object i, object dble, object 'date', object b)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_MyString()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MyString(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [mscorlib]'System.Nullable`1'<int32> get_MyInteger()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MyInteger(valuetype [mscorlib]'System.Nullable`1'<int32> 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [mscorlib]'System.Nullable`1'<float64> get_MyDouble()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MyDouble(valuetype [mscorlib]'System.Nullable`1'<float64> 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [mscorlib]'System.Nullable`1'<valuetype [mscorlib]System.DateTime> get_MyDate()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MyDate(valuetype [mscorlib]'System.Nullable`1'<valuetype [mscorlib]System.DateTime> 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [mscorlib]'System.Nullable`1'<bool> get_MyBoolean()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MyBoolean(valuetype [mscorlib]'System.Nullable`1'<bool> 'value')
		{
			ret
		}
		.property instance valuetype [mscorlib]'System.Nullable`1'<bool> MyBoolean()
		{
			.get instance valuetype [mscorlib]'System.Nullable`1'<bool> Microsoft.Test.DataServices.MyPropeties::get_MyBoolean()
			.set instance void Microsoft.Test.DataServices.MyPropeties::set_MyBoolean(valuetype [mscorlib]'System.Nullable`1'<bool>)
		}
		.property instance valuetype [mscorlib]'System.Nullable`1'<valuetype [mscorlib]System.DateTime> MyDate()
		{
			.get instance valuetype [mscorlib]'System.Nullable`1'<valuetype [mscorlib]System.DateTime> Microsoft.Test.DataServices.MyPropeties::get_MyDate()
			.set instance void Microsoft.Test.DataServices.MyPropeties::set_MyDate(valuetype [mscorlib]'System.Nullable`1'<valuetype [mscorlib]System.DateTime>)
		}
		.property instance valuetype [mscorlib]'System.Nullable`1'<float64> MyDouble()
		{
			.get instance valuetype [mscorlib]'System.Nullable`1'<float64> Microsoft.Test.DataServices.MyPropeties::get_MyDouble()
			.set instance void Microsoft.Test.DataServices.MyPropeties::set_MyDouble(valuetype [mscorlib]'System.Nullable`1'<float64>)
		}
		.property instance valuetype [mscorlib]'System.Nullable`1'<int32> MyInteger()
		{
			.get instance valuetype [mscorlib]'System.Nullable`1'<int32> Microsoft.Test.DataServices.MyPropeties::get_MyInteger()
			.set instance void Microsoft.Test.DataServices.MyPropeties::set_MyInteger(valuetype [mscorlib]'System.Nullable`1'<int32>)
		}
		.property instance string MyString()
		{
			.get instance string Microsoft.Test.DataServices.MyPropeties::get_MyString()
			.set instance void Microsoft.Test.DataServices.MyPropeties::set_MyString(string)
		}
	}
	.class public MySlowDataSource
		extends [WindowsBase]System.Windows.Data.DataSourceProvider
	{
		.method family virtual hidebysig 
			instance void BeginQuery()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public MySort
		extends [mscorlib]System.Object
		implements [mscorlib]System.Collections.IComparer
	{
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type 'type', string propertyName)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance int32 Compare(object o1, object o2)
		{
			ret
		}
	}
	.class public MySourceA
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance class Microsoft.Test.DataServices.MySourceB get_A()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_A(class Microsoft.Test.DataServices.MySourceB 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class Microsoft.Test.DataServices.MySourceB A()
		{
			.get instance class Microsoft.Test.DataServices.MySourceB Microsoft.Test.DataServices.MySourceA::get_A()
			.set instance void Microsoft.Test.DataServices.MySourceA::set_A(class Microsoft.Test.DataServices.MySourceB)
		}
	}
	.class public MySourceB
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance class Microsoft.Test.DataServices.MySourceC get_B()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_B(class Microsoft.Test.DataServices.MySourceC 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class Microsoft.Test.DataServices.MySourceC srcC)
		{
			ret
		}
		.property instance class Microsoft.Test.DataServices.MySourceC B()
		{
			.get instance class Microsoft.Test.DataServices.MySourceC Microsoft.Test.DataServices.MySourceB::get_B()
			.set instance void Microsoft.Test.DataServices.MySourceB::set_B(class Microsoft.Test.DataServices.MySourceC)
		}
	}
	.class public MySourceC
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance int32 get_C()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_C(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 c)
		{
			ret
		}
		.property instance int32 C()
		{
			.get instance int32 Microsoft.Test.DataServices.MySourceC::get_C()
			.set instance void Microsoft.Test.DataServices.MySourceC::set_C(int32)
		}
	}
	.class public MyStar
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance string get_FirstName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_FirstName(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_LastName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LastName(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Age()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Age(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string firstName, string lastName, int32 age)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance int32 Age()
		{
			.get instance int32 Microsoft.Test.DataServices.MyStar::get_Age()
			.set instance void Microsoft.Test.DataServices.MyStar::set_Age(int32)
		}
		.property instance string FirstName()
		{
			.get instance string Microsoft.Test.DataServices.MyStar::get_FirstName()
			.set instance void Microsoft.Test.DataServices.MyStar::set_FirstName(string)
		}
		.property instance string LastName()
		{
			.get instance string Microsoft.Test.DataServices.MyStar::get_LastName()
			.set instance void Microsoft.Test.DataServices.MyStar::set_LastName(string)
		}
	}
	.class public NameAgeDataSource
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Name(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Age()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Age(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance int32 Age()
		{
			.get instance int32 Microsoft.Test.DataServices.NameAgeDataSource::get_Age()
			.set instance void Microsoft.Test.DataServices.NameAgeDataSource::set_Age(int32)
		}
		.property instance string Name()
		{
			.get instance string Microsoft.Test.DataServices.NameAgeDataSource::get_Name()
			.set instance void Microsoft.Test.DataServices.NameAgeDataSource::set_Name(string)
		}
	}
	.class public NameConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IMultiValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object[] values, class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object[] ConvertBack(object 'value', class [mscorlib]System.Type[] targetTypes, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public NonHierarchicalCustomIList
		extends Microsoft.Test.DataServices.CustomIList
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public PM
		extends Microsoft.Test.DataServices.Employee
	{
		.method public hidebysig specialname 
			instance void .ctor(string name, string phone, string team, int32 specsWritten)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_SpecsWritten()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_SpecsWritten(int32 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Title()
		{
			ret
		}
		.property instance int32 SpecsWritten()
		{
			.get instance int32 'Microsoft.Test.DataServices.PM'::get_SpecsWritten()
			.set instance void 'Microsoft.Test.DataServices.PM'::set_SpecsWritten(int32)
		}
		.property instance string Title()
		{
			.get instance string 'Microsoft.Test.DataServices.PM'::get_Title()
		}
	}
	.class public People
		extends class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Microsoft.Test.DataServices.Person>
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public PeopleAndPlaces
		extends [mscorlib]System.Collections.ArrayList
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public Person
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Name(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Nationality()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Nationality(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string name, string nationality)
		{
			ret
		}
		.property instance string Name()
		{
			.get instance string Microsoft.Test.DataServices.Person::get_Name()
			.set instance void Microsoft.Test.DataServices.Person::set_Name(string)
		}
		.property instance string Nationality()
		{
			.get instance string Microsoft.Test.DataServices.Person::get_Nationality()
			.set instance void Microsoft.Test.DataServices.Person::set_Nationality(string)
		}
	}
	.class public PieChart
		extends [PresentationFramework]System.Windows.Controls.Primitives.Selector
	{
		.method family virtual hidebysig 
			instance void OnItemTemplateChanged(class [PresentationFramework]System.Windows.DataTemplate oldItemTemplate, class [PresentationFramework]System.Windows.DataTemplate newItemTemplate)
		{
			ret
		}
		.method public static hidebysig 
			void SetTitle(class [WindowsBase]System.Windows.DependencyObject d, string name)
		{
			ret
		}
		.method public static hidebysig 
			string GetTitle(class [WindowsBase]System.Windows.DependencyObject d)
		{
			ret
		}
		.method family virtual hidebysig 
			instance bool IsItemItsOwnContainerOverride(object item)
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [WindowsBase]System.Windows.DependencyObject GetContainerForItemOverride()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty TitleProperty
	}
	.class public PiePanel
		extends [PresentationFramework]System.Windows.Controls.Canvas
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public static hidebysig 
			void SetValue(class [WindowsBase]System.Windows.DependencyObject d, float64 point)
		{
			ret
		}
		.method public static hidebysig 
			float64 GetValue(class [WindowsBase]System.Windows.DependencyObject d)
		{
			ret
		}
		.method public static hidebysig 
			void SetArc1(class [WindowsBase]System.Windows.DependencyObject d, float64 point)
		{
			ret
		}
		.method public static hidebysig 
			float64 GetArc1(class [WindowsBase]System.Windows.DependencyObject d)
		{
			ret
		}
		.method public static hidebysig 
			void SetArc2(class [WindowsBase]System.Windows.DependencyObject d, float64 point)
		{
			ret
		}
		.method public static hidebysig 
			float64 GetArc2(class [WindowsBase]System.Windows.DependencyObject d)
		{
			ret
		}
		.method public static hidebysig 
			void SetWedgeName(class [WindowsBase]System.Windows.DependencyObject d, string name)
		{
			ret
		}
		.method public static hidebysig 
			string GetWedgeName(class [WindowsBase]System.Windows.DependencyObject d)
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [WindowsBase]System.Windows.Size ArrangeOverride(valuetype [WindowsBase]System.Windows.Size arrangeSize)
		{
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty Arc1Property
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty Arc2Property
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ValueProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty WedgeNameProperty
	}
	.class public Place
		extends [mscorlib]System.Object
		implements [System]System.ComponentModel.INotifyPropertyChanged, [System]System.ComponentModel.IDataErrorInfo
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = { string('Item') }
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Name(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_State()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_State(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string name, string state)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_Error()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_Item(string propertyName)
		{
			ret
		}
		.event [System]System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			.addon instance void Microsoft.Test.DataServices.Place::add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void Microsoft.Test.DataServices.Place::remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
		}
		.property instance string Error()
		{
			.get instance string Microsoft.Test.DataServices.Place::get_Error()
		}
		.property instance string Item(string)
		{
			.get instance string Microsoft.Test.DataServices.Place::get_Item(string)
		}
		.property instance string Name()
		{
			.get instance string Microsoft.Test.DataServices.Place::get_Name()
			.set instance void Microsoft.Test.DataServices.Place::set_Name(string)
		}
		.property instance string State()
		{
			.get instance string Microsoft.Test.DataServices.Place::get_State()
			.set instance void Microsoft.Test.DataServices.Place::set_State(string)
		}
	}
	.class public PlaceConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IMultiValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object[] values, class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object[] ConvertBack(object 'value', class [mscorlib]System.Type[] targetTypes, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public Places
		extends class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Microsoft.Test.DataServices.Place>
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public PlacesBindingListT
		extends class 'Microsoft.Test.DataServices.FullBindingList`1'<class Microsoft.Test.DataServices.Place>
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public PlacesDataTable
		extends [System.Data]System.Data.DataTable
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public Player
		extends [mscorlib]System.Object
		implements [System]System.ComponentModel.INotifyPropertyChanged
	{
		.method public hidebysig specialname 
			instance string get_PlayerName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_PlayerName(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Votes()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Votes(int32 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.event [System]System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			.addon instance void Microsoft.Test.DataServices.Player::add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void Microsoft.Test.DataServices.Player::remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
		}
		.property instance string PlayerName()
		{
			.get instance string Microsoft.Test.DataServices.Player::get_PlayerName()
			.set instance void Microsoft.Test.DataServices.Player::set_PlayerName(string)
		}
		.property instance int32 Votes()
		{
			.get instance int32 Microsoft.Test.DataServices.Player::get_Votes()
			.set instance void Microsoft.Test.DataServices.Player::set_Votes(int32)
		}
	}
	.class public PopulationConverterClr
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public PopulationConverterXml
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public PropertyChangeInvalidatesAll
		extends [mscorlib]System.Object
		implements [System]System.ComponentModel.INotifyPropertyChanged
	{
		.method public hidebysig specialname 
			instance int32 get_Prop1()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Prop1(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Prop2()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Prop2(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_Prop3()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Prop3(float64 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.event [System]System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			.addon instance void Microsoft.Test.DataServices.PropertyChangeInvalidatesAll::add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void Microsoft.Test.DataServices.PropertyChangeInvalidatesAll::remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
		}
		.property instance int32 Prop1()
		{
			.get instance int32 Microsoft.Test.DataServices.PropertyChangeInvalidatesAll::get_Prop1()
			.set instance void Microsoft.Test.DataServices.PropertyChangeInvalidatesAll::set_Prop1(int32)
		}
		.property instance string Prop2()
		{
			.get instance string Microsoft.Test.DataServices.PropertyChangeInvalidatesAll::get_Prop2()
			.set instance void Microsoft.Test.DataServices.PropertyChangeInvalidatesAll::set_Prop2(string)
		}
		.property instance float64 Prop3()
		{
			.get instance float64 Microsoft.Test.DataServices.PropertyChangeInvalidatesAll::get_Prop3()
			.set instance void Microsoft.Test.DataServices.PropertyChangeInvalidatesAll::set_Prop3(float64)
		}
	}
	.class public PropertyChangedVerifier
		extends [mscorlib]System.Object
		implements [TestRuntime]Microsoft.Test.Verification.IVerifier
	{
		.method public hidebysig specialname 
			instance void .ctor(object o)
		{
			ret
		}
		.method public hidebysig 
			instance void ipc_PropertyChanged(object sender, class [System]System.ComponentModel.PropertyChangedEventArgs args)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [TestRuntime]Microsoft.Test.Verification.IVerifyResult Verify(object[] ExpectedState)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
	}
	.class public RangeRule
		extends [PresentationFramework]System.Windows.Controls.ValidationRule
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Min()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Min(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Max()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Max(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ErrorContent()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ErrorContent(string 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [PresentationFramework]System.Windows.Controls.ValidationResult Validate(object 'value', class [mscorlib]System.Globalization.CultureInfo cultureInfo)
		{
			ret
		}
		.property instance string ErrorContent()
		{
			.get instance string Microsoft.Test.DataServices.RangeRule::get_ErrorContent()
			.set instance void Microsoft.Test.DataServices.RangeRule::set_ErrorContent(string)
		}
		.property instance int32 Max()
		{
			.get instance int32 Microsoft.Test.DataServices.RangeRule::get_Max()
			.set instance void Microsoft.Test.DataServices.RangeRule::set_Max(int32)
		}
		.property instance int32 Min()
		{
			.get instance int32 Microsoft.Test.DataServices.RangeRule::get_Min()
			.set instance void Microsoft.Test.DataServices.RangeRule::set_Min(int32)
		}
	}
	.class public Region
		extends [mscorlib]System.Object
		implements [System]System.ComponentModel.INotifyPropertyChanged
	{
		.method public hidebysig specialname 
			instance string get_RegionName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_RegionName(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Microsoft.Test.DataServices.Country> get_Countries()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Countries(class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Microsoft.Test.DataServices.Country> 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string regionName, class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Microsoft.Test.DataServices.Country> countries)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.event [System]System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			.addon instance void Microsoft.Test.DataServices.Region::add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void Microsoft.Test.DataServices.Region::remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
		}
		.property instance class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Microsoft.Test.DataServices.Country> Countries()
		{
			.get instance class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Microsoft.Test.DataServices.Country> Microsoft.Test.DataServices.Region::get_Countries()
			.set instance void Microsoft.Test.DataServices.Region::set_Countries(class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Microsoft.Test.DataServices.Country>)
		}
		.property instance string RegionName()
		{
			.get instance string Microsoft.Test.DataServices.Region::get_RegionName()
			.set instance void Microsoft.Test.DataServices.Region::set_RegionName(string)
		}
	}
	.class public RegionsDataTable
		extends [System.Data]System.Data.DataTable
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public SQLDataSource
		extends [System.Data]System.Data.DataSet
	{
		.method public hidebysig specialname 
			instance void .ctor(string _sql, string _connection, string _table)
		{
			ret
		}
	}
	.class public SampleDataSet
		extends class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Microsoft.Test.DataServices.SampleRecord>
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public SampleRecord
		extends [mscorlib]System.Object
		implements [System]System.ComponentModel.INotifyPropertyChanged
	{
		.method public hidebysig specialname 
			instance void .ctor(int32 id)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string id)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_IntField()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IntField(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_StringField()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_StringField(string 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.event [System]System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			.addon instance void Microsoft.Test.DataServices.SampleRecord::add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void Microsoft.Test.DataServices.SampleRecord::remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
		}
		.property instance int32 IntField()
		{
			.get instance int32 Microsoft.Test.DataServices.SampleRecord::get_IntField()
			.set instance void Microsoft.Test.DataServices.SampleRecord::set_IntField(int32)
		}
		.property instance string StringField()
		{
			.get instance string Microsoft.Test.DataServices.SampleRecord::get_StringField()
			.set instance void Microsoft.Test.DataServices.SampleRecord::set_StringField(string)
		}
	}
	.class public SelectedItemSource
		extends [mscorlib]System.Object
		implements [System]System.ComponentModel.INotifyPropertyChanged
	{
		.method public hidebysig specialname 
			instance class Microsoft.Test.DataServices.Place get_PlaceSource()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_PlaceSource(class Microsoft.Test.DataServices.Place 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.event [System]System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			.addon instance void Microsoft.Test.DataServices.SelectedItemSource::add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void Microsoft.Test.DataServices.SelectedItemSource::remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
		}
		.property instance class Microsoft.Test.DataServices.Place PlaceSource()
		{
			.get instance class Microsoft.Test.DataServices.Place Microsoft.Test.DataServices.SelectedItemSource::get_PlaceSource()
			.set instance void Microsoft.Test.DataServices.SelectedItemSource::set_PlaceSource(class Microsoft.Test.DataServices.Place)
		}
	}
	.class public SelectedItemsVerifier
		extends [mscorlib]System.Object
		implements [TestRuntime]Microsoft.Test.Verification.IVerifier
	{
		.method public hidebysig specialname 
			instance void .ctor(class [PresentationFramework]System.Windows.Controls.ListBox sel)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [TestRuntime]Microsoft.Test.Verification.IVerifyResult Verify(object[] ExpectedState)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
	}
	.class public SelectedValueVerifier
		extends [mscorlib]System.Object
		implements [TestRuntime]Microsoft.Test.Verification.IVerifier
	{
		.method public hidebysig specialname 
			instance void .ctor(class [PresentationFramework]System.Windows.Controls.Primitives.Selector sel)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [TestRuntime]Microsoft.Test.Verification.IVerifyResult Verify(object[] expectedValues)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
	}
	.class public SimpleBook
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance string get_Title()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Title(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.Test.DataServices.SimpleBookStatus get_Status()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Status(valuetype Microsoft.Test.DataServices.SimpleBookStatus 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string title, valuetype Microsoft.Test.DataServices.SimpleBookStatus status)
		{
			ret
		}
		.property instance valuetype Microsoft.Test.DataServices.SimpleBookStatus Status()
		{
			.get instance valuetype Microsoft.Test.DataServices.SimpleBookStatus Microsoft.Test.DataServices.SimpleBook::get_Status()
			.set instance void Microsoft.Test.DataServices.SimpleBook::set_Status(valuetype Microsoft.Test.DataServices.SimpleBookStatus)
		}
		.property instance string Title()
		{
			.get instance string Microsoft.Test.DataServices.SimpleBook::get_Title()
			.set instance void Microsoft.Test.DataServices.SimpleBook::set_Title(string)
		}
	}
	.class public SimpleBookList
		extends class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Microsoft.Test.DataServices.SimpleBook>
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed SimpleBookStatus
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.Test.DataServices.SimpleBookStatus InStock = int32(0x00000000)
		.field static public literal valuetype Microsoft.Test.DataServices.SimpleBookStatus Ordered = int32(0x00000001)
		.field static public literal valuetype Microsoft.Test.DataServices.SimpleBookStatus OutOfPrint = int32(0x00000002)
	}
	.class public SlowDataItem
		extends [mscorlib]System.Object
		implements [System]System.ComponentModel.INotifyPropertyChanged
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_SlowValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_SlowValue(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_FastValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_FastValue(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_SlowValueEndResult()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.event [System]System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			.addon instance void Microsoft.Test.DataServices.SlowDataItem::add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void Microsoft.Test.DataServices.SlowDataItem::remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
		}
		.property instance string FastValue()
		{
			.get instance string Microsoft.Test.DataServices.SlowDataItem::get_FastValue()
			.set instance void Microsoft.Test.DataServices.SlowDataItem::set_FastValue(string)
		}
		.property instance string SlowValue()
		{
			.get instance string Microsoft.Test.DataServices.SlowDataItem::get_SlowValue()
			.set instance void Microsoft.Test.DataServices.SlowDataItem::set_SlowValue(string)
		}
		.property instance string SlowValueEndResult()
		{
			.get instance string Microsoft.Test.DataServices.SlowDataItem::get_SlowValueEndResult()
		}
	}
	.class public SlowRecord
		extends [mscorlib]System.Object
		implements [System]System.ComponentModel.INotifyPropertyChanged
	{
		.method public hidebysig specialname 
			instance void .ctor(int32 id)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string id)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_IntField()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IntField(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_StringField()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_StringField(string 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.event [System]System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			.addon instance void Microsoft.Test.DataServices.SlowRecord::add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void Microsoft.Test.DataServices.SlowRecord::remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
		}
		.property instance int32 IntField()
		{
			.get instance int32 Microsoft.Test.DataServices.SlowRecord::get_IntField()
			.set instance void Microsoft.Test.DataServices.SlowRecord::set_IntField(int32)
		}
		.property instance string StringField()
		{
			.get instance string Microsoft.Test.DataServices.SlowRecord::get_StringField()
			.set instance void Microsoft.Test.DataServices.SlowRecord::set_StringField(string)
		}
	}
	.class public SortDataItems
		extends class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Microsoft.Test.DataServices.SortItem>
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public SortDataItems1
		extends class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Microsoft.Test.DataServices.SortItem>
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public SortItem
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string name, float64 top)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Name(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_Top()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Top(float64 'value')
		{
			ret
		}
		.property instance string Name()
		{
			.get instance string Microsoft.Test.DataServices.SortItem::get_Name()
			.set instance void Microsoft.Test.DataServices.SortItem::set_Name(string)
		}
		.property instance float64 Top()
		{
			.get instance float64 Microsoft.Test.DataServices.SortItem::get_Top()
			.set instance void Microsoft.Test.DataServices.SortItem::set_Top(float64)
		}
	}
	.class public Star
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance bool get_ThrowExceptionOnSetter()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ThrowExceptionOnSetter(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_FirstName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_FirstName(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_LastName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LastName(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Age()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Age(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string firstName, string lastName, int32 age)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance int32 Age()
		{
			.get instance int32 Microsoft.Test.DataServices.Star::get_Age()
			.set instance void Microsoft.Test.DataServices.Star::set_Age(int32)
		}
		.property instance string FirstName()
		{
			.get instance string Microsoft.Test.DataServices.Star::get_FirstName()
			.set instance void Microsoft.Test.DataServices.Star::set_FirstName(string)
		}
		.property instance string LastName()
		{
			.get instance string Microsoft.Test.DataServices.Star::get_LastName()
			.set instance void Microsoft.Test.DataServices.Star::set_LastName(string)
		}
		.property instance bool ThrowExceptionOnSetter()
		{
			.get instance bool Microsoft.Test.DataServices.Star::get_ThrowExceptionOnSetter()
			.set instance void Microsoft.Test.DataServices.Star::set_ThrowExceptionOnSetter(bool)
		}
	}
	.class public StarVerifier
		extends [mscorlib]System.Object
		implements [TestRuntime]Microsoft.Test.Verification.IVerifier
	{
		.method public hidebysig specialname 
			instance void .ctor(class [PresentationFramework]System.Windows.Controls.ItemsControl ic)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [TestRuntime]Microsoft.Test.Verification.IVerifyResult Verify(object[] ExpectedState)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
	}
	.class public StaticProperty
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_StringProperty()
		{
			ret
		}
		.method public static hidebysig specialname 
			void set_StringProperty(string 'value')
		{
			ret
		}
		.property string StringProperty()
		{
			.get string Microsoft.Test.DataServices.StaticProperty::get_StringProperty()
			.set void Microsoft.Test.DataServices.StaticProperty::set_StringProperty(string)
		}
	}
	.class public StringFirstLetterConverter
		extends [mscorlib]System.Object
		implements [PresentationFramework]System.Windows.Data.IValueConverter
	{
		.method public final virtual hidebysig newslot 
			instance object Convert(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance object ConvertBack(object 'value', class [mscorlib]System.Type targetType, object parameter, class [mscorlib]System.Globalization.CultureInfo culture)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public SuperFilter
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor(string compareType, object FilterValue)
		{
			ret
		}
		.method public hidebysig 
			instance bool Contains(object item)
		{
			ret
		}
	}
	.class public SuperSort
		extends [mscorlib]System.Object
		implements [mscorlib]System.Collections.IComparer
	{
		.method public hidebysig specialname 
			instance void .ctor(valuetype [System]System.ComponentModel.ListSortDirection direction)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance int32 Compare(object o1, object o2)
		{
			ret
		}
	}
	.class public Team
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.property instance string Name()
		{
			.get instance string Microsoft.Test.DataServices.Team::get_Name()
		}
	}
	.class public TestException
		extends [mscorlib]System.Exception
	{
		.method public hidebysig specialname 
			instance void .ctor(string str)
		{
			ret
		}
	}
	.class public Tester
		extends Microsoft.Test.DataServices.Employee
	{
		.method public hidebysig specialname 
			instance void .ctor(string name, string phone, string team, int32 bugsOpened)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_BugsOpened()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BugsOpened(int32 'value')
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Title()
		{
			ret
		}
		.property instance int32 BugsOpened()
		{
			.get instance int32 Microsoft.Test.DataServices.Tester::get_BugsOpened()
			.set instance void Microsoft.Test.DataServices.Tester::set_BugsOpened(int32)
		}
		.property instance string Title()
		{
			.get instance string Microsoft.Test.DataServices.Tester::get_Title()
		}
	}
	.class public abstract sealed Util
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			bool CompareObjects(object a, object b)
		{
			ret
		}
		.method public static hidebysig 
			void AssertEquals(object obj1, object obj2)
		{
			ret
		}
		.method public static hidebysig 
			class [PresentationFramework]System.Windows.FrameworkElement FindElement(class [PresentationFramework]System.Windows.FrameworkElement element, string id)
		{
			ret
		}
		.method public static hidebysig 
			class [PresentationFramework]System.Windows.FrameworkElement[] FindElements(class [PresentationFramework]System.Windows.FrameworkElement element, string id)
		{
			ret
		}
		.method public static hidebysig 
			class [PresentationFramework]System.Windows.FrameworkElement[] FindElementsWithType(class [PresentationFramework]System.Windows.FrameworkElement element, class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public static hidebysig 
			class [PresentationFramework]System.Windows.FrameworkElement FindDataVisual(class [PresentationFramework]System.Windows.FrameworkElement element, object data)
		{
			ret
		}
		.method public static hidebysig 
			class [PresentationFramework]System.Windows.FrameworkElement[] FindDataVisuals(class [PresentationFramework]System.Windows.FrameworkElement element, class [mscorlib]System.Collections.IEnumerable dataCollection)
		{
			ret
		}
		.method public static hidebysig 
			class [WindowsBase]System.Windows.DependencyObject FindVisualByPropertyValue(class [WindowsBase]System.Windows.DependencyProperty dp, object 'value', class [WindowsBase]System.Windows.DependencyObject node, bool includeNode)
		{
			ret
		}
		.method public static hidebysig 
			class [WindowsBase]System.Windows.DependencyObject FindVisualByPropertyValue(class [WindowsBase]System.Windows.DependencyProperty dp, object 'value', class [WindowsBase]System.Windows.DependencyObject node)
		{
			ret
		}
		.method public static hidebysig 
			class [WindowsBase]System.Windows.DependencyObject FindVisualByPropertyValue(class [WindowsBase]System.Windows.DependencyProperty dp, object 'value', class [PresentationFramework]System.Windows.FrameworkElement RootElement)
		{
			ret
		}
		.method public static hidebysig 
			class [WindowsBase]System.Windows.DependencyObject FindVisualByType(class [mscorlib]System.Type 'type', class [WindowsBase]System.Windows.DependencyObject node, bool includeNode)
		{
			ret
		}
		.method public static hidebysig 
			class [WindowsBase]System.Windows.DependencyObject FindVisualByType(class [mscorlib]System.Type 'type', class [WindowsBase]System.Windows.DependencyObject node)
		{
			ret
		}
		.method public static hidebysig 
			class [WindowsBase]System.Windows.DependencyObject FindVisualByID(string id, class [WindowsBase]System.Windows.DependencyObject node)
		{
			ret
		}
		.method public static hidebysig 
			class [WindowsBase]System.Windows.DependencyObject FindVisualByID(string id, class [PresentationFramework]System.Windows.FrameworkElement RootElement)
		{
			ret
		}
	}
	.class public ValidationNonStaticVerifier
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance string get_Step()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Step(string 'value')
		{
			ret
		}
		.method public hidebysig 
			instance bool CheckHasError(class [PresentationFramework]System.Windows.Data.BindingExpressionBase bindingExpression, bool expected)
		{
			ret
		}
		.method public hidebysig 
			instance bool CheckValidationError(class [PresentationFramework]System.Windows.Data.BindingExpressionBase bindingExpression, class [PresentationFramework]System.Windows.Controls.ValidationError expectedVe)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance string Step()
		{
			.get instance string Microsoft.Test.DataServices.ValidationNonStaticVerifier::get_Step()
			.set instance void Microsoft.Test.DataServices.ValidationNonStaticVerifier::set_Step(string)
		}
	}
	.class public ValidationStaticVerifier
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance class [PresentationFramework]System.Windows.FrameworkElement get_Element()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Element(class [PresentationFramework]System.Windows.FrameworkElement 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Step()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Step(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [PresentationFramework]System.Windows.FrameworkElement element)
		{
			ret
		}
		.method public hidebysig 
			instance bool CheckHasError(bool expectedHasError)
		{
			ret
		}
		.method public hidebysig 
			instance bool CheckNumErrors(int32 expectedCount)
		{
			ret
		}
		.method public hidebysig 
			instance bool CheckValidationError(int32 veIndex, class [PresentationFramework]System.Windows.Controls.ValidationError expectedVe)
		{
			ret
		}
		.property instance class [PresentationFramework]System.Windows.FrameworkElement Element()
		{
			.get instance class [PresentationFramework]System.Windows.FrameworkElement Microsoft.Test.DataServices.ValidationStaticVerifier::get_Element()
			.set instance void Microsoft.Test.DataServices.ValidationStaticVerifier::set_Element(class [PresentationFramework]System.Windows.FrameworkElement)
		}
		.property instance string Step()
		{
			.get instance string Microsoft.Test.DataServices.ValidationStaticVerifier::get_Step()
			.set instance void Microsoft.Test.DataServices.ValidationStaticVerifier::set_Step(string)
		}
	}
	.class public Wedge
		extends [PresentationFramework]System.Windows.Controls.ContentControl
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [WindowsBase]System.Windows.Size ArrangeOverride(valuetype [WindowsBase]System.Windows.Size arrangeBounds)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnRender(class [PresentationCore]System.Windows.Media.DrawingContext drawingContext)
		{
			ret
		}
	}
	.class public Writer
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance string get_FirstName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_FirstName(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_LastName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LastName(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string firstName, string lastName)
		{
			ret
		}
		.property instance string FirstName()
		{
			.get instance string Microsoft.Test.DataServices.Writer::get_FirstName()
			.set instance void Microsoft.Test.DataServices.Writer::set_FirstName(string)
		}
		.property instance string LastName()
		{
			.get instance string Microsoft.Test.DataServices.Writer::get_LastName()
			.set instance void Microsoft.Test.DataServices.Writer::set_LastName(string)
		}
	}
	.class public Writers
		extends class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Microsoft.Test.DataServices.Writer>
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public XLinqViewProvider
		extends Microsoft.Test.DataServices.DataSourceViewProvider
	{
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Collections.IEnumerable data)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void AddCore(object item)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void RemoveCore(object item)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void SortCore(valuetype [WindowsBase]System.ComponentModel.SortDescription sortDescription)
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [System]System.ComponentModel.PropertyDescriptorCollection ConvertToCanonical(object item)
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [mscorlib]System.Collections.IEnumerable CreateDataSource(class [mscorlib]System.Collections.IEnumerable data)
		{
			ret
		}
	}
	.class public XmlBookAProxy
		extends Microsoft.Test.DataServices.XmlBookProxy
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public XmlBookBProxy
		extends Microsoft.Test.DataServices.XmlBookProxy
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public XmlBookListAProxy
		extends Microsoft.Test.DataServices.XmlBookListProxy
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public XmlBookListBProxy
		extends Microsoft.Test.DataServices.XmlBookListProxy
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public XmlBookListProxy
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig 
			instance class [System.Xml]System.Xml.XmlNodeList GetBooksA()
		{
			ret
		}
		.method public hidebysig 
			instance class [System.Xml]System.Xml.XmlNodeList GetBooksA(int32 startAt)
		{
			ret
		}
		.method public hidebysig 
			instance class [System.Xml]System.Xml.XmlNodeList GetBooksA(int32 startAt, int32 endBefore)
		{
			ret
		}
		.method public hidebysig 
			instance class [System.Xml]System.Xml.XmlNodeList GetBooksB()
		{
			ret
		}
		.method public hidebysig 
			instance class [System.Xml]System.Xml.XmlNodeList GetBooksB(int32 startAt)
		{
			ret
		}
		.method public hidebysig 
			instance class [System.Xml]System.Xml.XmlNodeList GetBooksB(int32 startAt, int32 endBefore)
		{
			ret
		}
		.field family class [System.Xml]System.Xml.XmlDocument doc
	}
	.class public XmlBookProxy
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig 
			instance class [System.Xml]System.Xml.XmlNode GetBookA()
		{
			ret
		}
		.method public hidebysig 
			instance class [System.Xml]System.Xml.XmlNode GetBookA(int32 a)
		{
			ret
		}
		.method public hidebysig 
			instance class [System.Xml]System.Xml.XmlNode GetBookA(int32 a, int32 b)
		{
			ret
		}
		.method public hidebysig 
			instance class [System.Xml]System.Xml.XmlNode GetBookB()
		{
			ret
		}
		.method public hidebysig 
			instance class [System.Xml]System.Xml.XmlNode GetBookB(int32 a)
		{
			ret
		}
		.method public hidebysig 
			instance class [System.Xml]System.Xml.XmlNode GetBookB(int32 a, int32 b)
		{
			ret
		}
		.field family float64 revision
	}
	.class public XmlViewProvider
		extends Microsoft.Test.DataServices.DataSourceViewProvider
	{
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Collections.IEnumerable data)
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [System]System.ComponentModel.PropertyDescriptorCollection ConvertToCanonical(object item)
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [mscorlib]System.Collections.IEnumerable CreateDataSource(class [mscorlib]System.Collections.IEnumerable data)
		{
			ret
		}
	}
	.class public aString
		extends [mscorlib]System.Object
		implements [System]System.ComponentModel.INotifyPropertyChanged
	{
		.method public hidebysig specialname 
			instance void .ctor(string Name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Name(string 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.event [System]System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			.addon instance void Microsoft.Test.DataServices.aString::add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void Microsoft.Test.DataServices.aString::remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
		}
		.property instance string Name()
		{
			.get instance string Microsoft.Test.DataServices.aString::get_Name()
			.set instance void Microsoft.Test.DataServices.aString::set_Name(string)
		}
	}
	.class public myStrings
		extends class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Microsoft.Test.DataServices.aString>
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
}
.namespace Microsoft.Test.Verifiers
{
	.class public sealed ActionCallback
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke()
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public abstract sealed NotificationEventsVerifier
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			void VerifyNotificationEvents(class Microsoft.Test.Verifiers.ActionCallback actionCallback, class [WindowsBase]System.Collections.Specialized.INotifyCollectionChanged collection, class [mscorlib]System.Type expectedExceptionType)
		{
			ret
		}
		.method public static hidebysig 
			void VerifyNotificationEvents(class Microsoft.Test.Verifiers.ActionCallback actionCallback, class [WindowsBase]System.Collections.Specialized.INotifyCollectionChanged collection, class [WindowsBase]System.Collections.Specialized.NotifyCollectionChangedEventArgs expectedEventArgs, string[] expectedPropertyNames)
		{
			.param [4]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
	}
	.class public VScanVerifier
		extends [mscorlib]System.Object
		implements [TestRuntime]Microsoft.Test.Verification.IVerifier
	{
		.method public hidebysig specialname 
			instance void .ctor(class [PresentationFramework]System.Windows.FrameworkElement target)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [TestRuntime]Microsoft.Test.Verification.IVerifyResult Verify(object[] expectedState)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class [TestRuntime]Microsoft.Test.Verification.IVerifyResult Verify(class [PresentationFramework]System.Windows.FrameworkElement expectedState)
		{
			ret
		}
		.method public hidebysig 
			instance class [TestRuntime]Microsoft.Test.Verification.IVerifyResult Verify(class [System.Drawing]System.Drawing.Bitmap expectedState)
		{
			ret
		}
	}
	.class public VScanVerifierResult
		extends [mscorlib]System.Object
		implements [TestRuntime]Microsoft.Test.Verification.IVerifyResult
	{
		.method public final virtual hidebysig newslot specialname 
			instance valuetype [TestRuntime]Microsoft.Test.Logging.TestResult get_Result()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_Result(valuetype [TestRuntime]Microsoft.Test.Logging.TestResult 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_Message()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_Message(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_DifferenceFileName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_DifferenceFileName(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ExpectedImageName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ExpectedImageName(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_RenderedImageName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_RenderedImageName(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance string DifferenceFileName()
		{
			.get instance string Microsoft.Test.Verifiers.VScanVerifierResult::get_DifferenceFileName()
			.set instance void Microsoft.Test.Verifiers.VScanVerifierResult::set_DifferenceFileName(string)
		}
		.property instance string ExpectedImageName()
		{
			.get instance string Microsoft.Test.Verifiers.VScanVerifierResult::get_ExpectedImageName()
			.set instance void Microsoft.Test.Verifiers.VScanVerifierResult::set_ExpectedImageName(string)
		}
		.property instance string Message()
		{
			.get instance string Microsoft.Test.Verifiers.VScanVerifierResult::get_Message()
			.set instance void Microsoft.Test.Verifiers.VScanVerifierResult::set_Message(string)
		}
		.property instance string RenderedImageName()
		{
			.get instance string Microsoft.Test.Verifiers.VScanVerifierResult::get_RenderedImageName()
			.set instance void Microsoft.Test.Verifiers.VScanVerifierResult::set_RenderedImageName(string)
		}
		.property instance valuetype [TestRuntime]Microsoft.Test.Logging.TestResult Result()
		{
			.get instance valuetype [TestRuntime]Microsoft.Test.Logging.TestResult Microsoft.Test.Verifiers.VScanVerifierResult::get_Result()
			.set instance void Microsoft.Test.Verifiers.VScanVerifierResult::set_Result(valuetype [TestRuntime]Microsoft.Test.Logging.TestResult)
		}
	}
}
