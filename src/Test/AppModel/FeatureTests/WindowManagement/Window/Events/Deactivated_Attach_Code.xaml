<!--**************************************************************************
//
// <copyright file="Deactivated_Attach_Code.xaml" company="Microsoft">
//    Copyright (C) Microsoft Corporation.  All rights reserved.
// </copyright>
//
// Description: Test for Attaching and firing Deactivated Event in Code
//
// History
  
//
//**************************************************************************-->


<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Class="Deactivated_Attach_Code"
     ContentRendered="OnContentRendered"
     Closed="OnClosed"
     Title="Avalon.Window.Test"
     Left="0"
     Top="0"
     Width="200"
     Height="200" xmlns:MappingPIGen1="clr-namespace:Microsoft.Windows.Test.Client.AppSec.BVT.ELCommon">
	    
		<StackPanel>
			<Button>Button1</Button>
		</StackPanel>
		
    <x:Code>
        <![CDATA[
            int ExpectedHitCount = 2;
            System.Timers.Timer timer;
            
            void OnDeactivated(object sender, EventArgs e)
            {
                Logger.RecordHit("OnDeactivated");
            }
            
            void OnContentRendered(object sender, EventArgs e)
            {
                timer = new System.Timers.Timer(5000);
                timer.Elapsed += new System.Timers.ElapsedEventHandler(FailControlTimer);
                timer.Start();
                                
                Logger.Status("Attaching Window.Deactivated Event Handler");
                this.Deactivated += new EventHandler(OnDeactivated);

                Window newWindow = new Window();
                newWindow.Show();

                Logger.Status("Activate Window");
                newWindow.Close();
                
                Logger.Status("Closing Window");
                this.Close();
            }

            void OnClosed(object sender, EventArgs e)
            {
                Logger.Status("[EXPECTED] HitCount = " + ExpectedHitCount.ToString());
                int ActualHitCount = Logger.GetHitCount("OnDeactivated");
                if (ActualHitCount != ExpectedHitCount)
                {
                    Logger.LogFail("[ACTUAL] HitCount = " + ActualHitCount.ToString());
                }
                else
                {
                    Logger.LogPass("[ACTUAL] HitCount = " + ActualHitCount.ToString());
                }   
            }

            void FailControlTimer(object sender, System.Timers.ElapsedEventArgs e)
            {
                Logger.LogFail("Fail Control Timer Elapsed");
                TestHelper.Current.TestCleanup();
            }
        ]]>
    </x:Code>
</Window>

