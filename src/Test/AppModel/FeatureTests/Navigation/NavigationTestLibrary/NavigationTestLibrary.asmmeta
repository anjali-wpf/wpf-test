#include "versions.h"
#include "ndp20.versions.h"

.assembly extern PresentationCore
{
	.publickeytoken = PRESENTATIONCORE_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver PRESENTATIONCORE_ASSEMBLY_VERSION_IL
}
.assembly extern PresentationFramework
{
	.publickeytoken = PRESENTATIONFRAMEWORK_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver PRESENTATIONFRAMEWORK_ASSEMBLY_VERSION_IL
}
.assembly extern System
{
	.publickeytoken = SYSTEM_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver SYSTEM_ASSEMBLY_VERSION_IL
}
.assembly extern TestRuntime
{
	.publickeytoken = TESTRUNTIME_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver TESTRUNTIME_ASSEMBLY_VERSION_IL
}
.assembly extern UIAutomationClient
{
	.publickeytoken = UIAUTOMATIONCLIENT_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver UIAUTOMATIONCLIENT_ASSEMBLY_VERSION_IL
}
.assembly extern UIAutomationTypes
{
	.publickeytoken = UIAUTOMATIONTYPES_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver UIAUTOMATIONTYPES_ASSEMBLY_VERSION_IL
}
.assembly extern WindowsBase
{
	.publickeytoken = WINDOWSBASE_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver WINDOWSBASE_ASSEMBLY_VERSION_IL
}
.assembly extern mscorlib
{
	.publickeytoken = MSCORLIB_20_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver MSCORLIB_20_ASSEMBLY_VERSION_IL
}
.assembly NavigationTestLibrary
{
	.custom instance void [mscorlib]System.CLSCompliantAttribute::.ctor(bool) = { bool(true) }
	.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = { bool(false) }
	.custom instance void [mscorlib]System.Security.AllowPartiallyTrustedCallersAttribute::.ctor() = { }
	.publickey = NAVIGATIONTESTLIBRARY_ASSEMBLY_PUBLIC_KEY_IL
	.hash algorithm 0x00008004
	.ver NAVIGATIONTESTLIBRARY_ASSEMBLY_VERSION_IL
}
.namespace Microsoft.Windows.Test.Client.AppSec.Navigation
{
	.class public AssemblyProxy
		extends [mscorlib]System.Object
	{
		.permissionset assert = (2E 01 80 86 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 52 65 66 6C 65 63 74 69 6F 6E 50 65 72 6D 69 73 73 69 6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 32 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 11 01 54 02 0C 55 6E 72 65 73 74 72 69 63 74 65 64 01)
		.method public hidebysig specialname 
			instance class [mscorlib]System.Collections.ArrayList get_Parameters()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Collections.ArrayList get_ParametersTypes()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig 
			instance void LoadFrom(string assemblyPath)
		{
			ret
		}
		.method public hidebysig 
			instance void Load(class [mscorlib]System.Reflection.Assembly asm)
		{
			ret
		}
		.method public hidebysig 
			instance void Load(string assemblyName)
		{
			ret
		}
		.method public hidebysig 
			instance object Construct(string typeName)
		{
			ret
		}
		.method public hidebysig 
			instance object Invoke(object constructedObject, string methodName)
		{
			ret
		}
		.method public hidebysig 
			instance object Invoke(string typeName, string methodName, object methodOwnerInstance)
		{
			ret
		}
		.method public hidebysig 
			instance object GetEnumValue(string name)
		{
			ret
		}
		.property instance class [mscorlib]System.Collections.ArrayList Parameters()
		{
			.get instance class [mscorlib]System.Collections.ArrayList Microsoft.Windows.Test.Client.AppSec.Navigation.AssemblyProxy::get_Parameters()
		}
		.property instance class [mscorlib]System.Collections.ArrayList ParametersTypes()
		{
			.get instance class [mscorlib]System.Collections.ArrayList Microsoft.Windows.Test.Client.AppSec.Navigation.AssemblyProxy::get_ParametersTypes()
		}
	}
	.class public AutomationIdsTable
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field static public literal string Edit = "@Item 32832"
		.field static public literal string EditCopy = "@Item 41026"
		.field static public literal string EditCut = "@Item 41025"
		.field static public literal string EditFind = "@Item 1091"
		.field static public literal string EditPaste = "@Item 41027"
		.field static public literal string EditSelectAll = "@Item 41028"
		.field static public literal string Favorites = "@Item 33136"
		.field static public literal string File = "@Item 32768"
		.field static public literal string FileClose = "@Item 40993"
		.field static public literal string FileEdit = "@Item 41030"
		.field static public literal string FileNew = "@Item 1"
		.field static public literal string FileNewWindow = "@Item 275"
		.field static public literal string FileOpen = "@Item 256"
		.field static public literal string FilePageSetup = "@Item 259"
		.field static public literal string FilePrint = "@Item 260"
		.field static public literal string FilePrintPreview = "@Item 277"
		.field static public literal string FileProperties = "@Item 262"
		.field static public literal string FileSave = "@Item 257"
		.field static public literal string FileSaveAs = "@Item 258"
		.field static public literal string FileWorkOffline = "@Item 40998"
		.field static public literal string Help = "@Item 33024"
		.field static public literal string Tools = "@Item 32960"
		.field static public literal string View = "@Item 32896"
		.field static public literal string ViewFullScreen = "@Item 41499"
		.field static public literal string ViewGoTo = "@Item 5"
		.field static public literal string ViewGoToBack = "@Item 41249"
		.field static public literal string ViewGoToForward = "@Item 41250"
		.field static public literal string ViewGoToHome = "@Item 41253"
		.field static public literal string ViewRefresh = "@Item 41504"
		.field static public literal string ViewSource = "@Item 3163"
		.field static public literal string ViewStatusBar = "@Item 41474"
		.field static public literal string ViewStop = "@Item 41498"
	}
	.class public BrowserHelper
		extends [mscorlib]System.Object
		implements [mscorlib]System.IDisposable
	{
		.permissionset assert = (2E 04 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69 6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 32 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 80 9D 02 54 55 7F 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 32 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C 61 67 73 02 00 00 00 54 02 0C 55 6E 72 65 73 74 72 69 63 74 65 64 01 80 82 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 46 69 6C 65 49 4F 50 65 72 6D 69 73 73 69 6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 32 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 11 01 54 02 0C 55 6E 72 65 73 74 72 69 63 74 65 64 01 80 87 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 45 6E 76 69 72 6F 6E 6D 65 6E 74 50 65 72 6D 69 73 73 69 6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 32 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 11 01 54 02 0C 55 6E 72 65 73 74 72 69 63 74 65 64 01 80 86 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 52 65 66 6C 65 63 74 69 6F 6E 50 65 72 6D 69 73 73 69 6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 32 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 11 01 54 02 0C 55 6E 72 65 73 74 72 69 63 74 65 64 01)
		.class nested family sealed EnumWindowsProc
			extends [mscorlib]System.MulticastDelegate
		{
			.method public hidebysig specialname 
				instance void .ctor(object 'object', native int 'method')
				runtime 
			{
			}
			.method public virtual hidebysig newslot 
				instance bool Invoke(native int hwnd, native int lparam)
				runtime 
			{
			}
			.method public virtual hidebysig newslot 
				instance class [mscorlib]System.IAsyncResult BeginInvoke(native int hwnd, native int lparam, class [mscorlib]System.AsyncCallback callback, object 'object')
				runtime 
			{
			}
			.method public virtual hidebysig newslot 
				instance bool EndInvoke(class [mscorlib]System.IAsyncResult result)
				runtime 
			{
			}
		}
		.class nested public sealed IEToolBarButton
			extends [mscorlib]System.Enum
		{
			.field public rtspecialname specialname int32 value__
			.field static public literal valuetype Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper/IEToolBarButton Back = int32(0x00000000)
			.field static public literal valuetype Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper/IEToolBarButton Favorites = int32(0x00000006)
			.field static public literal valuetype Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper/IEToolBarButton Forward = int32(0x00000001)
			.field static public literal valuetype Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper/IEToolBarButton History = int32(0x00000007)
			.field static public literal valuetype Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper/IEToolBarButton Home = int32(0x00000004)
			.field static public literal valuetype Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper/IEToolBarButton Refresh = int32(0x00000003)
			.field static public literal valuetype Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper/IEToolBarButton Search = int32(0x00000005)
			.field static public literal valuetype Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper/IEToolBarButton Stop = int32(0x00000002)
		}
		.class nested public sealed OSVersion
			extends [mscorlib]System.Enum
		{
			.field public rtspecialname specialname int32 value__
			.field static public literal valuetype Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper/OSVersion LonghornWithIE6 = int32(0x00000002)
			.field static public literal valuetype Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper/OSVersion LonghornWithIE7 = int32(0x00000003)
			.field static public literal valuetype Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper/OSVersion WindowsXPWithIE6 = int32(0x00000000)
			.field static public literal valuetype Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper/OSVersion WindowsXPWithIE7 = int32(0x00000001)
		}
		.class nested family sequential sealed 'RECT'
			extends [mscorlib]System.ValueType
		{
			.field public int32 left
			.field public int32 top
			.field public int32 right
			.field public int32 bottom
		}
		.class nested public sealed ResizeDirection
			extends [mscorlib]System.Enum
		{
			.field public rtspecialname specialname int32 value__
			.field static public literal valuetype Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper/ResizeDirection Bottom = int32(0x00000003)
			.field static public literal valuetype Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper/ResizeDirection BottomLeft = int32(0x00000007)
			.field static public literal valuetype Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper/ResizeDirection BottomRight = int32(0x00000006)
			.field static public literal valuetype Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper/ResizeDirection Left = int32(0x00000000)
			.field static public literal valuetype Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper/ResizeDirection Right = int32(0x00000002)
			.field static public literal valuetype Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper/ResizeDirection Top = int32(0x00000001)
			.field static public literal valuetype Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper/ResizeDirection TopLeft = int32(0x00000004)
			.field static public literal valuetype Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper/ResizeDirection TopRight = int32(0x00000005)
		}
		.class nested family sequential sealed 'WINDOWINFO'
			extends [mscorlib]System.ValueType
		{
			.field public int32 cbsize
			.field public valuetype Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper/'RECT' rcWindow
			.field public valuetype Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper/'RECT' rcClient
			.field public int32 dwStyle
			.field public int32 dwExStyle
			.field public int32 dwWindowStatus
			.field public int32 cxWindowBorders
			.field public int32 cyWindowBorders
			.field public int16 atomWindowType
			.field public int16 wCreatorversion
		}
		.method public hidebysig specialname 
			instance class Microsoft.Windows.Test.Client.AppSec.Navigation.IBrowserUIProvider get_BrowserUIHelper()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper/OSVersion get_Version()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper GetMainBrowserWindow(class [PresentationFramework]System.Windows.Application napp)
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper GetMainBrowserWindow(class [PresentationCore]System.Windows.Media.Visual visualInBrowserWindow)
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper GetEmptyBrowserWindow()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper GetBrowserWindow(string pathToApp)
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper BrowserHelperFromWindowHandle(native int topLevelIEHwnd)
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper[] BrowserHelperFromWindowTitle(string title)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Dispose()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Finalize()
		{
			ret
		}
		.method public static hidebysig 
			bool IsHostedInBrowser(class [PresentationCore]System.Windows.Media.Visual v)
		{
			ret
		}
		.method public hidebysig 
			instance bool MaximizeIEWindow()
		{
			ret
		}
		.method public hidebysig 
			instance bool MinimizeIEWindow()
		{
			ret
		}
		.method public hidebysig 
			instance bool RestoreIEWindow()
		{
			ret
		}
		.method public hidebysig 
			instance class [UIAutomationClient]System.Windows.Automation.AutomationElement ClickMenuSequence(string[] menu_sequence)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void MouseResize(valuetype Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper/ResizeDirection resize_direction, int32 x_quanta, int32 y_quanta)
		{
			ret
		}
		.method public hidebysig 
			instance void ClickToolBarButton(valuetype Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper/IEToolBarButton toolBarButton)
		{
			ret
		}
		.method public hidebysig 
			instance void ClickToolBarChevronItem(valuetype Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper/IEToolBarButton toolBarButton, int32 index)
		{
			ret
		}
		.method public hidebysig 
			instance string[] GetToolBarChevronItems(valuetype Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper/IEToolBarButton toolBarButton)
		{
			ret
		}
		.method public hidebysig 
			instance bool IsMenuEnabled(string[] menuSequence)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void EnsureToolBarVisible()
		{
			ret
		}
		.method public hidebysig 
			instance void EnsureStatusBarVisible()
		{
			ret
		}
		.method public hidebysig 
			instance void EnsureMenuBarVisible()
		{
			ret
		}
		.method public hidebysig 
			instance void EnsureAddressBarVisible()
		{
			ret
		}
		.method public hidebysig 
			instance void EnsureBackForwardButtonVisible()
		{
			ret
		}
		.method public hidebysig 
			instance string[] GetSubMenuAtLevel(string[] menu_sequence)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void WaitWhileBusy()
		{
			ret
		}
		.method public hidebysig 
			instance void Shutdown()
		{
			ret
		}
		.method public hidebysig 
			instance valuetype [WindowsBase]System.Windows.Rect AvalonContentBoundsFromBrowserHostedVisual(class [PresentationCore]System.Windows.Media.Visual visualHostedInBrowser)
		{
			ret
		}
		.method public hidebysig 
			instance valuetype [WindowsBase]System.Windows.Rect[] GetAvalonContentAreas()
		{
			ret
		}
		.method public hidebysig 
			instance valuetype [WindowsBase]System.Windows.Rect[] GetVisibleAvalonContentAreas()
		{
			ret
		}
		.method public hidebysig 
			instance bool IsFullyWithinScreenBounds()
		{
			ret
		}
		.method public hidebysig 
			instance void ClickOnHTMLLink(string LinkId)
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsMaximized()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsMinimized()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_StatusText()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_StatusZoneInfoText()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_WindowTitle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance native int get_WindowHandle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [UIAutomationClient]System.Windows.Automation.AutomationElement get_AutomationRoot()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.Windows.Test.Client.AppSec.Navigation.WebBrowserInteropProxy get_WebBrowser2Proxy()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_AddressBarUrl()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AddressBarUrl(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [WindowsBase]System.Windows.Rect get_IEWindowRect()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [WindowsBase]System.Windows.Rect get_IEClientRect()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_ContainsHTMLContent()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_ContentContainsAvalon()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_ContentIsWhollyAvalon()
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_HTMLContent()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_HostedDocumentType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Left()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Left(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Top()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Top(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Width()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Width(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Height()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Height(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Busy()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_BackButtonEnabled()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_ForwardButtonEnabled()
		{
			ret
		}
		.method public static hidebysig 
			class [UIAutomationClient]System.Windows.Automation.AutomationElement FindFirstSubElement(class [UIAutomationClient]System.Windows.Automation.AutomationElement rootelem, string 'value', class [UIAutomationTypes]System.Windows.Automation.AutomationProperty ap)
		{
			ret
		}
		.method public static hidebysig 
			class [UIAutomationClient]System.Windows.Automation.AutomationElementCollection FindAllSubElements(class [UIAutomationClient]System.Windows.Automation.AutomationElement rootelem, string 'value', class [UIAutomationTypes]System.Windows.Automation.AutomationProperty ap)
		{
			ret
		}
		.method public static hidebysig pinvokeimpl("dummy" winapi) 
			bool SetForegroundWindow(valuetype [mscorlib]System.Runtime.InteropServices.HandleRef hWnd)
			preservesig 
		{
		}
		.method family static hidebysig pinvokeimpl("dummy" winapi) 
			native int SetWindowLong(native int hWnd, int32 nIndex, int64 dwNewLong)
			preservesig 
		{
		}
		.method famorassem static hidebysig pinvokeimpl("dummy" winapi) 
			bool ShowWindow(native int hWnd, int32 swstyle)
			preservesig 
		{
		}
		.method famorassem static hidebysig pinvokeimpl("dummy" winapi) 
			bool IsIconic(native int hwnd)
			preservesig 
		{
		}
		.method famorassem static hidebysig pinvokeimpl("dummy" winapi) 
			bool IsZoomed(native int hwnd)
			preservesig 
		{
		}
		.method family static hidebysig pinvokeimpl("dummy" winapi) 
			native int GetParent(native int hwnd)
			preservesig 
		{
		}
		.method family static hidebysig pinvokeimpl("dummy" winapi) 
			bool GetWindowInfo(native int hwnd, [out] valuetype Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper/'WINDOWINFO'& pwi)
			preservesig 
		{
		}
		.method family static hidebysig pinvokeimpl("dummy" winapi) 
			int32 GetClassName(native int hwnd, [out] class [mscorlib]System.Text.StringBuilder lpClassName, int32 nMaxCount)
			preservesig 
		{
		}
		.method family static hidebysig pinvokeimpl("dummy" winapi) 
			bool EnumChildWindows(native int hWndParent, class Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper/EnumWindowsProc lpEnumFunc, native int lParam)
			preservesig 
		{
		}
		.method family static hidebysig pinvokeimpl("dummy" winapi) 
			native int FindWindowEx(native int hwndParent, native int hwndChildAfter, string lpszClass, string lpszWindow)
			preservesig 
		{
		}
		.method family static hidebysig pinvokeimpl("dummy" winapi) 
			native int FindWindow(string lpClassName, string lpWindowName)
			preservesig 
		{
		}
		.method family static hidebysig pinvokeimpl("dummy" winapi) 
			object marshal(interface) AccessibleObjectFromWindow(native int hwnd, int32 dwObjectID, [in] valuetype [mscorlib]System.Guid marshal(lpstruct) riid)
		{
		}
		.method family static hidebysig pinvokeimpl("dummy" winapi) 
			int32 AccessibleChildren(object marshal(interface) paccContainer, int32 iChildStart, int32 cChildren, [out] object[] rgvarChildren, [out] int32& pcObtained)
			preservesig 
		{
		}
		.method family static hidebysig pinvokeimpl("dummy" winapi) 
			int32 GetRoleText(int32 dwRole, [out] class [mscorlib]System.Text.StringBuilder lpszRole, int32 cchRoleMax)
			preservesig 
		{
		}
		.method public static hidebysig 
			class [UIAutomationClient]System.Windows.Automation.AutomationElement GetChromeBackButton()
		{
			ret
		}
		.method public static hidebysig 
			class [UIAutomationClient]System.Windows.Automation.AutomationElement GetChromeForwardButton()
		{
			ret
		}
		.method public static hidebysig 
			class [UIAutomationClient]System.Windows.Automation.AutomationElement GetJournalDropdownButton()
		{
			ret
		}
		.method public static hidebysig 
			string[] GetChevronItems(class [UIAutomationClient]System.Windows.Automation.AutomationElement navigationButton)
		{
			ret
		}
		.method public static hidebysig 
			string[] GetNames(class [UIAutomationClient]System.Windows.Automation.AutomationElementCollection ac)
		{
			ret
		}
		.method public static hidebysig 
			string[] GetForwardMenuChevronItems()
		{
			ret
		}
		.method public static hidebysig 
			string[] GetBackMenuChevronItems()
		{
			ret
		}
		.method public static hidebysig 
			void PrintArray(string[] a)
		{
			ret
		}
		.method public static hidebysig 
			bool IsSame(string[] a, string[] b)
		{
			ret
		}
		.method public static hidebysig 
			bool Match(string[] a, string[] b)
		{
			ret
		}
		.method public static hidebysig 
			void FindAndClickTextBlockHyperlink(string textBlockId)
		{
			ret
		}
		.method public static hidebysig 
			class [UIAutomationClient]System.Windows.Automation.AutomationElement FindAutomationElementById(class [UIAutomationClient]System.Windows.Automation.AutomationElement root, string id)
		{
			ret
		}
		.method public static hidebysig 
			void InvokeButton(string btnName, class [WindowsBase]System.Windows.DependencyObject searchFrom)
		{
			ret
		}
		.method public static hidebysig 
			void InvokeHyperlink(string hlinkName, class [WindowsBase]System.Windows.DependencyObject searchFrom)
		{
			ret
		}
		.method public static hidebysig 
			void NavigateHyperlinkViaEvent(string hlinkName, class [WindowsBase]System.Windows.DependencyObject searchFrom)
		{
			ret
		}
		.field static famorassem literal int32 'OBJID_WINDOW' = int32(0x00000000)
		.field static famorassem literal int32 'SW_MAXIMIZE' = int32(0x00000003)
		.field static famorassem literal int32 'SW_MINIMIZE' = int32(0x00000006)
		.field static famorassem literal int32 'SW_RESTORE' = int32(0x00000009)
		.field static famorassem literal int32 'SW_SHOW' = int32(0x00000005)
		.field static famorassem literal int32 'SW_SHOWNA' = int32(0x00000008)
		.property instance string AddressBarUrl()
		{
			.get instance string Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper::get_AddressBarUrl()
			.set instance void Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper::set_AddressBarUrl(string)
		}
		.property instance class [UIAutomationClient]System.Windows.Automation.AutomationElement AutomationRoot()
		{
			.get instance class [UIAutomationClient]System.Windows.Automation.AutomationElement Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper::get_AutomationRoot()
		}
		.property instance bool BackButtonEnabled()
		{
			.get instance bool Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper::get_BackButtonEnabled()
		}
		.property instance class Microsoft.Windows.Test.Client.AppSec.Navigation.IBrowserUIProvider BrowserUIHelper()
		{
			.get instance class Microsoft.Windows.Test.Client.AppSec.Navigation.IBrowserUIProvider Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper::get_BrowserUIHelper()
		}
		.property instance bool Busy()
		{
			.get instance bool Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper::get_Busy()
		}
		.property instance bool ContainsHTMLContent()
		{
			.get instance bool Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper::get_ContainsHTMLContent()
		}
		.property instance bool ContentContainsAvalon()
		{
			.get instance bool Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper::get_ContentContainsAvalon()
		}
		.property instance bool ContentIsWhollyAvalon()
		{
			.get instance bool Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper::get_ContentIsWhollyAvalon()
		}
		.property instance bool ForwardButtonEnabled()
		{
			.get instance bool Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper::get_ForwardButtonEnabled()
		}
		.property instance object HTMLContent()
		{
			.get instance object Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper::get_HTMLContent()
		}
		.property instance int32 Height()
		{
			.get instance int32 Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper::get_Height()
			.set instance void Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper::set_Height(int32)
		}
		.property instance string HostedDocumentType()
		{
			.get instance string Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper::get_HostedDocumentType()
		}
		.property instance valuetype [WindowsBase]System.Windows.Rect IEClientRect()
		{
			.get instance valuetype [WindowsBase]System.Windows.Rect Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper::get_IEClientRect()
		}
		.property instance valuetype [WindowsBase]System.Windows.Rect IEWindowRect()
		{
			.get instance valuetype [WindowsBase]System.Windows.Rect Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper::get_IEWindowRect()
		}
		.property instance bool IsMaximized()
		{
			.get instance bool Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper::get_IsMaximized()
		}
		.property instance bool IsMinimized()
		{
			.get instance bool Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper::get_IsMinimized()
		}
		.property instance int32 Left()
		{
			.get instance int32 Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper::get_Left()
			.set instance void Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper::set_Left(int32)
		}
		.property instance string StatusText()
		{
			.get instance string Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper::get_StatusText()
		}
		.property instance string StatusZoneInfoText()
		{
			.get instance string Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper::get_StatusZoneInfoText()
		}
		.property instance int32 Top()
		{
			.get instance int32 Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper::get_Top()
			.set instance void Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper::set_Top(int32)
		}
		.property instance valuetype Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper/OSVersion Version()
		{
			.get instance valuetype Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper/OSVersion Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper::get_Version()
		}
		.property instance class Microsoft.Windows.Test.Client.AppSec.Navigation.WebBrowserInteropProxy WebBrowser2Proxy()
		{
			.get instance class Microsoft.Windows.Test.Client.AppSec.Navigation.WebBrowserInteropProxy Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper::get_WebBrowser2Proxy()
		}
		.property instance int32 Width()
		{
			.get instance int32 Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper::get_Width()
			.set instance void Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper::set_Width(int32)
		}
		.property instance native int WindowHandle()
		{
			.get instance native int Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper::get_WindowHandle()
		}
		.property instance string WindowTitle()
		{
			.get instance string Microsoft.Windows.Test.Client.AppSec.Navigation.BrowserHelper::get_WindowTitle()
		}
	}
	.class public DispatcherSignalHelper
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public interface abstract IBrowserUIProvider
	{
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]'System.Collections.Generic.IDictionary`2'<string,class [UIAutomationClient]System.Windows.Automation.AutomationElement> GetAddressBarParts(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [UIAutomationClient]System.Windows.Automation.AutomationElement GetStandardButtonToolbar(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [UIAutomationClient]System.Windows.Automation.AutomationElement GetBackForwardButtonContainer(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [UIAutomationClient]System.Windows.Automation.AutomationElement GetMenuBar(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [UIAutomationClient]System.Windows.Automation.AutomationElement GetStatusBar(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string GetStatusText(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string GetStatusZoneInfoText(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_Description()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void InvokeGoBack(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void InvokeGoForward(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [UIAutomationClient]System.Windows.Automation.AutomationElement GetBackButton(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [UIAutomationClient]System.Windows.Automation.AutomationElement GetForwardButton(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [UIAutomationClient]System.Windows.Automation.AutomationElement GetRefreshButton(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [UIAutomationClient]System.Windows.Automation.AutomationElement GetStopLoadingButton(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void InvokeDropdownGoBack(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement, int32 dropdownIndex)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void InvokeDropdownGoForward(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement, int32 dropdownIndex)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void InvokeRefresh(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [System]'System.Collections.Generic.Stack`1'<string> GetBackChevronItems(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [System]'System.Collections.Generic.Stack`1'<string> GetForwardChevronItems(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void NavigateByAddressBar(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement, string uri)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Minimize(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Maximize(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Close(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
		}
		.property instance string Description()
		{
			.get instance string Microsoft.Windows.Test.Client.AppSec.Navigation.IBrowserUIProvider::get_Description()
		}
	}
	.class public IE7Proxy
		extends Microsoft.Windows.Test.Client.AppSec.Navigation.IEProxy
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Description()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]'System.Collections.Generic.IDictionary`2'<string,class [UIAutomationClient]System.Windows.Automation.AutomationElement> GetAddressBarParts(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [UIAutomationClient]System.Windows.Automation.AutomationElement GetBackForwardButtonContainer(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void InvokeDropdownGoBack(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement, int32 dropdownIndex)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void InvokeDropdownGoForward(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement, int32 dropdownIndex)
		{
			ret
		}
		.method family hidebysig 
			instance void ClickDropDown(class [UIAutomationClient]System.Windows.Automation.AutomationElement travelBand)
		{
			ret
		}
		.method family hidebysig 
			instance class [UIAutomationClient]System.Windows.Automation.AutomationElementCollection GetDropdownAutomationElements(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System]'System.Collections.Generic.Stack`1'<string> GetBackChevronItems(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System]'System.Collections.Generic.Stack`1'<string> GetForwardChevronItems(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [UIAutomationClient]System.Windows.Automation.AutomationElement GetRefreshButton(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
			ret
		}
		.property instance string Description()
		{
			.get instance string Microsoft.Windows.Test.Client.AppSec.Navigation.IE7Proxy::get_Description()
		}
	}
	.class public abstract IEProxy
		extends [mscorlib]System.Object
		implements Microsoft.Windows.Test.Client.AppSec.Navigation.IBrowserUIProvider
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [UIAutomationClient]System.Windows.Automation.AutomationElement GetStatusBar(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance string GetStatusText(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance string GetStatusZoneInfoText(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [UIAutomationClient]System.Windows.Automation.AutomationElement GetMenuBar(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
			ret
		}
		.method public virtual hidebysig newslot abstract 
			instance class [mscorlib]'System.Collections.Generic.IDictionary`2'<string,class [UIAutomationClient]System.Windows.Automation.AutomationElement> GetAddressBarParts(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [UIAutomationClient]System.Windows.Automation.AutomationElement GetBackForwardButtonContainer(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_Description()
		{
		}
		.method public final virtual hidebysig newslot 
			instance class [UIAutomationClient]System.Windows.Automation.AutomationElement GetStandardButtonToolbar(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.Windows.Test.Client.AppSec.Navigation.InteractionModes get_InteractionMode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_InteractionMode(valuetype Microsoft.Windows.Test.Client.AppSec.Navigation.InteractionModes 'value')
		{
			ret
		}
		.method public virtual hidebysig newslot abstract 
			instance void InvokeDropdownGoBack(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement, int32 dropdownIndex)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void InvokeDropdownGoForward(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement, int32 dropdownIndex)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [System]'System.Collections.Generic.Stack`1'<string> GetBackChevronItems(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [System]'System.Collections.Generic.Stack`1'<string> GetForwardChevronItems(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
		}
		.method public final virtual hidebysig newslot 
			instance void InvokeRefresh(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
			ret
		}
		.method family hidebysig 
			instance class [UIAutomationClient]System.Windows.Automation.AutomationElementCollection GetDesktopPopupItems()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [UIAutomationClient]System.Windows.Automation.AutomationElement GetBackButton(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [UIAutomationClient]System.Windows.Automation.AutomationElement GetForwardButton(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
			ret
		}
		.method public hidebysig 
			instance class [UIAutomationClient]System.Windows.Automation.AutomationElement FindAutomationElementById(class [UIAutomationClient]System.Windows.Automation.AutomationElement root, string id)
		{
			ret
		}
		.method public virtual hidebysig newslot abstract 
			instance class [UIAutomationClient]System.Windows.Automation.AutomationElement GetRefreshButton(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
		}
		.method public final virtual hidebysig newslot 
			instance class [UIAutomationClient]System.Windows.Automation.AutomationElement GetStopLoadingButton(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void InvokeGoBack(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void InvokeGoForward(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
			ret
		}
		.method family hidebysig 
			instance void InvokeIEDropdownItem(class [UIAutomationClient]System.Windows.Automation.AutomationElementCollection chevronItems, int32 dropdownIndex)
		{
			ret
		}
		.method family hidebysig 
			instance class [System]'System.Collections.Generic.Stack`1'<string> GetHistoryStack(class [UIAutomationClient]System.Windows.Automation.AutomationElementCollection allItems, int32 itemStart, int32 itemEnd)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void NavigateByAddressBar(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement, string uri)
		{
			ret
		}
		.method family hidebysig 
			instance void ClickElementWithAutomationId(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement, string id)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Minimize(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Maximize(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Close(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
			ret
		}
		.field family class [mscorlib]'System.Collections.Generic.Dictionary`2'<string,string> AutomationIds
		.property instance string Description()
		{
			.get instance string Microsoft.Windows.Test.Client.AppSec.Navigation.IEProxy::get_Description()
		}
		.property instance valuetype Microsoft.Windows.Test.Client.AppSec.Navigation.InteractionModes InteractionMode()
		{
			.get instance valuetype Microsoft.Windows.Test.Client.AppSec.Navigation.InteractionModes Microsoft.Windows.Test.Client.AppSec.Navigation.IEProxy::get_InteractionMode()
			.set instance void Microsoft.Windows.Test.Client.AppSec.Navigation.IEProxy::set_InteractionMode(valuetype Microsoft.Windows.Test.Client.AppSec.Navigation.InteractionModes)
		}
	}
	.class public interface abstract INavigationProvider
		implements Microsoft.Windows.Test.Client.AppSec.Navigation.IProvideJournalingState
	{
		.method public virtual hidebysig newslot abstract 
			instance void GoBack()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GoForward()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GoBack(int32 DropdownIndex)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GoForward(int32 DropdownIndex)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void FindAndClickLabelHyperlink(string labelId)
		{
		}
	}
	.class public interface abstract IProvideJournalingState
	{
		.method public virtual hidebysig newslot abstract 
			instance bool IsBackEnabled()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool IsBackEnabled(class [PresentationFramework]System.Windows.Controls.ContentControl c)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool IsForwardEnabled()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool IsForwardEnabled(class [PresentationFramework]System.Windows.Controls.ContentControl c)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string[] GetBackMenuItems()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string[] GetBackMenuItems(class [PresentationFramework]System.Windows.Controls.ContentControl c)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string[] GetForwardMenuItems()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string[] GetForwardMenuItems(class [PresentationFramework]System.Windows.Controls.ContentControl c)
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_WindowTitle()
		{
		}
		.property instance string WindowTitle()
		{
			.get instance string Microsoft.Windows.Test.Client.AppSec.Navigation.IProvideJournalingState::get_WindowTitle()
		}
	}
	.class public sealed InteractionModes
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.Windows.Test.Client.AppSec.Navigation.InteractionModes KeyboardShortcut = int32(0x00000000)
		.field static public literal valuetype Microsoft.Windows.Test.Client.AppSec.Navigation.InteractionModes Menu = int32(0x00000002)
		.field static public literal valuetype Microsoft.Windows.Test.Client.AppSec.Navigation.InteractionModes Mouse = int32(0x00000001)
	}
	.class public JournalHelper
		extends [mscorlib]System.Object
		implements Microsoft.Windows.Test.Client.AppSec.Navigation.IProvideJournalingState
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool IsBackEnabled(class [PresentationFramework]System.Windows.Controls.ContentControl c)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool IsForwardEnabled(class [PresentationFramework]System.Windows.Controls.ContentControl c)
		{
			ret
		}
		.method family hidebysig 
			instance string[] GetNames(class [mscorlib]System.Collections.IEnumerable stack)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance string[] GetBackMenuItems(class [PresentationFramework]System.Windows.Controls.ContentControl c)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance string[] GetForwardMenuItems(class [PresentationFramework]System.Windows.Controls.ContentControl c)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_WindowTitle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [PresentationFramework]System.Windows.Navigation.NavigationWindow navigationWindow)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationFramework]System.Windows.Navigation.NavigationWindow get_ActiveNavigationWindow()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ActiveNavigationWindow(class [PresentationFramework]System.Windows.Navigation.NavigationWindow 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool IsBackEnabled()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool IsForwardEnabled()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance string[] GetBackMenuItems()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance string[] GetForwardMenuItems()
		{
			ret
		}
		.property instance class [PresentationFramework]System.Windows.Navigation.NavigationWindow ActiveNavigationWindow()
		{
			.get instance class [PresentationFramework]System.Windows.Navigation.NavigationWindow Microsoft.Windows.Test.Client.AppSec.Navigation.JournalHelper::get_ActiveNavigationWindow()
			.set instance void Microsoft.Windows.Test.Client.AppSec.Navigation.JournalHelper::set_ActiveNavigationWindow(class [PresentationFramework]System.Windows.Navigation.NavigationWindow)
		}
		.property instance string WindowTitle()
		{
			.get instance string Microsoft.Windows.Test.Client.AppSec.Navigation.JournalHelper::get_WindowTitle()
		}
	}
	.class public NavigationHelper
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			void CreateLog(string testName)
		{
			ret
		}
		.method public static hidebysig 
			void Output(string statusMsg)
		{
			ret
		}
		.method public static hidebysig 
			void SetStage(valuetype [TestRuntime]Microsoft.Test.Logging.TestStage currStage)
		{
			ret
		}
		.method public static hidebysig 
			string GetTestName()
		{
			ret
		}
		.method public static hidebysig 
			void ExitWithError(string failMsg)
		{
			ret
		}
		.method public static hidebysig 
			void PassTest(string passMsg)
		{
			ret
		}
		.method public static hidebysig 
			bool CompareEventCounts()
		{
			ret
		}
		.method public static hidebysig 
			void FinishTest(bool passed)
		{
			ret
		}
		.method public static hidebysig 
			void Fail(string errorMsg)
		{
			ret
		}
		.method public static hidebysig 
			void Fail(string expectedResult, string actualResult)
		{
			ret
		}
		.method public static hidebysig 
			void Pass(string successMsg)
		{
			ret
		}
		.method public static hidebysig 
			void Shutdown()
		{
			ret
		}
		.method public static hidebysig 
			bool CompareFileNames(string expectedFileName, class [System]System.Uri actualFile)
		{
			ret
		}
		.method public static hidebysig 
			string getFileName(class [System]System.Uri bpu)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field static public int32 ActualEventTotal
		.field static public string ActualFileName
		.field static public int32 ActualTestCount
		.field static public int32 ExpectedEventTotal
		.field static public string ExpectedFileName
		.field static public int32 ExpectedTestCount
		.field static public int32 NumActualFragmentNavigationEvents
		.field static public int32 NumActualLoadCompletedEvents
		.field static public int32 NumActualNavigatedEvents
		.field static public int32 NumActualNavigatingEvents
		.field static public int32 NumActualNavigationFailedEvents
		.field static public int32 NumActualNavigationProgressEvents
		.field static public int32 NumActualNavigationStoppedEvents
		.field static public int32 NumExpectedFragmentNavigationEvents
		.field static public int32 NumExpectedLoadCompletedEvents
		.field static public int32 NumExpectedNavigatedEvents
		.field static public int32 NumExpectedNavigatingEvents
		.field static public int32 NumExpectedNavigationFailedEvents
		.field static public int32 NumExpectedNavigationProgressEvents
		.field static public int32 NumExpectedNavigationStoppedEvents
	}
	.class public NavigationState
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig 
			instance void RecordNavigationState(class Microsoft.Windows.Test.Client.AppSec.Navigation.IProvideJournalingState navProvider)
		{
			ret
		}
		.method public hidebysig 
			instance void RecordNavigationState(class Microsoft.Windows.Test.Client.AppSec.Navigation.IProvideJournalingState navProvider, string description)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool Equals(object obj)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ToString()
		{
			ret
		}
		.field public bool backButtonEnabled
		.field public string[] backStack
		.field public bool forwardButtonEnabled
		.field public string[] forwardStack
		.field public string stateDescription
		.field public string windowTitle
	}
	.class public NavigationStateCollection
		extends [mscorlib]System.Object
	{
		.custom instance void [mscorlib]System.Reflection.DefaultMemberAttribute::.ctor(string) = { string('Item') }
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.Windows.Test.Client.AppSec.Navigation.NavigationState get_Item(int32 index)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Item(int32 index, class Microsoft.Windows.Test.Client.AppSec.Navigation.NavigationState 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void RecordNewResult(class Microsoft.Windows.Test.Client.AppSec.Navigation.IProvideJournalingState navProvider)
		{
			ret
		}
		.method public hidebysig 
			instance void RecordNewResult(class Microsoft.Windows.Test.Client.AppSec.Navigation.IProvideJournalingState navProvider, string stepDesc)
		{
			ret
		}
		.method public hidebysig 
			instance void WriteResults(string filename)
		{
			ret
		}
		.method public hidebysig 
			instance void WriteResults(class [mscorlib]'System.IO.Stream' output)
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.Windows.Test.Client.AppSec.Navigation.NavigationStateCollection GetResults(class [mscorlib]'System.IO.Stream' input)
		{
			ret
		}
		.method public static hidebysig 
			bool Compare(class Microsoft.Windows.Test.Client.AppSec.Navigation.NavigationStateCollection actual, class Microsoft.Windows.Test.Client.AppSec.Navigation.NavigationStateCollection expected)
		{
			ret
		}
		.field public class [mscorlib]'System.Collections.Generic.List`1'<class Microsoft.Windows.Test.Client.AppSec.Navigation.NavigationState> states
		.property instance int32 Count()
		{
			.get instance int32 Microsoft.Windows.Test.Client.AppSec.Navigation.NavigationStateCollection::get_Count()
		}
		.property instance class Microsoft.Windows.Test.Client.AppSec.Navigation.NavigationState Item(int32)
		{
			.get instance class Microsoft.Windows.Test.Client.AppSec.Navigation.NavigationState Microsoft.Windows.Test.Client.AppSec.Navigation.NavigationStateCollection::get_Item(int32)
			.set instance void Microsoft.Windows.Test.Client.AppSec.Navigation.NavigationStateCollection::set_Item(int32, class Microsoft.Windows.Test.Client.AppSec.Navigation.NavigationState)
		}
	}
	.class public NavigationUtilities
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]System.Collections.IEnumerator GetForwardStack(class [PresentationFramework]System.Windows.Controls.ContentControl c)
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]System.Collections.IEnumerator GetBackStack(class [PresentationFramework]System.Windows.Controls.ContentControl c)
		{
			ret
		}
		.method public static hidebysig 
			class [PresentationFramework]System.Windows.Controls.Menu GetBackMenu(class [PresentationFramework]System.Windows.Navigation.NavigationWindow nw)
		{
			ret
		}
		.method public static hidebysig 
			class [PresentationFramework]System.Windows.Controls.Button GetBackButton(class [PresentationFramework]System.Windows.Navigation.NavigationWindow nw)
		{
			ret
		}
		.method public static hidebysig 
			class [PresentationFramework]System.Windows.Controls.Menu GetForwardMenu(class [PresentationFramework]System.Windows.Navigation.NavigationWindow nw)
		{
			ret
		}
		.method public static hidebysig 
			class [PresentationFramework]System.Windows.Controls.Button GetForwardButton(class [PresentationFramework]System.Windows.Navigation.NavigationWindow nw)
		{
			ret
		}
		.method public static hidebysig 
			void InvokeBackMenuEntry(class [PresentationFramework]System.Windows.Navigation.NavigationWindow navWin, int32 dropDownIndex)
		{
			ret
		}
		.method public static hidebysig 
			void InvokeForwardMenuEntry(class [PresentationFramework]System.Windows.Navigation.NavigationWindow navWin, int32 dropDownIndex)
		{
			ret
		}
		.method public static hidebysig 
			void InvokeMenuItem(class [PresentationFramework]System.Windows.Controls.Menu menu, int32 menuItemIndex, class [mscorlib]System.Collections.IEnumerable stack)
		{
			ret
		}
		.method public static hidebysig 
			bool CompareJournalStacks(class [mscorlib]System.Collections.IEnumerator actual, class [mscorlib]System.Collections.IEnumerator expected)
		{
			ret
		}
		.method public static hidebysig 
			void PrintJournalEntries(class [mscorlib]System.Collections.IEnumerator stack)
		{
			ret
		}
		.method public static hidebysig 
			void PrintForwardStack(class [PresentationFramework]System.Windows.Navigation.NavigationWindow navWin)
		{
			ret
		}
		.method public static hidebysig 
			void PrintBackStack(class [PresentationFramework]System.Windows.Navigation.NavigationWindow navWin)
		{
			ret
		}
		.method public static hidebysig 
			void PrintJournalEntries(class [PresentationFramework]System.Windows.Navigation.NavigationWindow navWin)
		{
			ret
		}
		.method public static hidebysig 
			bool VerifyJournalEntries(class [mscorlib]System.Collections.IEnumerator expectedBackStack, class [mscorlib]System.Collections.IEnumerator expectedForwardStack, class [PresentationFramework]System.Windows.Navigation.NavigationWindow navWin)
		{
			ret
		}
	}
	.class public TreeUtilities
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig 
			instance class [WindowsBase]System.Windows.DependencyObject FindElementByPropertyValue(class [WindowsBase]System.Windows.DependencyProperty dp, object 'value', class [WindowsBase]System.Windows.DependencyObject node, bool includeNode)
		{
			ret
		}
		.method public hidebysig 
			instance class [WindowsBase]System.Windows.DependencyObject FindElementByPropertyValue(class [WindowsBase]System.Windows.DependencyProperty dp, object 'value', class [WindowsBase]System.Windows.DependencyObject node)
		{
			ret
		}
		.method public hidebysig 
			instance class [WindowsBase]System.Windows.DependencyObject FindElementByID(string id, class [WindowsBase]System.Windows.DependencyObject node)
		{
			ret
		}
		.method public hidebysig 
			instance class [WindowsBase]System.Windows.DependencyObject FindVisualByType(class [mscorlib]System.Type 'type', class [WindowsBase]System.Windows.DependencyObject node, bool includeNode)
		{
			ret
		}
		.method public hidebysig 
			instance class [WindowsBase]System.Windows.DependencyObject FindVisualByType(class [mscorlib]System.Type 'type', class [WindowsBase]System.Windows.DependencyObject node)
		{
			ret
		}
		.method public hidebysig 
			instance class [WindowsBase]System.Windows.DependencyObject FindVisualByID(string id, class [WindowsBase]System.Windows.DependencyObject node)
		{
			ret
		}
		.method public hidebysig 
			instance class [WindowsBase]System.Windows.DependencyObject FindVisualByPropertyValue(class [WindowsBase]System.Windows.DependencyProperty dp, object 'value', class [WindowsBase]System.Windows.DependencyObject node, bool includeNode)
		{
			ret
		}
		.method public hidebysig 
			instance class [WindowsBase]System.Windows.DependencyObject FindVisualByPropertyValue(class [WindowsBase]System.Windows.DependencyProperty dp, object 'value', class [WindowsBase]System.Windows.DependencyObject node)
		{
			ret
		}
	}
	.class public VerificationJournalEntry
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Name(string 'value')
		{
			ret
		}
		.property instance string Name()
		{
			.get instance string Microsoft.Windows.Test.Client.AppSec.Navigation.VerificationJournalEntry::get_Name()
			.set instance void Microsoft.Windows.Test.Client.AppSec.Navigation.VerificationJournalEntry::set_Name(string)
		}
	}
	.class public WebBrowserInteropProxy
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(native int hWnd)
		{
			ret
		}
		.method public hidebysig 
			instance native int GetHwnd()
		{
			ret
		}
		.method public hidebysig 
			instance object InvokeMethodAllByVal(string name, object[] args)
		{
			ret
		}
		.method public hidebysig 
			instance object InvokeMethodAllByRef(string name, object[] args)
		{
			ret
		}
		.method public hidebysig 
			instance object InvokeMethod(string name, object[] args)
		{
			ret
		}
		.method public hidebysig 
			instance object GetProperty(string propertyName)
		{
			ret
		}
		.method public hidebysig 
			instance void SetProperty(string propertyName, object 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void NavigateAndWait(string pathOrUri)
		{
			ret
		}
		.method public hidebysig 
			instance void WaitWhileBusy()
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_InnerObject()
		{
			ret
		}
		.property instance object InnerObject()
		{
			.get instance object Microsoft.Windows.Test.Client.AppSec.Navigation.WebBrowserInteropProxy::get_InnerObject()
		}
	}
	.class public WindowsXPIE6Proxy
		extends Microsoft.Windows.Test.Client.AppSec.Navigation.IEProxy
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance string get_Description()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [mscorlib]'System.Collections.Generic.IDictionary`2'<string,class [UIAutomationClient]System.Windows.Automation.AutomationElement> GetAddressBarParts(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [UIAutomationClient]System.Windows.Automation.AutomationElement GetBackForwardButtonContainer(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void InvokeDropdownGoBack(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement, int32 dropdownIndex)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void InvokeDropdownGoForward(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement, int32 dropdownIndex)
		{
			ret
		}
		.method family hidebysig 
			instance void ClickDropDown(class [UIAutomationClient]System.Windows.Automation.AutomationElement button)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System]'System.Collections.Generic.Stack`1'<string> GetBackChevronItems(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
			ret
		}
		.method family hidebysig 
			instance class [System]'System.Collections.Generic.Stack`1'<string> GetChevronItems(class [UIAutomationClient]System.Windows.Automation.AutomationElement button)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [System]'System.Collections.Generic.Stack`1'<string> GetForwardChevronItems(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [UIAutomationClient]System.Windows.Automation.AutomationElement GetRefreshButton(class [UIAutomationClient]System.Windows.Automation.AutomationElement RootIEAutomationElement)
		{
			ret
		}
		.property instance string Description()
		{
			.get instance string Microsoft.Windows.Test.Client.AppSec.Navigation.WindowsXPIE6Proxy::get_Description()
		}
	}
}
.namespace Microsoft.Windows.Test.Client.AppSec.Navigation.Reflection
{
	.class public Utils
		extends [mscorlib]System.Object
	{
		.permissionset assert = (2E 01 80 86 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 52 65 66 6C 65 63 74 69 6F 6E 50 65 72 6D 69 73 73 69 6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 32 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 11 01 54 02 0C 55 6E 72 65 73 74 72 69 63 74 65 64 01)
		.method public static hidebysig 
			class [mscorlib]System.Reflection.Assembly LoadFrom(string assemblyPath)
		{
			.permissionset assert = (2E 01 80 82 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 46 69 6C 65 49 4F 50 65 72 6D 69 73 73 69 6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 32 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 11 01 54 02 0C 55 6E 72 65 73 74 72 69 63 74 65 64 01)
			ret
		}
		.method public static hidebysig 
			class [mscorlib]System.Reflection.Assembly Load(string assemblyName)
		{
			ret
		}
		.method public static hidebysig 
			string GetCodeBase(class [mscorlib]System.Reflection.Assembly a)
		{
			ret
		}
		.method public static hidebysig 
			object CreateInstance(class [mscorlib]System.Reflection.Assembly 'assembly', string typeName)
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]System.Type GetType(class [mscorlib]System.Reflection.Assembly 'assembly', string typeName)
		{
			ret
		}
		.method public static hidebysig 
			object Invoke(class [mscorlib]System.Reflection.MethodInfo 'method', object 'instance', object[] parameters)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
}
