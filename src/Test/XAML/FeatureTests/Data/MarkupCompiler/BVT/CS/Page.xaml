

<StackPanel xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
           xmlns:custom="clr-namespace:CustomControl;assembly=Library"
           xmlns:custom2="clr-namespace:Avalon.Test.ComponentModel"

    x:Class="Avalon.Test.ComponentModel.CSBVT"
    Loaded="OnLoaded" xmlns:MappingPIGen1="clr-namespace:CustomControl;assembly=Library" xmlns:MappingPIGen2="clr-namespace:Avalon.Test.ComponentModel">

    <custom:LibraryCSButton Click="HandleClick"
            Name="LibCSButton">Custom Control defined externally in CS</custom:LibraryCSButton>
    <!--<custom:LibraryXAMLButton Click="HandleClick"
            Name="LibXAMLButton">Custom Control defined externally in XAML</custom:LibraryXAMLButton>-->
    <custom2:LocalCSButton Click="HandleClick"
            x:Name="LocCSButton">Custom Control defined locally in CS</custom2:LocalCSButton>
    <custom2:LocalXAMLButton Click="HandleClick"
            x:Name="LocXAMLButton">Custom Control defined locally in XAML</custom2:LocalXAMLButton>

    <Button Name="GlobalText">Text using masculin, 按钮, ボタン, 단추, кнопка, κουμπί</Button>
    <Button Name="masculin">Name using Language1</Button>
    <Button Name="按钮">Name using Language2</Button>
    <Button Name="ボタン">Name using Language3</Button>
    <Button Name="단추">Name using Language4</Button>
    <Button Name="кнопка">Name using Language5</Button>
    <Button Name="κουμπί">Name using Language6</Button>

    <StackPanel Name="Wireup">
        <Button>No Name, No Event Handler</Button>
        <Button Name="Button2Wireup">Name, No Event Handler</Button>
        <Button Click="HandleButton3WireupClick">No Name, Event Handler</Button>
        <Button Name="Button4Wireup" Click="HandleButton4WireupClick">Name, Event Handler</Button>
    </StackPanel>

    <Button Click="HandleClickCodeBeside"
            Name="CodeBeside">Click Me</Button>

    <Button Click="HandleClickCodeBehind"
            Name="CodeBehind">Click Me</Button>

  <x:Code>
    <![CDATA[
        void HandleClickCodeBeside(object sender, RoutedEventArgs e)
        {
	    Console.WriteLine("We verified click handler defined in Code-Beside works.");
	    casePassed = true;
        }

    	void MethodInCodeBeside()
    	{
	    Console.WriteLine("We verified a method defined in Code-Beside can be called from Code-Behind.");	
	    
	    MethodInCodeBehind();
	}
    ]]>
  </x:Code>

</StackPanel>