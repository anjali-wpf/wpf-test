#include "versions.h"
#include "ndp20.versions.h"

.assembly extern PresentationCore
{
	.publickeytoken = PRESENTATIONCORE_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver PRESENTATIONCORE_ASSEMBLY_VERSION_IL
}
.assembly extern PresentationFramework
{
	.publickeytoken = PRESENTATIONFRAMEWORK_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver PRESENTATIONFRAMEWORK_ASSEMBLY_VERSION_IL
}
.assembly extern System.Xml
{
	.publickeytoken = SYSTEM_XML_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver SYSTEM_XML_ASSEMBLY_VERSION_IL
}
.assembly extern TestRuntime
{
	.publickeytoken = TESTRUNTIME_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver TESTRUNTIME_ASSEMBLY_VERSION_IL
}
.assembly extern WindowsBase
{
	.publickeytoken = WINDOWSBASE_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver WINDOWSBASE_ASSEMBLY_VERSION_IL
}
.assembly extern mscorlib
{
	.publickeytoken = MSCORLIB_20_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver MSCORLIB_20_ASSEMBLY_VERSION_IL
}
.assembly GlobalizationTestCommon
{
	.custom instance void [mscorlib]System.CLSCompliantAttribute::.ctor(bool) = { bool(true) }
	.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = { bool(false) }
	.custom instance void [mscorlib]System.Security.AllowPartiallyTrustedCallersAttribute::.ctor() = { }
	.permissionset reqmin = (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69 6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 32 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 15 01 54 02 10 53 6B 69 70 56 65 72 69 66 69 63 61 74 69 6F 6E 01)
	.publickey = GLOBALIZATIONTESTCOMMON_ASSEMBLY_PUBLIC_KEY_IL
	.hash algorithm 0x00008004
	.ver GLOBALIZATIONTESTCOMMON_ASSEMBLY_VERSION_IL
}
.namespace Microsoft.Test.Globalization
{
	.class public BamlLocalizabilityByReflection
		extends [PresentationFramework]System.Windows.Markup.Localizer.BamlLocalizabilityResolver
	{
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Reflection.Assembly[] assemblies)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public virtual hidebysig 
			instance class [PresentationFramework]System.Windows.Markup.Localizer.ElementLocalizability GetElementLocalizability(string 'assembly', string className)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [PresentationCore]System.Windows.LocalizabilityAttribute GetPropertyLocalizability(string 'assembly', string className, string 'property')
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ResolveFormattingTagToClass(string formattingTag)
		{
			ret
		}
		.method public virtual hidebysig 
			instance string ResolveAssemblyFromClass(string className)
		{
			ret
		}
	}
	.class public CommonLib
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			class [mscorlib]'System.IO.Stream' LoadTestFile(string filename)
		{
			ret
		}
		.method public static hidebysig 
			void ErrorLogShow(string log)
		{
			ret
		}
		.method public static hidebysig 
			class [WindowsBase]System.Windows.DependencyObject FindElementByID(string id, class [WindowsBase]System.Windows.DependencyObject node)
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]'System.IO.Stream' ConstructBamlStream(string fileName)
		{
			ret
		}
		.method public hidebysig 
			instance void ConvertXmlElementToBamlRecord(class [System.Xml]System.Xml.XmlElement node, class [TestRuntime]Microsoft.Test.Serialization.BamlWriterWrapper writer)
		{
			ret
		}
		.method public static hidebysig 
			void DumpTestBamlStream(class [mscorlib]'System.IO.Stream' 'stream', string filename)
		{
			ret
		}
		.method public hidebysig 
			instance int32 CompareBamlStreams(class [mscorlib]'System.IO.Stream' first, class [mscorlib]'System.IO.Stream' second)
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]System.Collections.ArrayList ParseBamlStreamList(string filename, string extractdir)
		{
			ret
		}
		.method public static hidebysig 
			class [PresentationCore]System.Windows.UIElement LoadXamlFromSiteOfOrigin(string filename)
		{
			ret
		}
		.method public static hidebysig 
			string DumpBamlToString(string filename)
		{
			ret
		}
		.method public static hidebysig 
			string GetAssemblyVersion(string filename)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public PackUriHelper
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			void RegisterPackScheme()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field static public initonly string UriSchemePack
	}
}
